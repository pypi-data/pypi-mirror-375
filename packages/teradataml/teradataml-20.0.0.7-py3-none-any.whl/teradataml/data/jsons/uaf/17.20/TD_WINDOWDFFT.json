{
    "FuncName" : "TD_WINDOWDFFT",
    "FuncDescriptionShort" : "windowed fast fourier transform",
    "FuncDescriptionLong" : [
      "TD_WINDOWDFFT applies a user-selected window to data before processing it with TD_DFFT. Windows are used to remove noise or spectral leakage. The window type is determined for the specific use case based on signal frequency, amplitude, strength and so on." ],
    "FunctionVersion": "1",
    "JSONVersion" : "1",
    "FunctionCategory": "Digital Signal Processing",
    "MaxInputFiles": 1,
    "FuncRName":"td_Window_DFFT",
    "IsPlottable" : true,
    "InputFmt" : false,
    "OutputFmt": [
                {   
                        "Name": "CONTENT",
                        "Type": "string",
                        "Optional": true,
                        "PermittedValues": [
                                "COMPLEX",
                                "AMPL_PHASE_RADIANS",
                                "AMPL_PHASE_DEGREES",
                                "AMPL_PHASE",
                                "MULTIVAR_COMPLEX",
                                "MULTIVAR_AMPL_PHASE_RADIANS",
                                "MULTIVAR_AMPL_PHASE_DEGREES",
                                "MULTIVAR_AMPL_PHASE"
                        ],  
                        "Description": [
                                "The OUTPUT_FMT (CONTENT()) construct can be used by the data scientist to choose how they would like their Fourier coefficients to be output. They can use CONTENT(COMPLEX) or CONTENT(MULTIVAR_COMPLEX) to request the Fourier coefficients in rectangular form.  Alternatively, they can use CONTENT(AMPL_PHASE_RADIANS), CONTENT(AMPL_PHASE_DEGREES), CONTENT(AMPL_PHASE), CONTENT(MULTIVAR_AMPL_PHASE_RADIANS), CONTENT(MULTIVAR_AMPL_PHASE), or CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) to request that the Fourier coefficients be output in the polar form; and to further request the phase to be output in radians or degrees. ",
                                "AMPL_PHASE is one of the permitted values, it is synonymous with AMPL_PHASE_RADIANS. Similarly MULTIVAR_AMPL_PHASE is equivalent to MULTIVAR_AMPL_PHASE_RADIANS.",
                                "The default value is dependent on the datatype of the input series; a single var input will generate COMPLEX output CONTENT by default; a multi var input will generate MULTIVAR_COMPLEX output CONTENT by default."
                        ],
                        "LangName": "output_fmt_content"
                }
    ],
    "Input": [
                {
                        "Type": [
                                "SERIES",
                                "ART"
                        ],
                        "Description": [
                                "a logical-runtime series - time series or spatial series - as an input"
                        ],
                        "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
                        "Optional": false
                }
        ],
    "Output": [
                {
                        "Type": "ART",
                        "PrimaryLayer": true,
                        "LayerName": "ARTPRIMARY",
                        "ResultTableColumnTypes": [
                                "integer",
                                "float",
                                "float"
                        ],
                        "Description": [
                                "The result series is always a multivariate series containing Fourier coefficients, whose elements are either complex numbers with real and imaginary component",
                                "The TD_DFFT function returns only a primary result set.   There are no secondary or tertiary result sets produced by this function.  ",
                                "The primary result set can be accessed either via a subsequent SELECT * FROM <art table> statement or by issuing a TD_EXTRACT_RESULTS(...,LAYER(ARTPRIMARY),...) .",
                                "The data scientist has the choice of outputting the result set with the produced  Fourier Coefficients being realized in the form of: complex numbers - OUTPUT_FMT(CONTENT(COMPLEX) | CONTENT(MULTIVAR_COMPLEX)); or, in polar form, meaning in the form of amplitude and phase number pairs - OUTPUT_FMT(CONTENT(AMPL_PHASE_RADIANS) | CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE) | CONTENT(MULTIVAR_AMPL_PHASE_RADIANS)  | CONTENT(AMPL_PHASE_RADIANS) | CONTENT(MULTIVAR_AMPL_PHASE) ).  This will, of course, affect the composition of the produced output columns.",
                                "The TD_DFFT functions comes with many options relative to the contents of the output rows.  The data scientist has both the ability to affect the style of index used within the result series, as well as whether the Fourier coefficients should be output in rectangular (complex number) or polar (amplitude-phase) form.  Using the FREQ_STYLE and K_HERTZ parameters, the data scientist can choose between different ways of outputting the \"index\" associated with the output series of Fourier coefficients, choosing between: a simple monotonically increasing integer index; an index based on the normalized sample rate; an index based on radians; and, an index based on the original sampling frequency used to capture the series.  See FREQ_STYLE section which follows, for additional information. ",
                                "The OUTPUT_FMT (CONTENT()) construct can be used by the data scientist to choose how they would like their Fourier coefficients to be output.  The can use CONTENT(COMPLEX) or CONTENT(MULTIVAR_COMPLEX) to request the Fourier coefficients in rectangular form.  Alternatively, they can use CONTENT(AMPL_PHASE_RADIANS), CONTENT(AMPL_PHASE_DEGREES), CONTENT(AMPL_PHASE), CONTENT(MULTIVAR_AMPL_PHASE_RADIANS), CONTENT(MULTIVAR_AMPL_PHASE), or CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) to request that the Fourier coefficients be output in the polar form; and to further request the phase to be output in radians or degrees. "
                        ],
                        "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field"
                }
        ],
    "Params" : 
     [
        {
                "Name" : "DFFT",
                "Type" : "record",
                "Optional" : true,
                "Description": "",
                "NestedParams" :
                [
                    {
                        "Name" : "ALGORITHM",
                        "Type" : "string",
                        "PermittedValues" : ["COOLEY_TUKEY", "SINGLETON"],
                        "Optional" : true,
                        "Description": [
                                "The user-defined algorithm that bypasses the internal DFFT planner, and influences the core DFFT algorithm associated with the primary DFFT calculation.Choices are COOLEY_TUKEY, or SINGLETON. When this parameter is not present, then the internal DFFT planner selects the most efficient algorithm for the operation. For best performance, do not include this parameter. Instead, let the internal DFFT planner to select the best algorithm."
                        ]
                    },
                    {
                        "Name" : "ZERO_PADDING_OK",
                        "Type" : "integer",
                        "Optional" : true,
                        "DefaultValue": 1,
                        "PermittedValues": [ 0, 1 ],
                        "Description": [
                                "The number of zeros to add to the end of a given series to achieve a more efficient computation of the Fast Fourier Transform coefficients. A value of 1 means true, and a value of 0 means false. The default is 1. For best results, use 1."
                        ]
                        
                    },
                    {
                        "Name" : "FREQ_STYLE",
                        "Type" : "string",
                        "PermittedValues" : ["K_INTEGRAL", "K_SAMPLE_RATE", "K_RADIANS", "K_HERTZ"],
                        "Optional" : true,
                        "DefaultValue": "K_INTEGRAL",
                        "Description": [
                                "The format or values associated with the x-axis of the output. Choices are:",
                                "K_INTEGRAL: Integer representation.",
                                "K_SAMPLE_RATE: Integer normalized to number entries, with ranges from -0.5 to +0.5.",
                                "K_RADIANS: Radian ranges from -pi to +pi",
                                "K_HERTZ: Frequency in hertz. Must be used in conjunction with HERTZ_SAMPLE_RATE.",
                                "The default is K_INTEGRAL."
                        ]
                    },
                    {
                        "Name" : "HERTZ_SAMPLE_RATE",
                        "Type" : "double",
                        "Optional" : true,
                        "LowerBound": 0,
                        "LowerBoundType": "EXCLUSIVE",
                        "AllowNaN": false,
                        "Description": [
                                "The sample rate as a floating point constant, in hertz. A value of 10000.0 indicates that the sample points were obtained by sampling at a rate of 10,000 hertz. This parameter is only valid with the FREQ_STYLE(K_HERTZ) parameter."
                        ]
                    },
                    {
                        "Name" : "HUMAN_READABLE",
                        "Type" : "integer",
                        "Optional" : true,
                        "DefaultValue": 1,
                        "PermittedValues": [ 0, 1 ],
                        "Description": [
                                "Indicator to determine whether the produced output rows are in human-readable or plottable form, or the output is in the raw-form. Human-readable output is symmetric around 0, such as -3, -2, -1, 0, 1, 2, 3. Raw output is sequential, starting at zero, such as 0, 1, 2, 3. A value of 1 means true, and the output is in human readable form. A value of 0 means false, and the output is in raw form. The default is 1."
                        ]
                    }
                ]
        },
        {
                "Name" : "WINDOW",
                "Type" : "record",
                "Optional" : true,
                "Description": "",
                "NestedParams" :
                [
                    {
                        "Name" : "SIZE",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "NUM",
                                "Type" : "integer",
                                "Optional" : true,
                                "LowerBound": 0,
                        "LowerBoundType": "EXCLUSIVE",
                        "Description": [
                                "Size of the window. Must be greater than zero. Note: Specify either this parameter or WINDOW( SIZE ( PERC ) )."
                        ]
                            },
                            {
                                "Name" : "PERC",
                                "Type" : "double",
                                "Optional" : true,
                                "LowerBound": 0,
                        "LowerBoundType": "EXCLUSIVE",
                        "Description": [
                                "Size of the window within a series as a percentage. Must be greater than zero. For example, use 80 for 80%."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "OVERLAP",
                        "Type" : "integer",
                        "Optional" : true,
                        "DefaultValue": 0,
                        "Description": [
                                "The number of values the window slides down for each DFFT calculation within a series. The value must be less than the window size. The default is zero.To use fraction form, use WINDOW(OVERLAP(PERC))"
                        ]
                    },
                    {
                        "Name" : "IS_SYMMETRIC",
                        "Type" : "integer",
                        "Optional" : true,
                        "DefaultValue": 1,
                        "PermittedValues": [ 0, 1],
                        "Description": [
                                "Indicator to use a symmetric or periodic window. Value of 1 indicates symmetric, and value of 0 indicates periodic. The default is 1."
                        ]
                    },
                    {
                        "Name" : "SCALE",
                        "Type" : "string",
                        "PermittedValues" : ["DENSITY", "SPECTRUM"],
                        "Optional" : true,
                        "Description": [
                                "The spectral density type applied to the result values. Options are DENSITY and SPECTRUM."
                        ]
                    },
                    {
                        "Name" : "TYPE",
                        "Type" : "string",
                        "Optional" : true,
                        "PermittedValues" :
                        [
                            "BARTHANN",
                            "BARTLETT",
                            "BLACKMAN",
                            "BLACKMANHARRIS",
                            "BOHMAN",
                            "BOXCAR",
                            "COSINE",
                            "EXPONENTIAL",
                            "FLATTOP",
                            "GAUSSIAN",
                            "GENERAL_COSINE",
                            "GENERAL_GAUSSIAN",
                            "GENERAL_HAMMING",
                            "HAMMING",
                            "HANN",
                            "KAISER",
                            "NUTTALL",
                            "PARZEN",
                            "TAYLOR",
                            "TRIANG",
                            "TUKEY"
                        ],
                        "Description": [
                                "The type of window to use. Note: Some windows have additional options such as Taylor, in which case refer to the Taylor parameter for specific Taylor window options."
                        ]
                    },
                    {
                        "Name" : "EXPONENTIAL",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "CENTER",
                                "Type" : "double",
                                "Optional" : true,
                                "DefaultValue": null,
                                "Description": [
                                    "The center of the window. It is a parameter for WINDOW( TYPE( EXPONENTIAL ) ). The default value is (windowSize - 1 ) / 2."
                                ]
                            },
                            {
                                "Name" : "TAU",
                                "Type" : "double",
                                "Optional" : true,
                                "Description": [
                                "The amount of window decay. It is a parameter for WINDOW( TYPE( EXPONENTIAL ) ). If the center is zero, then use ( windowSize - 1 ) / ln( x ) if x is the fractional part of the window remaining at the end of the window."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "GAUSSIAN",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "STD",
                                "Type" : "double",
                                "Optional" : true,
                                "Description": [
                                "The sigma standard deviation. It is a required parameter if WINDOW( TYPE( GAUSSIAN ) ) is specified."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "GENERAL_COSINE",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "COEFF",
                                "Type" : "list",
                                "ListType" : "double",
                                "Optional" : true,
                                "Description": [
                                "List of weighting coefficients. Required parameter when WINDOW(TYPE(GENERAL_GUASSIAN) is specified."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "GENERAL_GAUSSIAN",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "SHAPE",
                                "Type" : "double",
                                "Optional" : true,
                                "Description": [
                                "The gaussian shape, and the value is 1. Required parameter when WINDOW(TYPE(GENERAL_GUASSIAN) is specified."
                        ]
                            },
                            {
                                "Name" : "SIGMA",
                                "Type" : "double",
                                "Optional" : true,
                                "Description": [
                                "The standard deviation value. Required parameter when WINDOW(TYPE(GENERAL_GUASSIAN) is specified."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "GENERAL_HAMMING",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "ALPHA",
                                "Type" : "double",
                                "Optional" : true,
                                "Description": [
                                "The value of the window coefficient. Required parameter when WINDOW( TYPE( GENERAL_HAMMING ) is specified."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "KAISER",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "BETA",
                                "Type" : "double",
                                "Optional" : true,
                                "Description": [
                                "The value for the shape between the main lobe width and side lobe level. Required parameter when WINDOW(TYPE(KAISER)) is specified."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "TAYLOR",
                        "Optional" : true,
                        "Type" : "record",
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "NUM_SIDELOBES",
                                "Type" : "integer",
                                "Optional" : true,
                                "DefaultValue": 4,
                                "Description": [
                                "The number of nearly constant level sidelobes adjacent to the main lobe. Optional parameter for WINDOW(TYPE(TAYLOR)). The default value is 4."
                        ]
                            },
                            {
                                "Name" : "SIDELOBE_SUPPRESSION",
                                "Type" : "double",
                                "Optional" : true,
                                "DefaultValue": 30,
                                "Description": [
                                "Value should be positive. The suppression level of the side lobe in decibels relative to the DC gain of the main lobe. Value is positive. Optional parameter for WINDOW(TYPE(TAYLOR)). The default value is 30."
                        ]
                            },
                            {
                                "Name" : "NORM",
                                "Type" : "integer",
                                "Optional" : true,
                                "DefaultValue": 1,
                                "PermittedValues": [ 0, 1 ],
                                "Description": [
                                "Indicator for how the window is divided. When set to 1 for an odd sized window, divides the window by the largest (middle) value. For an even sized window, divides the window by the value that would occur between the two middle values. Optional parameter for WINDOW(TYPE(TAYLOR)). The default value is 1."
                        ]
                            }
                        ]
                    },
                    {
                        "Name" : "TUKEY",
                        "Type" : "record",
                        "Optional" : true,
                        "Description": "",
                        "NestedParams" :
                        [
                            {
                                "Name" : "ALPHA",
                                "Type" : "double",
                                "Optional" : true,
                                "Description": [
                                "Defines the shape of the window inside the cosine-tapered region. A value of 0 is a rectangular window. A value of 1 is the same as a Hann window. Required parameter if WINDOW(TYPE(TUKEY)) is specified."
                        ]
                            }
                        ]
                    }
                ]
        }
    ]
}