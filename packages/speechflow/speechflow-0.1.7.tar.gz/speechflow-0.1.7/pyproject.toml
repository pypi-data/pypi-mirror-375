[project]
name = "speechflow"
dynamic = ["version"]
description = "TTS (Text-to-Speech) wrapper library for Python"
readme = "README.md"
authors = [
    { name = "minamik", email = "mia@sync.dev" }
]
license = "MIT"
requires-python = ">=3.10"
keywords = ["tts", "text-to-speech", "speech-synthesis", "openai", "gemini", "kokoro", "fishaudio", "style-bert-vits2"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "google-genai>=1.18.0",
    "kokoro>=0.9.4",
    "numpy>=1.26.4",
    "openai>=1.84.0",
    "pyaudio>=0.2.14",
    "pydantic>=2.0",
    "torch",
    "torchvision",
    "torchaudio",
    "python-dotenv>=1.1.1",
    "pip>=25.2",
    "pyopenjtalk>=0.4.1",
    "misaki[ja]>=0.9.4",
    "numba>=0.61",
    "style-bert-vits2>=2.5.0",
    "fish-audio-sdk>=2025.6.3",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "twine>=5.0.0",
    "build>=1.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src/speechflow"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/speechflow/_version.py"

[tool.hatch.build]
exclude = [
    "/.gitignore",
    "/CLAUDE.md",
    "/sandbox",
    "/output",
    "*.wav",
    "*.mp3",
    "/.git",
    "__pycache__/",
    "*.py[cod]",
    "*$py.class",
    "/.uv",
    "/uv.lock",
    "/dist",
    "/build",
    "*.egg-info/",
    "/tests",
    "/.venv",
]

[tool.uv.sources]
torch = { index = "pytorch-cuda" }
torchvision = { index = "pytorch-cuda" }
torchaudio = { index = "pytorch-cuda" }

[[tool.uv.index]]
name = "pytorch-cuda"
url = "https://download.pytorch.org/whl/cu126"
explicit = true