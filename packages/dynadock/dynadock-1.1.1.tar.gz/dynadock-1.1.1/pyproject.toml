[project]
name = "dynadock"
version = "1.1.1"
description = "Dynamic Docker Compose orchestrator with automatic port allocation and TLS"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.10"
authors = [
    {name = "Tom Sapletta", email = "info@softreck.dev"}
]
license = { file = "LICENSE" }
keywords = [
    "docker",
    "compose",
    "orchestrator",
    "caddy",
    "tls",
    "reverse-proxy",
    "development",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Systems Administration",
]

# Runtime dependencies
dependencies = [
    "click>=8.1.0",
    "pyyaml>=6.0",
    "docker>=7.0.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "psutil>=5.9.0",
    "jinja2>=3.1.0",
]

[project.urls]
Homepage = "https://github.com/dynapsys/dynadock"
Repository = "https://github.com/dynapsys/dynadock"
Issues = "https://github.com/dynapsys/dynadock/issues"
Changelog = "https://github.com/dynapsys/dynadock/releases"

[project.scripts]
dynadock = "dynadock.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/dynadock/__init__.py"

[tool.hatch.build]
include = [
  "src/dynadock/resources/*",
]

[tool.hatch.build.targets.wheel]
packages = ["src/dynadock"]

[tool.hatch.build.targets.wheel.force-include]
"src/dynadock/resources/manage_veth.sh" = "dynadock/resources/manage_veth.sh"

[tool.uv]
# Development extras that `make dev` will install
# These are duplicated from markdown docs for convenience
# Duplicate lines will be ignored by pip/uv
# See Makefile for install command
# NOTE: We deliberately put dev dependencies here rather than extras to keep pyproject simple

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"] 
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short", 
    "--strict-markers",
    "--disable-warnings",
    "--color=yes"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "docker: Docker-based tests",
    "slow: Slow running tests"
]
