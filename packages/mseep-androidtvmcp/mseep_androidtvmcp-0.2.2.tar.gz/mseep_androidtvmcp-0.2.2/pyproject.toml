[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "mseep-androidtvmcp"
version = "0.2.2"
description = "Android TV Remote Control to MCP Bridge"
requires-python = ">=3.8"
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
keywords = [
    "android-tv",
    "remote-control",
    "mcp",
    "model-context-protocol",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp>=1.0.0",
    "androidtvremote2>=0.1.0",
    "asyncio-mqtt>=0.11.0",
    "zeroconf>=0.131.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "pynput>=1.7.0",
]

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/pigeek/androidtvmcp"
Repository = "https://github.com/pigeek/androidtvmcp"
Issues = "https://github.com/pigeek/androidtvmcp/issues"

[project.scripts]
androidtvmcp = "androidtvmcp.cli:main"

[tool.hatch.build.targets.wheel]
packages = [
    "src/androidtvmcp",
]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = [
    "py38",
]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = "-v --tb=short"
asyncio_mode = "auto"
