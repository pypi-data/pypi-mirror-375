CLOSE

;####################################################
; Autogenerated Homing PLC for PMAC, DO NOT MODIFY
; Group 2:
;  Axis 24: htype = LIMIT, jdist = 0, post = i
;  Axis 25: htype = LIMIT, jdist = 0, post = i
;  Axis 26: htype = LIMIT, jdist = 0, post = i
; Group 3:
;  Axis 27: htype = LIMIT, jdist = 0, post = i
;  Axis 28: htype = LIMIT, jdist = 0, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(15&30)*50+15%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1500
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1501
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1502
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1503
HomingBackupGroup = 0

OPEN PLC15 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1504=i2413 P1505=i2513 P1506=i2613 P1507=i2713 P1508=i2813
;Save the low soft limits to P variables px20..x35
P1520=i2414 P1521=i2514 P1522=i2614 P1523=i2714 P1524=i2814
;Save the home capture flags to P variables px36..x51
MSR45,i912,P1536 MSR48,i912,P1537 MSR49,i912,P1538 MSR52,i912,P1539 MSR53,i912,P1540
;If any are zero then there is probably a macro error
if (P1536=0 or P1537=0 or P1538=0 or P1539=0 or P1540=0)
	HomingStatus=StatusInvalid
endif
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1552=P1536^$C P1553=P1537^$C P1554=P1538^$C P1555=P1539^$C P1556=P1540^$C
;Save the limit flags to P variables px68..x83
P1568=i2424 P1569=i2524 P1570=i2624 P1571=i2724 P1572=i2824
;Save the current position to P variables px84..x99
P1584=M2462 P1585=M2562 P1586=M2662 P1587=M2762 P1588=M2862
;Clear the soft limits
i2413=0 i2513=0 i2613=0 i2713=0 i2813=0
i2414=0 i2514=0 i2614=0 i2714=0 i2814=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m2445=0 m2545=0 m2645=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		i2422=10 i2522=10 i2622=10
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m2472=100000000*(i2423/ABS(i2423)) 		m2572=100000000*(i2523/ABS(i2523)) 		m2672=100000000*(i2623/ABS(i2623))
		cmd "#24J^*^0 #25J^*^0 #26J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1584=(P1584-M2462)/(I2408*32)+0-(i2426/16)
		P1585=(P1585-M2562)/(I2508*32)+0-(i2526/16)
		P1586=(P1586-M2662)/(I2608*32)+0-(i2626/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW45,i912,P1552 MSW48,i912,P1553 MSW49,i912,P1554 		m2472=100000000*(-i2423/ABS(i2423)) 		m2572=100000000*(-i2523/ABS(i2523)) 		m2672=100000000*(-i2623/ABS(i2623))
		cmd "#24J^*^0 #25J^*^0 #26J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (m2442|m2542|m2642 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2442|m2542|m2642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if any limits need disabling ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		;Save the user home flags to P variables px52..x67
		;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
			MSR45,i913,P1552 MSR48,i913,P1553 MSR49,i913,P1554
		; if capture on flag, and flag high, then we need to disable limits
		if (P1536&2=2 and P1536&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1552=1 and i2423>0 and i2426<1)
			or (P1552=2 and i2423<0 and i2426>-1)
				i2424=i2424 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
		; if capture on flag, and flag high, then we need to disable limits
		if (P1537&2=2 and P1537&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1553=1 and i2523>0 and i2526<1)
			or (P1553=2 and i2523<0 and i2526>-1)
				i2524=i2524 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
		; if capture on flag, and flag high, then we need to disable limits
		if (P1538&2=2 and P1538&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1554=1 and i2623>0 and i2626<1)
			or (P1554=2 and i2623<0 and i2626>-1)
				i2624=i2624 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW45,i912,P1536 MSW48,i912,P1537 MSW49,i912,P1538
		cmd "#24hm #25hm #26hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (m2442|m2542|m2642 = 0) ; Following error check
		and (m2430|m2530|m2630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2442|m2542|m2642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2430|m2530|m2630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Restore limits if needed ----
	;Restore the limit flags to P variables px68..x83
	i2424=P1568 i2524=P1569 i2624=P1570

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m2445&m2545&m2645=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m2472=P1584 m2572=P1585 m2672=P1586
		cmd "#24J=* #25J=* #26J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (m2442|m2542|m2642 = 0) ; Following error check
		and (m2430|m2530|m2630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2442|m2542|m2642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2430|m2530|m2630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m2745=0 m2845=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		i2722=4 i2822=4
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m2772=100000000*(i2723/ABS(i2723)) 		m2872=100000000*(i2823/ABS(i2823))
		cmd "#27J^*^0 #28J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2740&m2840=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1587=(P1587-M2762)/(I2708*32)+0-(i2726/16)
		P1588=(P1588-M2862)/(I2808*32)+0-(i2826/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW52,i912,P1555 MSW53,i912,P1556 		m2772=100000000*(-i2723/ABS(i2723)) 		m2872=100000000*(-i2823/ABS(i2823))
		cmd "#27J^*^0 #28J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2740&m2840=0) ; At least one motor should not be In Position
		and (m2742|m2842 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2742|m2842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if any limits need disabling ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		;Save the user home flags to P variables px52..x67
		;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
			MSR52,i913,P1555 MSR53,i913,P1556
		; if capture on flag, and flag high, then we need to disable limits
		if (P1539&2=2 and P1539&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1555=1 and i2723>0 and i2726<1)
			or (P1555=2 and i2723<0 and i2726>-1)
				i2724=i2724 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
		; if capture on flag, and flag high, then we need to disable limits
		if (P1540&2=2 and P1540&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1556=1 and i2823>0 and i2826<1)
			or (P1556=2 and i2823<0 and i2826>-1)
				i2824=i2824 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW52,i912,P1539 MSW53,i912,P1540
		cmd "#27hm #28hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2740&m2840=0) ; At least one motor should not be In Position
		and (m2742|m2842 = 0) ; Following error check
		and (m2730|m2830 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2742|m2842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2730|m2830 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Restore limits if needed ----
	;Restore the limit flags to P variables px68..x83
	i2724=P1571 i2824=P1572

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m2745&m2845=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m2772=P1587 m2872=P1588
		cmd "#27J=* #28J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2740&m2840=0) ; At least one motor should not be In Position
		and (m2742|m2842 = 0) ; Following error check
		and (m2730|m2830 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2742|m2842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2730|m2830 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m2442=0)
	cmd "#24J/"
endif
if (m2542=0)
	cmd "#25J/"
endif
if (m2642=0)
	cmd "#26J/"
endif
if (m2742=0)
	cmd "#27J/"
endif
if (m2842=0)
	cmd "#28J/"
endif
;Restore the high soft limits from P variables px04..x19
i2413=P1504 i2513=P1505 i2613=P1506 i2713=P1507 i2813=P1508
;Restore the low soft limits from P variables px20..x35
i2414=P1520 i2514=P1521 i2614=P1522 i2714=P1523 i2814=P1524
;Restore the home capture flags from P variables px36..x51
MSW45,i912,P1536 MSW48,i912,P1537 MSW49,i912,P1538 MSW52,i912,P1539 MSW53,i912,P1540
;Restore the limit flags to P variables px68..x83
i2424=P1568 i2524=P1569 i2624=P1570 i2724=P1571 i2824=P1572

DISABLE PLC15
CLOSE
