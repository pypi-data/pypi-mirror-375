version: '2.0'
logging:
  console_level: ERROR
  file_level: INFO
  file_path: ~/.ic/logs/ic_{date}.log
  max_files: 30
  format: '%(asctime)s [%(levelname)s] - %(message)s'
  mask_sensitive: true
aws:
  config_path: ~/.aws/config
  credentials_path: ~/.aws/credentials
  regions:
  - ap-northeast-2
  cross_account_role: OrganizationAccountAccessRole
  session_duration: 3600
  max_workers: 10
  tags:
    required:
    - User
    - CreateBy
    - Team
    - TeamName
    - Name
    - Service
    - Application
    - Role
    - Environment
    optional:
    - Env
    rules:
      User: ^.+$
      Team: ^\d+$
      Environment: ^(PROD|STG|DEV|TEST|QA)$
      Name: ^[a-zA-Z0-9_.\-/+() ]+$
      Role: ^[a-zA-Z0-9_\-+, ]+$
azure:
  subscriptions: []
  locations:
  - East US
  - West US 2
  - Korea Central
  - Southeast Asia
  max_workers: 10
gcp:
  mcp:
    enabled: true
    endpoint: http://localhost:8080/gcp
    auth_method: service_account
    prefer_mcp: true
  projects: []
  regions:
  - asia-northeast3
  zones:
  - asia-northeast3-a
  - asia-northeast3-b
  - asia-northeast3-c
  max_workers: 10
oci:
  config_path: ~/.oci/config
  max_workers: 10
cloudflare:
  config_path: ~/.cloudflare/config
  accounts: []
  zones: []
ssh:
  config_file: ~/.ssh/config
  key_dir: ~/aws-key
  workers: 70
  timeout: 5
  port_timeout: 0.5
  network_ranges:
  - 192.168.0.0/16
  - 10.0.0.0/8
  - 172.16.0.0/12
  default_user: ubuntu
  port: 22
mcp:
  servers:
    github:
      enabled: true
      auto_approve: []
    terraform:
      enabled: true
      auto_approve: []
    aws_docs:
      enabled: true
      auto_approve:
      - read_documentation
      - search_documentation
    azure:
      enabled: true
      auto_approve:
      - documentation
slack:
  enabled: false
security:
  sensitive_keys:
  - password
  - passwd
  - pwd
  - token
  - access_token
  - refresh_token
  - auth_token
  - key
  - api_key
  - access_key
  - secret_key
  - private_key
  - secret
  - client_secret
  - webhook_secret
  - webhook_url
  - webhook
  - credential
  - credentials
  - cert
  - certificate
  - session
  - session_token
  mask_pattern: '***MASKED***'
  warn_on_sensitive_in_config: true
  git_hooks_enabled: true
other:
  azure_subscriptions: subscription-id-1,subscription-id-2
  mcp_gcp_enabled: 'true'
  mcp_gcp_endpoint: http://localhost:8080/gcp
  mcp_gcp_auth_method: service_account
  gcp_prefer_mcp: 'true'
  gcp_projects: infracli
  gcp_default_project: infracli
  gcp_request_timeout: '30'
  gcp_retry_attempts: '3'
  gcp_enable_billing_api: 'true'
  gcp_enable_compute_api: 'true'
  gcp_enable_container_api: 'true'
  gcp_enable_storage_api: 'true'
  gcp_enable_sqladmin_api: 'true'
  gcp_enable_cloudfunctions_api: 'true'
  gcp_enable_run_api: 'true'
