name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-tests:
    name: Rust Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]

    steps:
    - uses: actions/checkout@v4

    - name: Install FFmpeg dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libavutil-dev libavformat-dev libavcodec-dev libavdevice-dev libavfilter-dev libswscale-dev libswresample-dev

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo target
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests (no Python bindings)
      run: cargo test --no-default-features --features video

    - name: Compile tests (all features)
      run: cargo test --all-features --no-run

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install FFmpeg dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libavutil-dev libavformat-dev libavcodec-dev libavdevice-dev libavfilter-dev libswscale-dev libswresample-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install maturin (Linux/macOS)
      if: runner.os != 'Windows'
      run: pip install maturin[patchelf]

    - name: Install maturin (Windows)
      if: runner.os == 'Windows'
      run: pip install maturin

    - name: Build Python package (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        mkdir -p dist
        maturin build --release --out dist

    - name: Build Python package (Windows)
      if: runner.os == 'Windows'
      run: |
        if not exist dist mkdir dist
        maturin build --release --out dist

    - name: Install built package (Linux/macOS)
      if: runner.os != 'Windows'
      run: pip install dist/*.whl

    - name: Install built package (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: for %%f in (dist\*.whl) do pip install "%%f"

    - name: Install test dependencies
      run: pip install pytest pytest-benchmark numpy pillow

    - name: Run Python tests
      run: pytest tests/ -v

  pre-commit:
    name: Pre-commit hooks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install FFmpeg dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libavutil-dev libavformat-dev libavcodec-dev libavdevice-dev libavfilter-dev libswscale-dev libswresample-dev

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Run pre-commit
      run: pre-commit run --all-files

  build-wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install FFmpeg dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libavutil-dev libavformat-dev libavcodec-dev libavdevice-dev libavfilter-dev libswscale-dev libswresample-dev



    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install maturin (Linux/macOS)
      if: runner.os != 'Windows'
      run: pip install maturin[patchelf]

    - name: Install maturin (Windows)
      if: runner.os == 'Windows'
      run: pip install maturin

    - name: Build wheels (Linux)
      if: runner.os == 'Linux'
      run: maturin build --release --out dist

    - name: Build wheels (macOS - no video features)
      if: runner.os == 'macOS'
      run: maturin build --release --out dist --no-default-features --features python-bindings

    - name: Build wheels (Windows - no video features)
      if: runner.os == 'Windows'
      run: maturin build --release --out dist --no-default-features --features python-bindings

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: dist/
