{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "4",
  "json_content_version": "1",
  "function_name": "TD_XGBoost",
  "function_version": "1.4",
  "function_type": "fastpath",
  "function_category": "Model Training",
  "function_alias_name": "TD_XGBoost",
  "function_r_name": "aa.td_xgboost",
  "short_description": "XGBoost (also known as eXtreme Gradient Boosting) performs classification and regression analysis on datasets.",
  "long_description": "The TD_XGBoost is an implementation of gradient boosted decision tree designed for speed and performance. The TD_XGBoost function supports both regression and classification predictive modeling problems. The model created by it is used in the TD_XGBoostPredict function for making predictions.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "input",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the table containing the input data.",
      "description": "Specifies the table containing the input data.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "omitPossible": false,
      "name": "MetaInformationTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table in which the training progress information per iteration of each tree is stored.",
      "description": "Specifies the name of the table in which the training progress information per iteration of each tree is stored.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "output.table",
      "useInR": true,
      "rOrderNum": 2
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": false,
      "name": "InputColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specify the names of the input table columns that need to be used for training the model (predictors, features or independent variables).",
      "description": "Specify the names of the input table columns that need to be used for training the model (predictors, features or independent variables).",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true,
      "rFormulaUsage": true,
      "rOrderNum": -1
    },
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": false,
      "name": "ResponseColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specify the name of the column that contains the class label for classification or target value (dependent variable) for regression.",
      "description": "Specify the name of the column that contains the class label for classification or target value (dependent variable) for regression.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "response.column",
      "useInR": true,
      "rFormulaUsage": true,
      "rOrderNum": 0
    },
    {
      "defaultValue": 5,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxDepth",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify a decision tree stopping criterion. If the tree reaches a depth past this value, the algorithm stops looking for splits. Decision trees can grow to (2^(max_depth+1)-1) nodes. This stopping criterion has the greatest effect on the performance of the function.",
      "description": "Specify a decision tree stopping criterion. If the tree reaches a depth past this value, the algorithm stops looking for splits. Decision trees can grow to (2^(max_depth+1)-1) nodes. This stopping criterion has the greatest effect on the performance of the function.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.depth",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "defaultValue": -1,
      "lowerBound": -1,
      "upperBound": 10000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "NumBoostedTrees",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the number of parallels boosted trees.Each boosted tree operates on a sample of data that fits in an AMP's memory. By default, NumBoostedTrees is chosen equal to the number of AMPs with data.",
      "description": "Specify the number of parallels boosted trees.Each boosted tree operates on a sample of data that fits in an AMP's memory. By default, NumBoostedTrees is chosen equal to the number of AMPs with data.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "num.boosted.trees",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "defaultValue": 1,
      "lowerBound": 1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MinNodeSize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify a decision tree stopping criterion; the minimum size of any node within each decision tree.",
      "description": "Specify a decision tree stopping criterion; the minimum size of any node within each decision tree.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "min.node.size",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": 1,
      "lowerBound": -2147483648,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Seed",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify an integer value to use in determining the random seed for column sampling. By default, seed is 1.",
      "description": "Specify an integer value to use in determining the random seed for column sampling. By default, seed is 1.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "seed",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "permittedValues": [
        "REGRESSION",
        "CLASSIFICATION"
      ],
      "defaultValue": "REGRESSION",
      "isOutputColumn": false,
      "name": "ModelType",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify whether the analysis is a regression (continuous response variable) or a multiple-class classification (predicting result from the number of classes).",
      "description": "Specify whether the analysis is a regression (continuous response variable) or a multiple-class classification (predicting result from the number of classes).",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "model.type",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 1.0,
      "lowerBound": 1e-10,
      "upperBound": 10.0,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "CoverageFactor",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the level of coverage for the dataset while boosting trees (in percentage, e.g., 1.25 = 125% coverage). CoverageFactor can only be used if NumBoostedTrees is not supplied. When NumBoostedTrees is specified, coverage depends on the value of NumBoostedTrees. If NumBoostedTrees is not specified, NumBoostedTrees is chosen to achieve this level of coverage.",
      "description": "Specify the level of coverage for the dataset while boosting trees (in percentage, e.g., 1.25 = 125% coverage). CoverageFactor can only be used if NumBoostedTrees is not supplied. When NumBoostedTrees is specified, coverage depends on the value of NumBoostedTrees. If NumBoostedTrees is not specified, NumBoostedTrees is chosen to achieve this level of coverage.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "coverage.factor",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 0.0,
      "lowerBound": 0.0,
      "upperBound": 1.79769313486231570815e+308,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MinImpurity",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the minimum impurity at which the tree stops splitting further down. For regression, a criteria of squared error is used whereas for classification, gini impurity is used.",
      "description": "Specify the minimum impurity at which the tree stops splitting further down. For regression, a criteria of squared error is used whereas for classification, gini impurity is used.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "min.impurity",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": 1,
      "lowerBound": 0,
      "upperBound": 100000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "RegularizationLambda",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the L2 regularization that the loss function uses while boosting trees. The lambda is a DOUBLE PRECISION value in the range [0, 100000]. The higher the lambda, the stronger the regularization effect. The value 0 specifies no regularization.",
      "description": "Specify the L2 regularization that the loss function uses while boosting trees. The lambda is a DOUBLE PRECISION value in the range [0, 100000]. The higher the lambda, the stronger the regularization effect. The value 0 specifies no regularization.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "lambda1",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "defaultValue": 0.5,
      "lowerBound": 1e-10,
      "upperBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "ShrinkageFactor",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the learning rate (weight) of a learned tree in each boosting step. After each boosting step, the algorithm multiplies the learner by shrinkage to make the boosting process more conservative. The shrinkage is a DOUBLE PRECISION value in the range (0, 1]. The value 1 specifies no shrinkage.",
      "description": "Specify the learning rate (weight) of a learned tree in each boosting step. After each boosting step, the algorithm multiplies the learner by shrinkage to make the boosting process more conservative. The shrinkage is a DOUBLE PRECISION value in the range (0, 1]. The value 1 specifies no shrinkage.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "shrinkage.factor",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "defaultValue": 1.0,
      "lowerBound": 1e-10,
      "upperBound": 1.0,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "ColumnSampling",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the fraction of features to sample during boosting. The sample_fraction is a DOUBLE PRECISION value in the range (0, 1].",
      "description": "Specify the fraction of features to sample during boosting. The sample_fraction is a DOUBLE PRECISION value in the range (0, 1].",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "column.sampling",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "defaultValue": 10,
      "lowerBound": 1,
      "upperBound": 100000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "IterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specify the number of iterations (rounds) to boost the weak classifiers. The iterations must be an INTEGER in the range [1, 100000].",
      "description": " Specify the number of iterations (rounds) to boost the weak classifiers. The iterations must be an INTEGER in the range [1, 100000].",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "iter.num",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "defaultValue": -1,
      "lowerBound": -1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "TreeSize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the number of rows that each tree uses as its input dataset.",
      "description": "Specify the number of rows that each tree uses as its input dataset.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "tree.size",
      "useInR": true,
      "rOrderNum": 14
    },
    {
      "defaultValue": 0,
      "lowerBound": -1e50,
      "upperBound": 1e50,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "BaseScore",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the initial prediction value for all data points.",
      "description": "Specify the initial prediction value for all data points.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "base.score",
      "useInR": true,
      "rOrderNum": 15
    }
  ]
}