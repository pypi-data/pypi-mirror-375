# coding: utf-8

"""
    Selling Partner API for Services

    With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class AddAppointmentRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'appointment_time': 'AppointmentTimeInput',
    }

    attribute_map = {
        'appointment_time': 'appointmentTime',
    }

    def __init__(self, appointment_time=None, _configuration=None):  # noqa: E501
        """AddAppointmentRequest - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._appointment_time = None
        self.discriminator = None

        self.appointment_time = appointment_time

    @property
    def appointment_time(self):
        """Gets the appointment_time of this AddAppointmentRequest.  # noqa: E501


        :return: The appointment_time of this AddAppointmentRequest.  # noqa: E501
        :rtype: AppointmentTimeInput
        """
        return self._appointment_time

    @appointment_time.setter
    def appointment_time(self, appointment_time):
        """Sets the appointment_time of this AddAppointmentRequest.


        :param appointment_time: The appointment_time of this AddAppointmentRequest.  # noqa: E501
        :type: AppointmentTimeInput
        """
        if self._configuration.client_side_validation and appointment_time is None:
            raise ValueError("Invalid value for `appointment_time`, must not be `None`")  # noqa: E501

        self._appointment_time = appointment_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AddAppointmentRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AddAppointmentRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AddAppointmentRequest):
            return True

        return self.to_dict() != other.to_dict()
