[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "terra-tai"
version = "0.1.0"
description = "Terra Command AI - A natural language shell command tool with AI"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
authors = [
    {name = "Terra AGI", email = "contact@terra-agi.com"},
]
maintainers = [
    {name = "Terra AGI", email = "contact@terra-agi.com"},
]
keywords = [
    "cli",
    "shell",
    "command",
    "natural-language",
    "terminal",
    "ai",
    "openai",
    "automation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Topic :: Utilities",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "openai>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/terra-agi/terra-commands"
Repository = "https://github.com/terra-agi/terra-commands"
Issues = "https://github.com/terra-agi/terra-commands/issues"
Changelog = "https://github.com/terra-agi/terra-commands/blob/main/CHANGELOG.md"

[project.scripts]
tai = "tai.cli:main"

[tool.setuptools]
packages = ["tai"]
include-package-data = true

[tool.setuptools.package-data]
tai = ["*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "dotenv.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tai/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
