"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Frequenz Weather & Forecast API

Copyright:
Copyright 2023 Frequenz Energy-as-a-Service GmbH

License:
MIT
"""

import builtins
import collections.abc
import frequenz.api.common.v1.location_pb2
import frequenz.api.common.v1.pagination.pagination_info_pb2
import frequenz.api.common.v1.pagination.pagination_params_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ForecastFeature:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ForecastFeatureEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ForecastFeature.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FORECAST_FEATURE_UNSPECIFIED: _ForecastFeature.ValueType  # 0
    """Default value. When used, the API responds with all features listed below."""
    FORECAST_FEATURE_TEMPERATURE_2_METRE: _ForecastFeature.ValueType  # 1
    """Temperature at 2 m above the earth's surface. It is the temperature of
    the air at a height of 2 metres above the surface of land, sea or
    in-land waters.
    Measured in Kelvin. To convert to Celsius, subtract 273.15.
    """
    FORECAST_FEATURE_U_WIND_COMPONENT_100_METRE: _ForecastFeature.ValueType  # 2
    """Eastward component of the wind at 100 m altitude. It is the horizontal
    speed of air moving towards the east, at a height of 100 metres above the
    surface of the Earth.
    A positive value indicates eastward wind, and a negative value indicates
    westward wind. Typical range is -20 to 20 m/s.
    Measured in m/s.
    """
    FORECAST_FEATURE_V_WIND_COMPONENT_100_METRE: _ForecastFeature.ValueType  # 3
    """Northward component wind at 100 m altitude. It is the horizontal speed of
    air moving towards the north, at a height of 100 metres above the surface
    of the Earth.
    A positive value indicates northward wind, and a negative value indicates
    southward wind. Typical range is -20 to 20 m/s.
    Measured in m/s.
    """
    FORECAST_FEATURE_U_WIND_COMPONENT_10_METRE: _ForecastFeature.ValueType  # 4
    """Eastward component wind at 10 m altitude. It is the horizontal speed of
    air moving towards the east, at a height of 10 metres above the surface
    of the Earth.
    A positive value indicates eastward wind, and a negative value indicates
    westward wind. Typical values are smaller than their 100 m counterparts
    since it is stronger influenced by local terrain, vegetation and buildings.
    Measured in m/s.
    """
    FORECAST_FEATURE_V_WIND_COMPONENT_10_METRE: _ForecastFeature.ValueType  # 5
    """Northward component wind at 10 m altitude. It is the horizontal speed of
    air moving towards the north, at a height of 100 metres above the surface
    of the Earth.
    A positive value indicates northward wind, and a negative value indicates
    southward wind. Typical values are smaller than their 100 m counterparts
    since it is stronger influenced by local terrain, vegetation and buildings.
    Measured in m/s.
    """
    FORECAST_FEATURE_SURFACE_SOLAR_RADIATION_DOWNWARDS: _ForecastFeature.ValueType  # 6
    """Amount of solar radiation (shortwave radiation, direct and diffused) that
    reaches a horizontal plane at the surface of the Earth.
    The value is the forecast of the average solar irradiance from the
    validity time until the next validity timestamp.
    Measured in W/m².
    """
    FORECAST_FEATURE_SURFACE_NET_SOLAR_RADIATION: _ForecastFeature.ValueType  # 7
    """Amount of solar radiation (shortwave radiation, direct and diffused) that
    reaches a horizontal plane at the surface of the Earth minus the amount
    reflected by the Earth's surface (which is governed by the albedo).
    The value is the forecast of the average solar irradiance from the
    validity time until the next validity timestamp.
    Measured in W/m².
    """

class ForecastFeature(_ForecastFeature, metaclass=_ForecastFeatureEnumTypeWrapper):
    """Weather features (e.g. wind speeds or solar radiation) available for query
    through the API.
    """

FORECAST_FEATURE_UNSPECIFIED: ForecastFeature.ValueType  # 0
"""Default value. When used, the API responds with all features listed below."""
FORECAST_FEATURE_TEMPERATURE_2_METRE: ForecastFeature.ValueType  # 1
"""Temperature at 2 m above the earth's surface. It is the temperature of
the air at a height of 2 metres above the surface of land, sea or
in-land waters.
Measured in Kelvin. To convert to Celsius, subtract 273.15.
"""
FORECAST_FEATURE_U_WIND_COMPONENT_100_METRE: ForecastFeature.ValueType  # 2
"""Eastward component of the wind at 100 m altitude. It is the horizontal
speed of air moving towards the east, at a height of 100 metres above the
surface of the Earth.
A positive value indicates eastward wind, and a negative value indicates
westward wind. Typical range is -20 to 20 m/s.
Measured in m/s.
"""
FORECAST_FEATURE_V_WIND_COMPONENT_100_METRE: ForecastFeature.ValueType  # 3
"""Northward component wind at 100 m altitude. It is the horizontal speed of
air moving towards the north, at a height of 100 metres above the surface
of the Earth.
A positive value indicates northward wind, and a negative value indicates
southward wind. Typical range is -20 to 20 m/s.
Measured in m/s.
"""
FORECAST_FEATURE_U_WIND_COMPONENT_10_METRE: ForecastFeature.ValueType  # 4
"""Eastward component wind at 10 m altitude. It is the horizontal speed of
air moving towards the east, at a height of 10 metres above the surface
of the Earth.
A positive value indicates eastward wind, and a negative value indicates
westward wind. Typical values are smaller than their 100 m counterparts
since it is stronger influenced by local terrain, vegetation and buildings.
Measured in m/s.
"""
FORECAST_FEATURE_V_WIND_COMPONENT_10_METRE: ForecastFeature.ValueType  # 5
"""Northward component wind at 10 m altitude. It is the horizontal speed of
air moving towards the north, at a height of 100 metres above the surface
of the Earth.
A positive value indicates northward wind, and a negative value indicates
southward wind. Typical values are smaller than their 100 m counterparts
since it is stronger influenced by local terrain, vegetation and buildings.
Measured in m/s.
"""
FORECAST_FEATURE_SURFACE_SOLAR_RADIATION_DOWNWARDS: ForecastFeature.ValueType  # 6
"""Amount of solar radiation (shortwave radiation, direct and diffused) that
reaches a horizontal plane at the surface of the Earth.
The value is the forecast of the average solar irradiance from the
validity time until the next validity timestamp.
Measured in W/m².
"""
FORECAST_FEATURE_SURFACE_NET_SOLAR_RADIATION: ForecastFeature.ValueType  # 7
"""Amount of solar radiation (shortwave radiation, direct and diffused) that
reaches a horizontal plane at the surface of the Earth minus the amount
reflected by the Earth's surface (which is governed by the albedo).
The value is the forecast of the average solar irradiance from the
validity time until the next validity timestamp.
Measured in W/m².
"""
global___ForecastFeature = ForecastFeature

@typing.final
class GetHistoricalWeatherForecastRequest(google.protobuf.message.Message):
    """The `GetHistoricalWeatherForecastRequest` message defines parameters for
    retrieving historical weather forecasts, targeting a specific location
    and time period, with designated features.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATIONS_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    START_TS_FIELD_NUMBER: builtins.int
    END_TS_FIELD_NUMBER: builtins.int
    PAGINATION_PARAMS_FIELD_NUMBER: builtins.int
    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[frequenz.api.common.v1.location_pb2.Location]:
        """The locations for which the forecast is being requested.
        The maximum number of locations that can be requested is 50. If the
        request exceeds this limit, the API will respond with an error.
        """

    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ForecastFeature.ValueType]:
        """List of required features. If none are specified, all available features
        will be returned.
        """

    @property
    def start_ts(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The UTC timestamp indicating the start of the requested historical forecast
        period.
        """

    @property
    def end_ts(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The UTC timestamp indicating the end of the requested historical forecast
        period.
        """

    @property
    def pagination_params(self) -> frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams:
        """The parameters define the 'page_size' and the 'page_token'. An inital
        query of a request will omit the 'page_token'. Subsequent queries of the
        same request must include the 'page_token' from the previous response.
        """

    def __init__(
        self,
        *,
        locations: collections.abc.Iterable[frequenz.api.common.v1.location_pb2.Location] | None = ...,
        features: collections.abc.Iterable[global___ForecastFeature.ValueType] | None = ...,
        start_ts: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_ts: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        pagination_params: frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["end_ts", b"end_ts", "pagination_params", b"pagination_params", "start_ts", b"start_ts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["end_ts", b"end_ts", "features", b"features", "locations", b"locations", "pagination_params", b"pagination_params", "start_ts", b"start_ts"]) -> None: ...

global___GetHistoricalWeatherForecastRequest = GetHistoricalWeatherForecastRequest

@typing.final
class ReceiveLiveWeatherForecastRequest(google.protobuf.message.Message):
    """The `ReceiveLiveWeatherForecastRequest` message defines parameters for
    requesting live weather forecasts for a specified location, with designated
    features.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATIONS_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    FORECAST_HORIZON_MIN_FIELD_NUMBER: builtins.int
    FORECAST_HORIZON_MAX_FIELD_NUMBER: builtins.int
    forecast_horizon_min: builtins.int
    """Minimum forecast horizon (in hours) to include in the returned forecasts.
    Each forecast predicts weather conditions for a certain time span into the
    future (the forecast horizon). If not specified, forecasts starting from
    the earliest available horizon will be returned.
    """
    forecast_horizon_max: builtins.int
    """Maximum forecast horizon (in hours) to include in the returned forecasts.
    If not specified, forecasts up to their maximum available horizon will be
    returned. If the requested horizon exceeds the available forecast data,
    the maximum available horizon will be used.
    """
    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[frequenz.api.common.v1.location_pb2.Location]:
        """The locations for which the forecast is being requested.
        The maximum number of locations that can be requested is 50. If the
        request exceeds this limit, the API will respond with an error.
        """

    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ForecastFeature.ValueType]:
        """List of required features. If none are specified, all available features
        will be streamed.
        """

    def __init__(
        self,
        *,
        locations: collections.abc.Iterable[frequenz.api.common.v1.location_pb2.Location] | None = ...,
        features: collections.abc.Iterable[global___ForecastFeature.ValueType] | None = ...,
        forecast_horizon_min: builtins.int | None = ...,
        forecast_horizon_max: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_forecast_horizon_max", b"_forecast_horizon_max", "_forecast_horizon_min", b"_forecast_horizon_min", "forecast_horizon_max", b"forecast_horizon_max", "forecast_horizon_min", b"forecast_horizon_min"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_forecast_horizon_max", b"_forecast_horizon_max", "_forecast_horizon_min", b"_forecast_horizon_min", "features", b"features", "forecast_horizon_max", b"forecast_horizon_max", "forecast_horizon_min", b"forecast_horizon_min", "locations", b"locations"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_forecast_horizon_max", b"_forecast_horizon_max"]) -> typing.Literal["forecast_horizon_max"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_forecast_horizon_min", b"_forecast_horizon_min"]) -> typing.Literal["forecast_horizon_min"] | None: ...

global___ReceiveLiveWeatherForecastRequest = ReceiveLiveWeatherForecastRequest

@typing.final
class LocationForecast(google.protobuf.message.Message):
    """The `ForecastResponse` message  provides a structured format for representing
    forecast data for a specific location, including UTC timestamps for validity
    and creation.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Forecasts(google.protobuf.message.Message):
        """Holds all weather features forecast for a certain point in time."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class FeatureForecast(google.protobuf.message.Message):
            """Holds the forecast for a single weather feature."""

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            FEATURE_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            feature: global___ForecastFeature.ValueType
            value: builtins.float
            """Value of the feature. Unit depends on the feature (e.g., m/s for wind
            speed, W/m² for radiation). Details can be found in the
            ForecastFeature enum under each feature.
            """
            def __init__(
                self,
                *,
                feature: global___ForecastFeature.ValueType = ...,
                value: builtins.float = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing.Literal["feature", b"feature", "value", b"value"]) -> None: ...

        VALID_AT_TS_FIELD_NUMBER: builtins.int
        FEATURES_FIELD_NUMBER: builtins.int
        @property
        def valid_at_ts(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The UTC timestamp for which the features in this entry are valid for."""

        @property
        def features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationForecast.Forecasts.FeatureForecast]:
            """All requested weather features."""

        def __init__(
            self,
            *,
            valid_at_ts: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            features: collections.abc.Iterable[global___LocationForecast.Forecasts.FeatureForecast] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["valid_at_ts", b"valid_at_ts"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["features", b"features", "valid_at_ts", b"valid_at_ts"]) -> None: ...

    FORECASTS_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    CREATION_TS_FIELD_NUMBER: builtins.int
    @property
    def forecasts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationForecast.Forecasts]:
        """Weather forecasts."""

    @property
    def location(self) -> frequenz.api.common.v1.location_pb2.Location:
        """The location for which the weather data is returned."""

    @property
    def creation_ts(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The UTC timestamp indicating when the forecast was originally created."""

    def __init__(
        self,
        *,
        forecasts: collections.abc.Iterable[global___LocationForecast.Forecasts] | None = ...,
        location: frequenz.api.common.v1.location_pb2.Location | None = ...,
        creation_ts: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["creation_ts", b"creation_ts", "location", b"location"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["creation_ts", b"creation_ts", "forecasts", b"forecasts", "location", b"location"]) -> None: ...

global___LocationForecast = LocationForecast

@typing.final
class GetHistoricalWeatherForecastResponse(google.protobuf.message.Message):
    """The message encapsulates a collection of historical weather forecasts, each
    corresponding to a requested location.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATION_FORECASTS_FIELD_NUMBER: builtins.int
    PAGINATION_INFO_FIELD_NUMBER: builtins.int
    @property
    def location_forecasts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationForecast]: ...
    @property
    def pagination_info(self) -> frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo:
        """The pagination_info contains the number of 'total_items' in the response
        and the 'next_page_token' for the subsequent query of the request. It is
        omitted in the last response.
        """

    def __init__(
        self,
        *,
        location_forecasts: collections.abc.Iterable[global___LocationForecast] | None = ...,
        pagination_info: frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pagination_info", b"pagination_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["location_forecasts", b"location_forecasts", "pagination_info", b"pagination_info"]) -> None: ...

global___GetHistoricalWeatherForecastResponse = GetHistoricalWeatherForecastResponse

@typing.final
class ReceiveLiveWeatherForecastResponse(google.protobuf.message.Message):
    """The message encapsulates a collection of live weather forecasts, each
    corresponding to a requested location.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATION_FORECASTS_FIELD_NUMBER: builtins.int
    @property
    def location_forecasts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationForecast]: ...
    def __init__(
        self,
        *,
        location_forecasts: collections.abc.Iterable[global___LocationForecast] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["location_forecasts", b"location_forecasts"]) -> None: ...

global___ReceiveLiveWeatherForecastResponse = ReceiveLiveWeatherForecastResponse
