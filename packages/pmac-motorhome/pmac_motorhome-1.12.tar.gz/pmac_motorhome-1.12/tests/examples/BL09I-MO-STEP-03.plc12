CLOSE

;####################################################
; Autogenerated Homing PLC for GeoBrick, DO NOT MODIFY
; Group 2:
; Special homing for a group of axes with tilt limits
; and misaligned home marks
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(12&30)*50+12%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1200
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1201
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1202
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1203
HomingBackupGroup = 0

OPEN PLC12 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
    HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1204=i113 P1205=i213
;Save the low soft limits to P variables px20..x35
P1220=i114 P1221=i214
;Save the home capture flags to P variables px36..x51
P1236=i7012 P1237=i7022
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1252=P1236^$C P1253=P1237^$C
;Save the limit flags to P variables px68..x83
P1268=i124 P1269=i224
;Save the current position to P variables px84..x99
P1284=M162 P1285=M262
;Clear the soft limits
i113=0 i213=0
i114=0 i214=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    HomingGroup=2

    ;Clear home flags
    m145=0 m245=0
    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PreHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePreHomeMove
        ; Execute the move commands
        m172=100000000*(-i123/ABS(i123)) m272=100000000*(-i223/ABS(i223))
        cmd "#1J^* #2J^*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m240=0) ; At least one motor should not be In Position
        and (m142|m242 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m242 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- Homing State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; Execute the move commands
        i7012=P1236 i7022=P1237
        cmd "#1hm #2hm"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140|m240=0) ; Wait until at least one motor is In Position
        and (m142|m242 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m242 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;--- Homing State 2 ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; This block to be used after a home block with wait_for_one_motor=True.
        ; It allows motors to continue to home but restarts those that have already
        ; reached home. For use with axes that are sensitve to tilt but do not have
        ; aligned home marks

        ; make sure all jogs will be a long distance
        m172=100000000*(-i123/ABS(i123)) m272=100000000*(-i223/ABS(i223))

        ; continue processing until all motors are homed or something goes wrong
        timer = 600000 MilliSeconds
        while (m145&m245 = 0) ; at least one is not homed
        and (m142|m242 = 0) ; there are no following errors
        and (m140&m240 = 0) ; at least one is not in postion
        and (timer > 0) ; Check for timeout
            ; jog any motors that have stopped on home
            if (m140=1)
                cmd "#1J^*"
            endif
            if (m240=1)
                cmd "#2J^*"
            endif
        endw
        ; Check why we left the while loop
        if (m142|m242 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Check if all motors have homed ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    and (m145&m245=0)
        HomingStatus=StatusIncomplete
    endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    ;If we've got this far without failing, set status and state done
    HomingStatus=StatusDone
    HomingState=StateDone
    ;Restore the homing group from px03
    HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m142=0)
    cmd "#1J/"
endif
if (m242=0)
    cmd "#2J/"
endif
;Restore the high soft limits from P variables px04..x19
i113=P1204 i213=P1205
;Restore the low soft limits from P variables px20..x35
i114=P1220 i214=P1221
;Restore the home capture flags from P variables px36..x51
i7012=P1236 i7022=P1237
;Restore the limit flags to P variables px68..x83
i124=P1268 i224=P1269

DISABLE PLC12
CLOSE
