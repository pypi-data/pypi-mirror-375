# automatically generated by the FlatBuffers compiler, do not modify

# namespace: circle

class BuiltinOptions(object):
    NONE = 0
    Conv2DOptions = 1
    DepthwiseConv2DOptions = 2
    ConcatEmbeddingsOptions = 3
    LSHProjectionOptions = 4
    Pool2DOptions = 5
    SVDFOptions = 6
    RNNOptions = 7
    FullyConnectedOptions = 8
    SoftmaxOptions = 9
    ConcatenationOptions = 10
    AddOptions = 11
    L2NormOptions = 12
    LocalResponseNormalizationOptions = 13
    LSTMOptions = 14
    ResizeBilinearOptions = 15
    CallOptions = 16
    ReshapeOptions = 17
    SkipGramOptions = 18
    SpaceToDepthOptions = 19
    EmbeddingLookupSparseOptions = 20
    MulOptions = 21
    PadOptions = 22
    GatherOptions = 23
    BatchToSpaceNDOptions = 24
    SpaceToBatchNDOptions = 25
    TransposeOptions = 26
    ReducerOptions = 27
    SubOptions = 28
    DivOptions = 29
    SqueezeOptions = 30
    SequenceRNNOptions = 31
    StridedSliceOptions = 32
    ExpOptions = 33
    TopKV2Options = 34
    SplitOptions = 35
    LogSoftmaxOptions = 36
    CastOptions = 37
    DequantizeOptions = 38
    MaximumMinimumOptions = 39
    ArgMaxOptions = 40
    LessOptions = 41
    NegOptions = 42
    PadV2Options = 43
    GreaterOptions = 44
    GreaterEqualOptions = 45
    LessEqualOptions = 46
    SelectOptions = 47
    SliceOptions = 48
    TransposeConvOptions = 49
    SparseToDenseOptions = 50
    TileOptions = 51
    ExpandDimsOptions = 52
    EqualOptions = 53
    NotEqualOptions = 54
    ShapeOptions = 55
    PowOptions = 56
    ArgMinOptions = 57
    FakeQuantOptions = 58
    PackOptions = 59
    LogicalOrOptions = 60
    OneHotOptions = 61
    LogicalAndOptions = 62
    LogicalNotOptions = 63
    UnpackOptions = 64
    FloorDivOptions = 65
    SquareOptions = 66
    ZerosLikeOptions = 67
    FillOptions = 68
    BidirectionalSequenceLSTMOptions = 69
    BidirectionalSequenceRNNOptions = 70
    UnidirectionalSequenceLSTMOptions = 71
    FloorModOptions = 72
    RangeOptions = 73
    ResizeNearestNeighborOptions = 74
    LeakyReluOptions = 75
    SquaredDifferenceOptions = 76
    MirrorPadOptions = 77
    AbsOptions = 78
    SplitVOptions = 79
    UniqueOptions = 80
    ReverseV2Options = 81
    AddNOptions = 82
    GatherNdOptions = 83
    CosOptions = 84
    WhereOptions = 85
    RankOptions = 86
    ReverseSequenceOptions = 87
    MatrixDiagOptions = 88
    QuantizeOptions = 89
    MatrixSetDiagOptions = 90
    HardSwishOptions = 91
    IfOptions = 92
    WhileOptions = 93
    DepthToSpaceOptions = 94
    NonMaxSuppressionV4Options = 95
    NonMaxSuppressionV5Options = 96
    ScatterNdOptions = 97
    SelectV2Options = 98
    DensifyOptions = 99
    SegmentSumOptions = 100
    BatchMatMulOptions = 101
    CumsumOptions = 102
    CallOnceOptions = 103
    BroadcastToOptions = 104
    Rfft2dOptions = 105
    Conv3DOptions = 106
    HashtableOptions = 107
    HashtableFindOptions = 108
    HashtableImportOptions = 109
    HashtableSizeOptions = 110
    VarHandleOptions = 111
    ReadVariableOptions = 112
    AssignVariableOptions = 113
    RandomOptions = 114
    BCQGatherOptions = 252
    BCQFullyConnectedOptions = 253
    InstanceNormOptions = 254


def BuiltinOptionsCreator(unionType, table):
    from flatbuffers.table import Table
    if not isinstance(table, Table):
        return None
    if unionType == BuiltinOptions().Conv2DOptions:
        import circle_schema.v0_4.circle.Conv2DOptions
        return circle_schema.v0_4.circle.Conv2DOptions.Conv2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DepthwiseConv2DOptions:
        import circle_schema.v0_4.circle.DepthwiseConv2DOptions
        return circle_schema.v0_4.circle.DepthwiseConv2DOptions.DepthwiseConv2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ConcatEmbeddingsOptions:
        import circle_schema.v0_4.circle.ConcatEmbeddingsOptions
        return circle_schema.v0_4.circle.ConcatEmbeddingsOptions.ConcatEmbeddingsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LSHProjectionOptions:
        import circle_schema.v0_4.circle.LSHProjectionOptions
        return circle_schema.v0_4.circle.LSHProjectionOptions.LSHProjectionOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().Pool2DOptions:
        import circle_schema.v0_4.circle.Pool2DOptions
        return circle_schema.v0_4.circle.Pool2DOptions.Pool2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SVDFOptions:
        import circle_schema.v0_4.circle.SVDFOptions
        return circle_schema.v0_4.circle.SVDFOptions.SVDFOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RNNOptions:
        import circle_schema.v0_4.circle.RNNOptions
        return circle_schema.v0_4.circle.RNNOptions.RNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FullyConnectedOptions:
        import circle_schema.v0_4.circle.FullyConnectedOptions
        return circle_schema.v0_4.circle.FullyConnectedOptions.FullyConnectedOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SoftmaxOptions:
        import circle_schema.v0_4.circle.SoftmaxOptions
        return circle_schema.v0_4.circle.SoftmaxOptions.SoftmaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ConcatenationOptions:
        import circle_schema.v0_4.circle.ConcatenationOptions
        return circle_schema.v0_4.circle.ConcatenationOptions.ConcatenationOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AddOptions:
        import circle_schema.v0_4.circle.AddOptions
        return circle_schema.v0_4.circle.AddOptions.AddOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().L2NormOptions:
        import circle_schema.v0_4.circle.L2NormOptions
        return circle_schema.v0_4.circle.L2NormOptions.L2NormOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LocalResponseNormalizationOptions:
        import circle_schema.v0_4.circle.LocalResponseNormalizationOptions
        return circle_schema.v0_4.circle.LocalResponseNormalizationOptions.LocalResponseNormalizationOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LSTMOptions:
        import circle_schema.v0_4.circle.LSTMOptions
        return circle_schema.v0_4.circle.LSTMOptions.LSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ResizeBilinearOptions:
        import circle_schema.v0_4.circle.ResizeBilinearOptions
        return circle_schema.v0_4.circle.ResizeBilinearOptions.ResizeBilinearOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CallOptions:
        import circle_schema.v0_4.circle.CallOptions
        return circle_schema.v0_4.circle.CallOptions.CallOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReshapeOptions:
        import circle_schema.v0_4.circle.ReshapeOptions
        return circle_schema.v0_4.circle.ReshapeOptions.ReshapeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SkipGramOptions:
        import circle_schema.v0_4.circle.SkipGramOptions
        return circle_schema.v0_4.circle.SkipGramOptions.SkipGramOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SpaceToDepthOptions:
        import circle_schema.v0_4.circle.SpaceToDepthOptions
        return circle_schema.v0_4.circle.SpaceToDepthOptions.SpaceToDepthOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().EmbeddingLookupSparseOptions:
        import circle_schema.v0_4.circle.EmbeddingLookupSparseOptions
        return circle_schema.v0_4.circle.EmbeddingLookupSparseOptions.EmbeddingLookupSparseOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MulOptions:
        import circle_schema.v0_4.circle.MulOptions
        return circle_schema.v0_4.circle.MulOptions.MulOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PadOptions:
        import circle_schema.v0_4.circle.PadOptions
        return circle_schema.v0_4.circle.PadOptions.PadOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GatherOptions:
        import circle_schema.v0_4.circle.GatherOptions
        return circle_schema.v0_4.circle.GatherOptions.GatherOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BatchToSpaceNDOptions:
        import circle_schema.v0_4.circle.BatchToSpaceNDOptions
        return circle_schema.v0_4.circle.BatchToSpaceNDOptions.BatchToSpaceNDOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SpaceToBatchNDOptions:
        import circle_schema.v0_4.circle.SpaceToBatchNDOptions
        return circle_schema.v0_4.circle.SpaceToBatchNDOptions.SpaceToBatchNDOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TransposeOptions:
        import circle_schema.v0_4.circle.TransposeOptions
        return circle_schema.v0_4.circle.TransposeOptions.TransposeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReducerOptions:
        import circle_schema.v0_4.circle.ReducerOptions
        return circle_schema.v0_4.circle.ReducerOptions.ReducerOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SubOptions:
        import circle_schema.v0_4.circle.SubOptions
        return circle_schema.v0_4.circle.SubOptions.SubOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DivOptions:
        import circle_schema.v0_4.circle.DivOptions
        return circle_schema.v0_4.circle.DivOptions.DivOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SqueezeOptions:
        import circle_schema.v0_4.circle.SqueezeOptions
        return circle_schema.v0_4.circle.SqueezeOptions.SqueezeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SequenceRNNOptions:
        import circle_schema.v0_4.circle.SequenceRNNOptions
        return circle_schema.v0_4.circle.SequenceRNNOptions.SequenceRNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().StridedSliceOptions:
        import circle_schema.v0_4.circle.StridedSliceOptions
        return circle_schema.v0_4.circle.StridedSliceOptions.StridedSliceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ExpOptions:
        import circle_schema.v0_4.circle.ExpOptions
        return circle_schema.v0_4.circle.ExpOptions.ExpOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TopKV2Options:
        import circle_schema.v0_4.circle.TopKV2Options
        return circle_schema.v0_4.circle.TopKV2Options.TopKV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SplitOptions:
        import circle_schema.v0_4.circle.SplitOptions
        return circle_schema.v0_4.circle.SplitOptions.SplitOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogSoftmaxOptions:
        import circle_schema.v0_4.circle.LogSoftmaxOptions
        return circle_schema.v0_4.circle.LogSoftmaxOptions.LogSoftmaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CastOptions:
        import circle_schema.v0_4.circle.CastOptions
        return circle_schema.v0_4.circle.CastOptions.CastOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DequantizeOptions:
        import circle_schema.v0_4.circle.DequantizeOptions
        return circle_schema.v0_4.circle.DequantizeOptions.DequantizeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MaximumMinimumOptions:
        import circle_schema.v0_4.circle.MaximumMinimumOptions
        return circle_schema.v0_4.circle.MaximumMinimumOptions.MaximumMinimumOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ArgMaxOptions:
        import circle_schema.v0_4.circle.ArgMaxOptions
        return circle_schema.v0_4.circle.ArgMaxOptions.ArgMaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LessOptions:
        import circle_schema.v0_4.circle.LessOptions
        return circle_schema.v0_4.circle.LessOptions.LessOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NegOptions:
        import circle_schema.v0_4.circle.NegOptions
        return circle_schema.v0_4.circle.NegOptions.NegOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PadV2Options:
        import circle_schema.v0_4.circle.PadV2Options
        return circle_schema.v0_4.circle.PadV2Options.PadV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GreaterOptions:
        import circle_schema.v0_4.circle.GreaterOptions
        return circle_schema.v0_4.circle.GreaterOptions.GreaterOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GreaterEqualOptions:
        import circle_schema.v0_4.circle.GreaterEqualOptions
        return circle_schema.v0_4.circle.GreaterEqualOptions.GreaterEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LessEqualOptions:
        import circle_schema.v0_4.circle.LessEqualOptions
        return circle_schema.v0_4.circle.LessEqualOptions.LessEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SelectOptions:
        import circle_schema.v0_4.circle.SelectOptions
        return circle_schema.v0_4.circle.SelectOptions.SelectOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SliceOptions:
        import circle_schema.v0_4.circle.SliceOptions
        return circle_schema.v0_4.circle.SliceOptions.SliceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TransposeConvOptions:
        import circle_schema.v0_4.circle.TransposeConvOptions
        return circle_schema.v0_4.circle.TransposeConvOptions.TransposeConvOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SparseToDenseOptions:
        import circle_schema.v0_4.circle.SparseToDenseOptions
        return circle_schema.v0_4.circle.SparseToDenseOptions.SparseToDenseOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TileOptions:
        import circle_schema.v0_4.circle.TileOptions
        return circle_schema.v0_4.circle.TileOptions.TileOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ExpandDimsOptions:
        import circle_schema.v0_4.circle.ExpandDimsOptions
        return circle_schema.v0_4.circle.ExpandDimsOptions.ExpandDimsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().EqualOptions:
        import circle_schema.v0_4.circle.EqualOptions
        return circle_schema.v0_4.circle.EqualOptions.EqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NotEqualOptions:
        import circle_schema.v0_4.circle.NotEqualOptions
        return circle_schema.v0_4.circle.NotEqualOptions.NotEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ShapeOptions:
        import circle_schema.v0_4.circle.ShapeOptions
        return circle_schema.v0_4.circle.ShapeOptions.ShapeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PowOptions:
        import circle_schema.v0_4.circle.PowOptions
        return circle_schema.v0_4.circle.PowOptions.PowOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ArgMinOptions:
        import circle_schema.v0_4.circle.ArgMinOptions
        return circle_schema.v0_4.circle.ArgMinOptions.ArgMinOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FakeQuantOptions:
        import circle_schema.v0_4.circle.FakeQuantOptions
        return circle_schema.v0_4.circle.FakeQuantOptions.FakeQuantOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PackOptions:
        import circle_schema.v0_4.circle.PackOptions
        return circle_schema.v0_4.circle.PackOptions.PackOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalOrOptions:
        import circle_schema.v0_4.circle.LogicalOrOptions
        return circle_schema.v0_4.circle.LogicalOrOptions.LogicalOrOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().OneHotOptions:
        import circle_schema.v0_4.circle.OneHotOptions
        return circle_schema.v0_4.circle.OneHotOptions.OneHotOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalAndOptions:
        import circle_schema.v0_4.circle.LogicalAndOptions
        return circle_schema.v0_4.circle.LogicalAndOptions.LogicalAndOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalNotOptions:
        import circle_schema.v0_4.circle.LogicalNotOptions
        return circle_schema.v0_4.circle.LogicalNotOptions.LogicalNotOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UnpackOptions:
        import circle_schema.v0_4.circle.UnpackOptions
        return circle_schema.v0_4.circle.UnpackOptions.UnpackOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FloorDivOptions:
        import circle_schema.v0_4.circle.FloorDivOptions
        return circle_schema.v0_4.circle.FloorDivOptions.FloorDivOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SquareOptions:
        import circle_schema.v0_4.circle.SquareOptions
        return circle_schema.v0_4.circle.SquareOptions.SquareOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ZerosLikeOptions:
        import circle_schema.v0_4.circle.ZerosLikeOptions
        return circle_schema.v0_4.circle.ZerosLikeOptions.ZerosLikeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FillOptions:
        import circle_schema.v0_4.circle.FillOptions
        return circle_schema.v0_4.circle.FillOptions.FillOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BidirectionalSequenceLSTMOptions:
        import circle_schema.v0_4.circle.BidirectionalSequenceLSTMOptions
        return circle_schema.v0_4.circle.BidirectionalSequenceLSTMOptions.BidirectionalSequenceLSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BidirectionalSequenceRNNOptions:
        import circle_schema.v0_4.circle.BidirectionalSequenceRNNOptions
        return circle_schema.v0_4.circle.BidirectionalSequenceRNNOptions.BidirectionalSequenceRNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UnidirectionalSequenceLSTMOptions:
        import circle_schema.v0_4.circle.UnidirectionalSequenceLSTMOptions
        return circle_schema.v0_4.circle.UnidirectionalSequenceLSTMOptions.UnidirectionalSequenceLSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FloorModOptions:
        import circle_schema.v0_4.circle.FloorModOptions
        return circle_schema.v0_4.circle.FloorModOptions.FloorModOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RangeOptions:
        import circle_schema.v0_4.circle.RangeOptions
        return circle_schema.v0_4.circle.RangeOptions.RangeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ResizeNearestNeighborOptions:
        import circle_schema.v0_4.circle.ResizeNearestNeighborOptions
        return circle_schema.v0_4.circle.ResizeNearestNeighborOptions.ResizeNearestNeighborOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LeakyReluOptions:
        import circle_schema.v0_4.circle.LeakyReluOptions
        return circle_schema.v0_4.circle.LeakyReluOptions.LeakyReluOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SquaredDifferenceOptions:
        import circle_schema.v0_4.circle.SquaredDifferenceOptions
        return circle_schema.v0_4.circle.SquaredDifferenceOptions.SquaredDifferenceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MirrorPadOptions:
        import circle_schema.v0_4.circle.MirrorPadOptions
        return circle_schema.v0_4.circle.MirrorPadOptions.MirrorPadOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AbsOptions:
        import circle_schema.v0_4.circle.AbsOptions
        return circle_schema.v0_4.circle.AbsOptions.AbsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SplitVOptions:
        import circle_schema.v0_4.circle.SplitVOptions
        return circle_schema.v0_4.circle.SplitVOptions.SplitVOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UniqueOptions:
        import circle_schema.v0_4.circle.UniqueOptions
        return circle_schema.v0_4.circle.UniqueOptions.UniqueOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReverseV2Options:
        import circle_schema.v0_4.circle.ReverseV2Options
        return circle_schema.v0_4.circle.ReverseV2Options.ReverseV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AddNOptions:
        import circle_schema.v0_4.circle.AddNOptions
        return circle_schema.v0_4.circle.AddNOptions.AddNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GatherNdOptions:
        import circle_schema.v0_4.circle.GatherNdOptions
        return circle_schema.v0_4.circle.GatherNdOptions.GatherNdOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CosOptions:
        import circle_schema.v0_4.circle.CosOptions
        return circle_schema.v0_4.circle.CosOptions.CosOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().WhereOptions:
        import circle_schema.v0_4.circle.WhereOptions
        return circle_schema.v0_4.circle.WhereOptions.WhereOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RankOptions:
        import circle_schema.v0_4.circle.RankOptions
        return circle_schema.v0_4.circle.RankOptions.RankOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReverseSequenceOptions:
        import circle_schema.v0_4.circle.ReverseSequenceOptions
        return circle_schema.v0_4.circle.ReverseSequenceOptions.ReverseSequenceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MatrixDiagOptions:
        import circle_schema.v0_4.circle.MatrixDiagOptions
        return circle_schema.v0_4.circle.MatrixDiagOptions.MatrixDiagOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().QuantizeOptions:
        import circle_schema.v0_4.circle.QuantizeOptions
        return circle_schema.v0_4.circle.QuantizeOptions.QuantizeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MatrixSetDiagOptions:
        import circle_schema.v0_4.circle.MatrixSetDiagOptions
        return circle_schema.v0_4.circle.MatrixSetDiagOptions.MatrixSetDiagOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().HardSwishOptions:
        import circle_schema.v0_4.circle.HardSwishOptions
        return circle_schema.v0_4.circle.HardSwishOptions.HardSwishOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().IfOptions:
        import circle_schema.v0_4.circle.IfOptions
        return circle_schema.v0_4.circle.IfOptions.IfOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().WhileOptions:
        import circle_schema.v0_4.circle.WhileOptions
        return circle_schema.v0_4.circle.WhileOptions.WhileOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DepthToSpaceOptions:
        import circle_schema.v0_4.circle.DepthToSpaceOptions
        return circle_schema.v0_4.circle.DepthToSpaceOptions.DepthToSpaceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NonMaxSuppressionV4Options:
        import circle_schema.v0_4.circle.NonMaxSuppressionV4Options
        return circle_schema.v0_4.circle.NonMaxSuppressionV4Options.NonMaxSuppressionV4OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NonMaxSuppressionV5Options:
        import circle_schema.v0_4.circle.NonMaxSuppressionV5Options
        return circle_schema.v0_4.circle.NonMaxSuppressionV5Options.NonMaxSuppressionV5OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ScatterNdOptions:
        import circle_schema.v0_4.circle.ScatterNdOptions
        return circle_schema.v0_4.circle.ScatterNdOptions.ScatterNdOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SelectV2Options:
        import circle_schema.v0_4.circle.SelectV2Options
        return circle_schema.v0_4.circle.SelectV2Options.SelectV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DensifyOptions:
        import circle_schema.v0_4.circle.DensifyOptions
        return circle_schema.v0_4.circle.DensifyOptions.DensifyOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SegmentSumOptions:
        import circle_schema.v0_4.circle.SegmentSumOptions
        return circle_schema.v0_4.circle.SegmentSumOptions.SegmentSumOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BatchMatMulOptions:
        import circle_schema.v0_4.circle.BatchMatMulOptions
        return circle_schema.v0_4.circle.BatchMatMulOptions.BatchMatMulOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CumsumOptions:
        import circle_schema.v0_4.circle.CumsumOptions
        return circle_schema.v0_4.circle.CumsumOptions.CumsumOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CallOnceOptions:
        import circle_schema.v0_4.circle.CallOnceOptions
        return circle_schema.v0_4.circle.CallOnceOptions.CallOnceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BroadcastToOptions:
        import circle_schema.v0_4.circle.BroadcastToOptions
        return circle_schema.v0_4.circle.BroadcastToOptions.BroadcastToOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().Rfft2dOptions:
        import circle_schema.v0_4.circle.Rfft2dOptions
        return circle_schema.v0_4.circle.Rfft2dOptions.Rfft2dOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().Conv3DOptions:
        import circle_schema.v0_4.circle.Conv3DOptions
        return circle_schema.v0_4.circle.Conv3DOptions.Conv3DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().HashtableOptions:
        import circle_schema.v0_4.circle.HashtableOptions
        return circle_schema.v0_4.circle.HashtableOptions.HashtableOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().HashtableFindOptions:
        import circle_schema.v0_4.circle.HashtableFindOptions
        return circle_schema.v0_4.circle.HashtableFindOptions.HashtableFindOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().HashtableImportOptions:
        import circle_schema.v0_4.circle.HashtableImportOptions
        return circle_schema.v0_4.circle.HashtableImportOptions.HashtableImportOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().HashtableSizeOptions:
        import circle_schema.v0_4.circle.HashtableSizeOptions
        return circle_schema.v0_4.circle.HashtableSizeOptions.HashtableSizeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().VarHandleOptions:
        import circle_schema.v0_4.circle.VarHandleOptions
        return circle_schema.v0_4.circle.VarHandleOptions.VarHandleOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReadVariableOptions:
        import circle_schema.v0_4.circle.ReadVariableOptions
        return circle_schema.v0_4.circle.ReadVariableOptions.ReadVariableOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AssignVariableOptions:
        import circle_schema.v0_4.circle.AssignVariableOptions
        return circle_schema.v0_4.circle.AssignVariableOptions.AssignVariableOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RandomOptions:
        import circle_schema.v0_4.circle.RandomOptions
        return circle_schema.v0_4.circle.RandomOptions.RandomOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BCQGatherOptions:
        import circle_schema.v0_4.circle.BCQGatherOptions
        return circle_schema.v0_4.circle.BCQGatherOptions.BCQGatherOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BCQFullyConnectedOptions:
        import circle_schema.v0_4.circle.BCQFullyConnectedOptions
        return circle_schema.v0_4.circle.BCQFullyConnectedOptions.BCQFullyConnectedOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().InstanceNormOptions:
        import circle_schema.v0_4.circle.InstanceNormOptions
        return circle_schema.v0_4.circle.InstanceNormOptions.InstanceNormOptionsT.InitFromBuf(table.Bytes, table.Pos)
    return None
