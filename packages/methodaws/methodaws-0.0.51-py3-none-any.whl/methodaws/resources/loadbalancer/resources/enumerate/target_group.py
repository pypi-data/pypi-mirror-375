# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .target_group_ip_address_type import TargetGroupIpAddressType
import pydantic
import typing
from .protocol import Protocol
from .target import Target
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class TargetGroup(UniversalBaseModel):
    arn: str
    name: str
    ip_address_type: TargetGroupIpAddressType = pydantic.Field(alias="ipAddressType")
    load_balancer_arns: typing.List[str] = pydantic.Field(alias="loadBalancerArns")
    port: int
    protocol: typing.Optional[Protocol] = None
    vpc_id: typing.Optional[str] = pydantic.Field(alias="vpcId", default=None)
    targets: typing.Optional[typing.List[Target]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
