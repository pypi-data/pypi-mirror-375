[[tagspecs.django.template.defaulttags]]
name = "autoescape"
end_tag = { name = "endautoescape" }
args = [
    { name = "mode", type = { choice = ["on", "off"] } }
]

[[tagspecs.django.template.defaulttags]]
name = "block"
end_tag = { name = "endblock", args = [{ name = "name", required = false, type = "variable" }] }
args = [
    { name = "name", type = "variable" }
]

[[tagspecs.django.template.defaulttags]]
name = "comment"
end_tag = { name = "endcomment" }
args = []

[[tagspecs.django.template.defaulttags]]
name = "csrf_token"
args = []

[[tagspecs.django.template.defaulttags]]
name = "cycle"
args = [
    { name = "values", type = "varargs" },
    { name = "as", required = false, type = "literal" },
    { name = "varname", required = false, type = "variable" }
]

[[tagspecs.django.template.defaulttags]]
name = "extends"
args = [
    { name = "template", type = "string" }
]

[[tagspecs.django.template.defaulttags]]
name = "filter"
end_tag = { name = "endfilter" }
args = [
    { name = "filter_expr", type = "expression" }
]

[[tagspecs.django.template.defaulttags]]
name = "for"
end_tag = { name = "endfor" }
intermediate_tags = [ { name = "empty" } ]
args = [
    { name = "item", type = "variable" },
    { name = "in", type = "literal" },
    { name = "items", type = "variable" },
    { name = "reversed", required = false, type = "literal" }
]

[[tagspecs.django.template.defaulttags]]
name = "include"
args = [
    { name = "template", type = "string" },
    { name = "with", required = false, type = "literal" },
    { name = "context", required = false, type = "varargs" },
    { name = "only", required = false, type = "literal" }
]

[[tagspecs.django.template.defaulttags]]
name = "if"
end_tag = { name = "endif" }
intermediate_tags = [ { name = "elif" }, { name = "else" } ]
args = [
    { name = "condition", type = "expression" }
]

[[tagspecs.django.template.defaulttags]]
name = "ifchanged"
end_tag = { name = "endifchanged" }
intermediate_tags = [ { name = "else" } ]
args = [
    { name = "variables", required = false, type = "varargs" }
]

[[tagspecs.django.template.defaulttags]]
name = "load"
args = [
    { name = "libraries", type = "varargs" }
]

[[tagspecs.django.template.defaulttags]]
name = "now"
args = [
    { name = "format_string", type = "string" },
    { name = "as", required = false, type = "literal" },
    { name = "varname", required = false, type = "variable" }
]

[[tagspecs.django.template.defaulttags]]
name = "regroup"
args = [
    { name = "list", type = "variable" },
    { name = "by", type = "literal" },
    { name = "attribute", type = "variable" },
    { name = "as", type = "literal" },
    { name = "grouped", type = "variable" }
]

[[tagspecs.django.template.defaulttags]]
name = "spaceless"
end_tag = { name = "endspaceless" }
args = []

[[tagspecs.django.template.defaulttags]]
name = "static"
args = [
    { name = "path", type = "string" }
]

[[tagspecs.django.template.defaulttags]]
name = "templatetag"
args = [
    { name = "tagbit", type = { choice = ["openblock", "closeblock", "openvariable", "closevariable", "openbrace", "closebrace", "opencomment", "closecomment"] } }
]

[[tagspecs.django.template.defaulttags]]
name = "url"
args = [
    { name = "view_name", type = "string" },
    { name = "args", required = false, type = "varargs" },
    { name = "as", required = false, type = "literal" },
    { name = "varname", required = false, type = "variable" }
]

[[tagspecs.django.template.defaulttags]]
name = "verbatim"
end_tag = { name = "endverbatim" }
args = [
    { name = "name", required = false, type = "string" }
]

[[tagspecs.django.template.defaulttags]]
name = "widthratio"
args = [
    { name = "this_value", type = "variable" },
    { name = "max_value", type = "variable" },
    { name = "max_width", type = "variable" },
    { name = "as", required = false, type = "literal" },
    { name = "varname", required = false, type = "variable" }
]

[[tagspecs.django.template.defaulttags]]
name = "with"
end_tag = { name = "endwith" }
args = [
    { name = "assignments", type = "varargs" }
]

# Cache tags
[[tagspecs.django.templatetags.cache]]
name = "cache"
end_tag = { name = "endcache" }
args = [
    { name = "timeout", type = "variable" },
    { name = "cache_key", type = "variable" },
    { name = "variables", required = false, type = "varargs" }
]

# Internationalization tags
[[tagspecs.django.templatetags.i10n]]
name = "localize"
end_tag = { name = "endlocalize" }
args = [
    { name = "mode", required = false, type = { choice = ["on", "off"] } }
]

[[tagspecs.django.templatetags.i18n]]
name = "blocktranslate"
end_tag = { name = "endblocktranslate" }
intermediate_tags = [ { name = "plural" } ]
args = [
    { name = "context", required = false, type = "string" },
    { name = "with", required = false, type = "literal" },
    { name = "assignments", required = false, type = "varargs" },
    { name = "asvar", required = false, type = "literal" },
    { name = "varname", required = false, type = "variable" }
]

[[tagspecs.django.templatetags.i18n]]
name = "trans"
args = [
    { name = "message", type = "string" },
    { name = "context", required = false, type = "string" },
    { name = "as", required = false, type = "literal" },
    { name = "varname", required = false, type = "variable" },
    { name = "noop", required = false, type = "literal" }
]

# Timezone tags
[[tagspecs.django.templatetags.tz]]
name = "localtime"
end_tag = { name = "endlocaltime" }
args = [
    { name = "mode", required = false, type = { choice = ["on", "off"] } }
]

[[tagspecs.django.templatetags.tz]]
name = "timezone"
end_tag = { name = "endtimezone" }
args = [
    { name = "timezone", type = "variable" }
]

# Additional commonly used tags
[[tagspecs.django.template.defaulttags]]
name = "firstof"
args = [
    { name = "variables", type = "varargs" }
]

[[tagspecs.django.template.defaulttags]]
name = "lorem"
args = [
    { name = "count", required = false, type = "variable" },
    { name = "method", required = false, type = { choice = ["w", "p", "b"] } },
    { name = "random", required = false, type = "literal" }
]

[[tagspecs.django.template.defaulttags]]
name = "debug"
args = []
