[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "rouge-torch"
version = "0.1.0"
description = "Fast differentiable ROUGE scores for PyTorch neural network training"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Rouge-Torch Contributors", email = "contact@rouge-torch.dev"}
]
maintainers = [
    {name = "Rouge-Torch Contributors", email = "contact@rouge-torch.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
keywords = [
    "rouge",
    "pytorch", 
    "nlp",
    "natural language processing",
    "text generation",
    "evaluation metrics", 
    "differentiable",
    "neural networks",
    "machine learning",
    "summarization",
    "translation"
]
dependencies = [
    "torch>=1.9.0"
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black", 
    "isort",
    "flake8",
    "mypy"
]
test = [
    "pytest>=6.0", 
    "pytest-cov"
]

[project.urls]
Homepage = "https://github.com/username/rouge-torch"
Documentation = "https://rouge-torch.readthedocs.io/"
Repository = "https://github.com/username/rouge-torch.git"
"Bug Tracker" = "https://github.com/username/rouge-torch/issues"
Changelog = "https://github.com/username/rouge-torch/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["rouge_torch"]
include-package-data = true

# Static version defined in [project] section above

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["rouge_torch"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["rouge_torch"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]