[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aiko-monitor"
version = "0.0.4"
description = "A lightweight Python SDK for application monitoring and analytics"
authors = [
    {name = "AIKOCorp", email = "contact@aikocorp.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["monitoring", "analytics", "observability", "sdk"]

dependencies = [
    "requests>=2.25.0,<3.0",
    "aiohttp>=3.8.0,<4.0",
]

[project.optional-dependencies]
flask = [
    "flask>=2.0.0,<3.0",
]

fastapi = [
    "fastapi>=0.68.0",
    "starlette>=0.14.0,<1.0",
]

httpx = [
    "httpx>=0.23.0,<1.0",
]

dev = [
    "pytest>=6.0",
    "ruff",
    "mypy",
    "pydantic>=2.0.0",
    "deepdiff",
]

all = [
    "flask>=2.0.0,<3.0",
    "fastapi>=0.68.0",
    "starlette>=0.14.0,<1.0",
    "httpx>=0.23.0,<1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/aiko-monitor-python"
Repository = "https://github.com/yourusername/aiko-monitor-python"
Documentation = "https://aiko-monitor.readthedocs.io"
"Bug Tracker" = "https://github.com/yourusername/aiko-monitor-python/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
target-version = "py38"
line-length = 88
extend-exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["sdk_tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "artillery: marks tests that use Artillery for load testing (deselect with '-m \"not artillery\"')",
]

