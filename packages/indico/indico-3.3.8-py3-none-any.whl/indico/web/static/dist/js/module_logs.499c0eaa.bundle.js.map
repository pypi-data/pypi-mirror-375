{"version":3,"file":"js/module_logs.499c0eaa.bundle.js","mappings":"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","sources":["webpack:///indico/modules/logs/client/js/actions.js","webpack:///indico/modules/logs/client/js/components/LogEntryModal.jsx","webpack:///indico/modules/logs/client/js/containers/LogEntryModal.js","webpack:///indico/modules/logs/client/js/components/LogEntryList.jsx","webpack:///indico/modules/logs/client/js/containers/LogEntryList.js","webpack:///indico/modules/logs/client/js/components/Filter.jsx","webpack:///indico/modules/logs/client/js/containers/Filter.js","webpack:///indico/modules/logs/client/js/components/SearchBox.jsx","webpack:///indico/modules/logs/client/js/containers/SearchBox.js","webpack:///indico/modules/logs/client/js/components/Toolbar.jsx","webpack:///indico/modules/logs/client/js/components/EventLog.jsx","webpack:///indico/modules/logs/client/js/reducers.js","webpack:///indico/modules/logs/client/js/index.jsx","webpack:///node_modules/lodash/_baseTrim.js","webpack:///node_modules/lodash/_trimmedEndIndex.js","webpack:///node_modules/lodash/debounce.js","webpack:///node_modules/lodash/now.js","webpack:///node_modules/lodash/toNumber.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport qs from 'qs';\n\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\n\nexport const SET_KEYWORD = 'SET_KEYWORD';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SET_PAGE = 'SET_PAGE';\nexport const UPDATE_ENTRIES = 'UPDATE_ENTRIES';\nexport const FETCH_STARTED = 'FETCH_STARTED';\nexport const FETCH_FAILED = 'FETCH_FAILED';\nexport const SET_DETAILED_VIEW = 'SET_DETAILED_VIEW';\nexport const VIEW_PREV_ENTRY = 'VIEW_PREV_ENTRY';\nexport const VIEW_NEXT_ENTRY = 'VIEW_NEXT_ENTRY';\nexport const SET_METADATA_QUERY = 'SET_METADATA_QUERY';\nexport const SET_INITIAL_REALMS = 'SET_INITIAL_REALMS';\n\nexport function setKeyword(keyword) {\n  return {type: SET_KEYWORD, keyword};\n}\n\nexport function setFilter(filter) {\n  return {type: SET_FILTER, filter};\n}\n\nexport function setPage(currentPage) {\n  return {type: SET_PAGE, currentPage};\n}\n\nexport function setDetailedView(entryIndex) {\n  return {type: SET_DETAILED_VIEW, currentViewIndex: entryIndex};\n}\n\nexport function setMetadataQuery(metadataQuery) {\n  return {type: SET_METADATA_QUERY, metadataQuery};\n}\n\nexport function setInitialRealms(initialRealms) {\n  return {type: SET_INITIAL_REALMS, initialRealms};\n}\n\nexport function clearMetadataQuery() {\n  return dispatch => {\n    dispatch(setMetadataQuery({}));\n    dispatch(setPage(1));\n    dispatch(setDetailedView(null));\n    dispatch(fetchLogEntries());\n    history.replaceState({}, null, location.pathname);\n  };\n}\n\nexport function showRelatedEntries() {\n  return (dispatch, getStore) => {\n    const {\n      logs: {entries, currentViewIndex},\n    } = getStore();\n\n    const entry = entries[currentViewIndex];\n    const queryString = qs.stringify({meta: entry.meta}, {allowDots: true});\n    dispatch(setMetadataQuery(entry.meta));\n    dispatch(setPage(1));\n    dispatch(setDetailedView(null));\n    dispatch(fetchLogEntries());\n    history.replaceState({}, null, `${location.pathname}?${queryString}`);\n  };\n}\n\nexport function viewPrevEntry() {\n  return async (dispatch, getStore) => {\n    const {\n      staticData: {pageSize},\n      logs: {currentViewIndex, currentPage},\n    } = getStore();\n\n    if (currentViewIndex === 0) {\n      if (currentPage === 0) {\n        // ERROR!\n      } else {\n        await dispatch(setPage(currentPage - 1));\n        await dispatch(fetchLogEntries());\n        await dispatch(setDetailedView(pageSize - 1));\n      }\n    } else {\n      dispatch({type: SET_DETAILED_VIEW, currentViewIndex: currentViewIndex - 1});\n    }\n  };\n}\n\nexport function viewNextEntry() {\n  return async (dispatch, getStore) => {\n    const {\n      staticData: {pageSize},\n      logs: {currentViewIndex, currentPage, pages},\n    } = getStore();\n\n    if (currentViewIndex === pageSize - 1) {\n      if (currentPage === pages[pages.length - 1]) {\n        // ERROR!\n      } else {\n        await dispatch(setPage(currentPage + 1));\n        await dispatch(setDetailedView(0));\n        await dispatch(fetchLogEntries());\n      }\n    } else {\n      dispatch({type: SET_DETAILED_VIEW, currentViewIndex: currentViewIndex + 1});\n    }\n  };\n}\n\nexport function updateEntries(entries, pages, totalPageCount) {\n  return {type: UPDATE_ENTRIES, entries, pages, totalPageCount};\n}\n\nexport function fetchStarted() {\n  return {type: FETCH_STARTED};\n}\n\nexport function fetchFailed() {\n  return {type: FETCH_FAILED};\n}\n\nexport function fetchLogEntries() {\n  return async (dispatch, getStore) => {\n    dispatch(fetchStarted());\n    const {\n      logs: {filters, keyword, currentPage, metadataQuery},\n      staticData: {fetchLogsUrl},\n    } = getStore();\n\n    const params = {\n      page: currentPage,\n      filters: [],\n      meta: metadataQuery,\n    };\n    if (keyword) {\n      params.q = keyword;\n    }\n\n    Object.entries(filters).forEach(([item, active]) => {\n      if (active) {\n        params.filters.push(item);\n      }\n    });\n\n    let response;\n    try {\n      response = await indicoAxios.get(fetchLogsUrl, {\n        params,\n        paramsSerializer: p => qs.stringify(p, {arrayFormat: 'repeat', allowDots: true}),\n      });\n    } catch (error) {\n      handleAxiosError(error);\n      dispatch(fetchFailed());\n      return;\n    }\n    const {entries, pages, total_page_count: totalPageCount} = response.data;\n    dispatch(updateEntries(entries, pages, totalPageCount));\n  };\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {IButton, Modal} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\nimport {Slot} from 'indico/react/util';\n\nexport default class LogEntryModal extends React.Component {\n  static propTypes = {\n    entries: PropTypes.array.isRequired,\n    currentViewIndex: PropTypes.number,\n    setDetailedView: PropTypes.func.isRequired,\n    prevEntry: PropTypes.func.isRequired,\n    nextEntry: PropTypes.func.isRequired,\n    relatedEntries: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    totalPageCount: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    currentViewIndex: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.modal = undefined;\n    this.onClose = this.onClose.bind(this);\n    this.prevEntry = this.prevEntry.bind(this);\n    this.nextEntry = this.nextEntry.bind(this);\n    this.relatedEntries = this.relatedEntries.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {currentViewIndex} = this.props;\n    if (currentViewIndex !== null) {\n      this.open();\n    }\n  }\n\n  open() {\n    this.modal.open();\n  }\n\n  onClose() {\n    const {setDetailedView} = this.props;\n    setDetailedView(null);\n  }\n\n  prevEntry() {\n    const {prevEntry} = this.props;\n    prevEntry();\n  }\n\n  nextEntry() {\n    const {nextEntry} = this.props;\n    nextEntry();\n  }\n\n  relatedEntries() {\n    const {relatedEntries} = this.props;\n    relatedEntries();\n  }\n\n  _isFirstEntry() {\n    const {currentPage, currentViewIndex} = this.props;\n    return currentPage === 1 && currentViewIndex === 0;\n  }\n\n  _isLastEntry() {\n    const {currentPage, totalPageCount, currentViewIndex, entries} = this.props;\n    return currentPage === totalPageCount && currentViewIndex === entries.length - 1;\n  }\n\n  _hasRelatedEntries() {\n    const {currentViewIndex, entries} = this.props;\n    const entry = entries[currentViewIndex];\n    return Object.keys(entry.meta).length !== 0;\n  }\n\n  render() {\n    const {currentViewIndex, entries} = this.props;\n\n    if (currentViewIndex === null) {\n      return '';\n    }\n\n    const {\n      description,\n      html,\n      user: {fullName},\n      time,\n    } = entries[currentViewIndex];\n\n    return (\n      <Modal\n        title={description}\n        ref={ref => {\n          this.modal = ref;\n        }}\n        onClose={this.onClose}\n        contentLabel=\"Details about log entry\"\n        fixedFooter\n      >\n        <Slot>\n          <table className=\"i-table log-modal-details\" dangerouslySetInnerHTML={{__html: html}} />\n          <div className=\"text-superfluous log-modal-author-info flexrow f-j-end\">\n            <span>\n              {fullName && <span className=\"log-modal-user\">{fullName} </span>}\n              on\n              <span className=\"log-modal-time\"> {moment(time).format('ddd, D/M/YYYY HH:mm')}</span>\n            </span>\n          </div>\n        </Slot>\n        <Slot name=\"footer\">\n          <div className=\"group flexrow f-j-space-between\">\n            <IButton\n              title={Translate.string('Previous')}\n              icon=\"prev\"\n              onClick={this.prevEntry}\n              disabled={this._isFirstEntry()}\n            >\n              <Translate>Previous</Translate>\n            </IButton>\n\n            <IButton onClick={this.relatedEntries} disabled={!this._hasRelatedEntries()}>\n              <Translate>Related entries</Translate>\n            </IButton>\n            <IButton\n              title={Translate.string('Next')}\n              classes={{next: true}}\n              highlight\n              onClick={this.nextEntry}\n              disabled={this._isLastEntry()}\n            >\n              <Translate>Next</Translate>\n            </IButton>\n          </div>\n        </Slot>\n      </Modal>\n    );\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {connect} from 'react-redux';\n\nimport {setDetailedView, showRelatedEntries, viewNextEntry, viewPrevEntry} from '../actions';\nimport LogEntryModal from '../components/LogEntryModal';\n\nconst mapStateToProps = ({logs}) => ({\n  currentViewIndex: logs.currentViewIndex,\n  currentPage: logs.currentPage,\n  totalPageCount: logs.totalPageCount,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDetailedView: entryIndex => {\n    dispatch(setDetailedView(entryIndex));\n  },\n  prevEntry: () => {\n    dispatch(viewPrevEntry());\n  },\n  nextEntry: () => {\n    dispatch(viewNextEntry());\n  },\n  relatedEntries: () => {\n    dispatch(showRelatedEntries());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogEntryModal);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Image} from 'semantic-ui-react';\n\nimport {Paginator, TooltipIfTruncated, MessageBox} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\n\nimport LogEntryModal from '../containers/LogEntryModal';\n\nclass LogEntry extends React.PureComponent {\n  static propTypes = {\n    entry: PropTypes.object.isRequired,\n    setDetailedView: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.openDetails = this.openDetails.bind(this);\n  }\n\n  openDetails(index) {\n    const {setDetailedView} = this.props;\n    setDetailedView(index);\n  }\n\n  iconProps(entry) {\n    if (entry.type === 'email') {\n      switch (entry.payload.state) {\n        case 'pending':\n          return {\n            className: 'log-icon semantic-text warning',\n            title: Translate.string('This email is pending and will be sent soon.'),\n            'data-qtip-style': 'warning',\n          };\n        case 'sent':\n          return {\n            className: 'log-icon semantic-text success',\n            title: Translate.string('This email has been sent.'),\n            'data-qtip-style': 'success',\n          };\n        case 'failed':\n          return {\n            className: 'log-icon semantic-text error',\n            title: Translate.string('Sending this email failed.'),\n            'data-qtip-style': 'danger',\n          };\n      }\n    }\n\n    return {className: 'log-icon'};\n  }\n\n  entryKind(entry) {\n    if (entry.type !== 'email') {\n      return entry.kind;\n    }\n\n    const mapping = {pending: 'change', sent: 'positive', failed: 'negative'};\n    return mapping[entry.payload.state] || 'other';\n  }\n\n  render() {\n    const {entry} = this.props;\n    return (\n      <li className={`log-realm-${entry.realm} log-kind-${this.entryKind(entry)}`}>\n        <span className=\"log-module\">\n          <span {...this.iconProps(entry)}>\n            <i className=\"log-realm\" />\n            <i className=\"log-kind icon-circle-small\" />\n          </span>\n          <span className=\"bold\">{entry.module}</span>\n        </span>\n        <TooltipIfTruncated>\n          <span className=\"log-entry-description\" onClick={() => this.openDetails(entry.index)}>\n            {entry.description}\n          </span>\n        </TooltipIfTruncated>\n        <span className=\"log-entry-details\">\n          <span className=\"logged-time\" title={moment(entry.time).format('DD/MM/YYYY HH:mm')}>\n            <time dateTime={entry.time}>{moment(entry.time).fromNow()}</time>\n          </span>\n          {entry.user.avatarURL ? (\n            <Image\n              avatar\n              title={entry.user.fullName}\n              src={entry.user.avatarURL}\n              className=\"user-picture ui-qtip\"\n            />\n          ) : (\n            ''\n          )}\n        </span>\n      </li>\n    );\n  }\n}\n\nexport default class LogEntryList extends React.PureComponent {\n  static propTypes = {\n    entries: PropTypes.array.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    pages: PropTypes.array.isRequired,\n    changePage: PropTypes.func.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    setDetailedView: PropTypes.func.isRequired,\n  };\n\n  renderEmpty() {\n    return (\n      <MessageBox type=\"info\">\n        <Translate>No logs to show</Translate>\n      </MessageBox>\n    );\n  }\n\n  renderSpinner() {\n    return (\n      <div className=\"event-log-list-spinner\">\n        <div className=\"i-spinner\" />\n      </div>\n    );\n  }\n\n  renderList() {\n    const {entries, pages, currentPage, changePage, isFetching, setDetailedView} = this.props;\n    return (\n      <>\n        {isFetching && this.renderSpinner()}\n        <ul className={`event-log-list ${isFetching ? 'loading' : ''}`}>\n          {entries.map(entry => (\n            <LogEntry key={entry.id} entry={entry} setDetailedView={setDetailedView} />\n          ))}\n        </ul>\n        {!isFetching && (\n          <Paginator currentPage={currentPage} pages={pages} changePage={changePage} />\n        )}\n        <LogEntryModal entries={entries} />\n      </>\n    );\n  }\n\n  render() {\n    const {entries, isFetching} = this.props;\n    if (entries.length === 0) {\n      if (isFetching) {\n        return this.renderSpinner();\n      }\n\n      return this.renderEmpty();\n    } else {\n      return this.renderList();\n    }\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {connect} from 'react-redux';\n\nimport {setPage, fetchLogEntries, setDetailedView} from '../actions';\nimport LogEntryList from '../components/LogEntryList';\n\nconst mapStateToProps = ({logs}) => ({\n  entries: logs.entries,\n  currentPage: logs.currentPage,\n  pages: logs.pages,\n  isFetching: logs.isFetching,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changePage: page => {\n    dispatch(setPage(page));\n    dispatch(fetchLogEntries());\n  },\n  setDetailedView: entryIndex => {\n    dispatch(setDetailedView(entryIndex));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogEntryList);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Translate} from 'indico/react/i18n';\n\nexport default class Filter extends React.Component {\n  static propTypes = {\n    realms: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilter: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {realms, filters, setFilter} = this.props;\n    return (\n      <div className=\"toolbar\">\n        <div className={`group i-selection ${realms.length <= 1 ? 'hidden' : ''}`}>\n          <span className=\"i-button label\">\n            <Translate>Show</Translate>\n          </span>\n          {Object.keys(realms)\n            .sort()\n            .map(name => (\n              <React.Fragment key={name}>\n                <input\n                  type=\"checkbox\"\n                  id={`realm-${name}`}\n                  data-realm={name}\n                  defaultChecked={filters[name]}\n                  onChange={e => setFilter({[name]: e.target.checked})}\n                />\n                <label htmlFor={`realm-${name}`} className=\"i-button\">\n                  {realms[name]}\n                </label>\n              </React.Fragment>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {connect} from 'react-redux';\n\nimport {setFilter, fetchLogEntries, setPage} from '../actions';\nimport Filter from '../components/Filter';\n\nconst mapStateToProps = ({logs}) => ({\n  filters: logs.filters,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFilter: filter => {\n    dispatch(setFilter(filter));\n    dispatch(setPage(1));\n    dispatch(fetchLogEntries());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class SearchBox extends React.Component {\n  static propTypes = {\n    setKeyword: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {setKeyword} = this.props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"group\">\n          <span className=\"i-button label\">\n            <span className=\"icon-search\" />\n          </span>\n          <input type=\"text\" onChange={e => setKeyword(e.target.value.trim())} />\n        </div>\n      </div>\n    );\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport debounce from 'lodash/debounce';\nimport {connect} from 'react-redux';\n\nimport {setKeyword, fetchLogEntries, setPage} from '../actions';\nimport SearchBox from '../components/SearchBox';\n\nconst mapDispatchToProps = dispatch => ({\n  setKeyword: debounce(keyword => {\n    dispatch(setKeyword(keyword));\n    dispatch(setPage(1));\n    dispatch(fetchLogEntries());\n  }, 250),\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBox);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport Filter from '../containers/Filter';\nimport SearchBox from '../containers/SearchBox';\n\nclass Toolbar extends React.Component {\n  static propTypes = {\n    realms: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {realms} = this.props;\n    return (\n      <div className=\"toolbars\">\n        <Filter realms={realms} />\n        <SearchBox />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({staticData}) => ({\n  realms: staticData.realms,\n});\n\nexport default connect(mapStateToProps)(Toolbar);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {Param, Translate} from 'indico/react/i18n';\n\nimport {clearMetadataQuery} from '../actions';\nimport LogEntryList from '../containers/LogEntryList';\n\nimport Toolbar from './Toolbar';\n\nfunction MetadataQueryMessage() {\n  const dispatch = useDispatch();\n  const resetURLFiltering = () => {\n    dispatch(clearMetadataQuery());\n  };\n\n  return (\n    <div className=\"highlight-message-box\">\n      <span className=\"icon\" />\n      <div className=\"message-text\">\n        <Translate>\n          Log entries are currently filtered by URL.{' '}\n          <Param name=\"link\" wrapper={<a onClick={resetURLFiltering} />}>\n            Click here\n          </Param>{' '}\n          to disable the filter.\n        </Translate>\n      </div>\n    </div>\n  );\n}\n\nMetadataQueryMessage.propTypes = {};\n\nexport default function EventLog() {\n  const metadataQuery = useSelector(state => state.logs.metadataQuery);\n  return (\n    <>\n      {Object.keys(metadataQuery).length !== 0 && <MetadataQueryMessage />}\n      <Toolbar />\n      <LogEntryList />\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport * as actions from './actions';\n\nconst initialState = {\n  entries: [],\n  keyword: null,\n  currentPage: 1,\n  isFetching: false,\n  metadataQuery: {},\n  filters: {},\n  pages: [],\n  totalPageCount: 0,\n  currentViewIndex: null,\n};\n\nexport default function logReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_INITIAL_REALMS:\n      return {...state, filters: Object.fromEntries(action.initialRealms.map(r => [r, true]))};\n    case actions.SET_KEYWORD:\n      return {...state, keyword: action.keyword};\n    case actions.SET_FILTER:\n      return {...state, filters: {...state.filters, ...action.filter}};\n    case actions.SET_PAGE:\n      return {...state, currentPage: action.currentPage};\n    case actions.UPDATE_ENTRIES:\n      return {\n        ...state,\n        entries: action.entries,\n        pages: action.pages,\n        totalPageCount: action.totalPageCount,\n        isFetching: false,\n      };\n    case actions.FETCH_STARTED:\n      return {...state, isFetching: true};\n    case actions.FETCH_FAILED:\n      return {...state, isFetching: false};\n    case actions.SET_DETAILED_VIEW:\n      return {...state, currentViewIndex: action.currentViewIndex};\n    case actions.SET_METADATA_QUERY:\n      return {...state, metadataQuery: action.metadataQuery};\n    default:\n      return state;\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport createReduxStore from 'indico/utils/redux';\n\nimport {fetchLogEntries, setMetadataQuery, setInitialRealms} from './actions';\nimport EventLog from './components/EventLog';\nimport reducer from './reducers';\n\nimport '../style/logs.scss';\n\nwindow.addEventListener('load', () => {\n  const rootElement = document.querySelector('.event-log');\n  const initialData = {\n    staticData: {\n      fetchLogsUrl: rootElement.dataset.fetchLogsUrl,\n      realms: JSON.parse(rootElement.dataset.realms),\n      pageSize: 15,\n    },\n  };\n  const store = createReduxStore(\n    'event-logs',\n    {\n      logs: reducer,\n    },\n    initialData\n  );\n  store.dispatch(setInitialRealms(Object.keys(initialData.staticData.realms)));\n  store.dispatch(setMetadataQuery(JSON.parse(rootElement.dataset.metadataQuery)));\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <EventLog />\n    </Provider>,\n    rootElement\n  );\n\n  store.dispatch(fetchLogEntries());\n});\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["SET_KEYWORD","SET_FILTER","SET_PAGE","UPDATE_ENTRIES","FETCH_STARTED","FETCH_FAILED","SET_DETAILED_VIEW","SET_METADATA_QUERY","SET_INITIAL_REALMS","setPage","currentPage","type","setDetailedView","entryIndex","currentViewIndex","setMetadataQuery","metadataQuery","fetchLogEntries","async","dispatch","getStore","logs","filters","keyword","staticData","fetchLogsUrl","params","page","meta","response","q","Object","entries","forEach","item","active","push","indicoAxios","get","paramsSerializer","p","qs","arrayFormat","allowDots","error","handleAxiosError","pages","total_page_count","totalPageCount","data","updateEntries","LogEntryModal","React","constructor","props","super","this","modal","undefined","onClose","bind","prevEntry","nextEntry","relatedEntries","componentDidUpdate","open","_isFirstEntry","_isLastEntry","length","_hasRelatedEntries","entry","keys","render","description","html","user","fullName","time","Modal","title","ref","contentLabel","fixedFooter","Slot","className","dangerouslySetInnerHTML","__html","moment","format","name","IButton","Translate","string","icon","onClick","disabled","classes","next","highlight","_defineProperty","PropTypes","isRequired","connect","mapStateToProps","pageSize","queryString","history","replaceState","location","pathname","LogEntry","openDetails","index","iconProps","payload","state","entryKind","kind","pending","sent","failed","realm","module","TooltipIfTruncated","dateTime","fromNow","avatarURL","Image","avatar","src","LogEntryList","renderEmpty","MessageBox","renderSpinner","renderList","changePage","isFetching","map","key","id","Paginator","Filter","realms","setFilter","sort","defaultChecked","onChange","e","target","checked","htmlFor","filter","SearchBox","setKeyword","value","trim","debounce","Toolbar","MetadataQueryMessage","useDispatch","Param","wrapper","resetURLFiltering","EventLog","useSelector","propTypes","initialState","logReducer","action","actions","fromEntries","initialRealms","r","window","addEventListener","rootElement","document","querySelector","initialData","dataset","JSON","parse","store","createReduxStore","reducer","ReactDOM","Provider","trimmedEndIndex","reTrimStart","exports","slice","replace","reWhitespace","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","leadingEdge","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}