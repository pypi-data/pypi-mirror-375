# Generated by Django 5.2.3 on 2025-06-18 15:56

import django.db.models.deletion
import djangocms_stories.models
import djangocms_text.fields
import filer.fields.image
import meta.models
import parler.fields
import parler.models
import sortedm2m.fields
import taggit_autosuggest.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0036_auto_20240311_1028'),
        ('filer', '0017_image__transparent'),
        ('sites', '0002_alter_domain_unique'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('priority', models.IntegerField(blank=True, null=True, verbose_name='priority')),
                ('main_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='djangocms_category_image', to=settings.FILER_IMAGE_MODEL, verbose_name='main image')),
                ('main_image_full', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='djangocms_category_full', to='filer.thumbnailoption', verbose_name='main image full')),
                ('main_image_thumbnail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='djangocms_category_thumbnail', to='filer.thumbnailoption', verbose_name='main image thumbnail')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='djangocms_stories.postcategory', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'post category',
                'verbose_name_plural': 'post categories',
                'ordering': (models.OrderBy(models.F('priority'), nulls_last=True),),
            },
            bases=(djangocms_stories.models.PostMetaMixin, meta.models.ModelMeta, parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('date_published', models.DateTimeField(blank=True, null=True, verbose_name='published since')),
                ('date_published_end', models.DateTimeField(blank=True, null=True, verbose_name='published until')),
                ('date_featured', models.DateTimeField(blank=True, null=True, verbose_name='featured date')),
                ('pinned', models.IntegerField(blank=True, help_text='Pinned posts are shown in ascending order before unpinned ones. Leave blank for regular order by date.', null=True, verbose_name='pinning priority')),
                ('publish', models.BooleanField(default=False, verbose_name='publish')),
                ('include_in_rss', models.BooleanField(default=True, verbose_name='include in RSS feed')),
                ('enable_comments', models.BooleanField(default=True, verbose_name='enable comments on post')),
                ('enable_liveblog', models.BooleanField(default=False, verbose_name='enable liveblog on post')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='djangocms_stories_post_author', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('main_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='djangocms_stories_post_image', to=settings.FILER_IMAGE_MODEL, verbose_name='main image')),
                ('main_image_full', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='djangocms_stories_post_full', to='filer.thumbnailoption', verbose_name='main image full')),
                ('main_image_thumbnail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='djangocms_stories_post_thumbnail', to='filer.thumbnailoption', verbose_name='main image thumbnail')),
                ('related', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='djangocms_stories.post', verbose_name='Related Posts')),
                ('sites', models.ManyToManyField(blank=True, help_text='Select sites in which to show the post. If none is set it will be visible in all the configured sites.', to='sites.site', verbose_name='Site(s)')),
                ('tags', taggit_autosuggest.managers.TaggableManager(blank=True, help_text='Type a tag and hit tab, or start typing and select from autocomplete list.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('categories', models.ManyToManyField(blank=True, related_name='posts', to='djangocms_stories.postcategory', verbose_name='category')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'ordering': (models.OrderBy(models.F('pinned'), nulls_last=True), '-date_published', '-date_created'),
                'get_latest_by': 'date_published',
            },
        ),
        migrations.CreateModel(
            name='PostContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(db_index=True, max_length=15, verbose_name='language')),
                ('title', models.CharField(max_length=752, verbose_name='title')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=752, verbose_name='slug')),
                ('subtitle', models.CharField(blank=True, default='', max_length=767, verbose_name='subtitle')),
                ('abstract', djangocms_text.fields.HTMLField(blank=True, default='', verbose_name='abstract')),
                ('meta_description', models.TextField(blank=True, default='', verbose_name='post meta description')),
                ('meta_keywords', models.TextField(blank=True, default='', verbose_name='post meta keywords')),
                ('meta_title', models.CharField(blank=True, default='', help_text='used in title tag and social sharing', max_length=2000, verbose_name='post meta title')),
                ('post_text', djangocms_text.fields.HTMLField(blank=True, default='', verbose_name='text')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangocms_stories.post')),
            ],
            options={
                'verbose_name': 'post content',
                'verbose_name_plural': 'post contents',
                'ordering': (models.OrderBy(models.F('post__pinned'), nulls_last=True), '-post__date_published', '-post__date_created'),
                'get_latest_by': 'date_published',
            },
            bases=(djangocms_stories.models.PostMetaMixin, meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name='StoriesConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, verbose_name='type')),
                ('namespace', models.CharField(default=None, max_length=100, unique=True, verbose_name='instance namespace')),
                ('url_patterns', models.CharField(blank=True, max_length=12, verbose_name='Permalink structure')),
                ('use_placeholder', models.BooleanField(default=True, verbose_name='Use placeholder and plugins for article body')),
                ('use_abstract', models.BooleanField(default=True, verbose_name='Use abstract field')),
                ('use_related', models.SmallIntegerField(choices=[(0, 'No'), (1, 'Yes, from this stories config'), (2, 'Yes, from this site')], default=1, verbose_name='Enable related posts')),
                ('set_author', models.BooleanField(verbose_name='Set author by default')),
                ('paginate_by', models.SmallIntegerField(help_text='When paginating list views, how many articles per page?', null=True, verbose_name='Paginate size')),
                ('template_prefix', models.CharField(blank=True, default='', help_text='Alternative directory to load the stories templates from', max_length=200, verbose_name='Template prefix')),
                ('menu_structure', models.CharField(help_text='Structure of the django CMS menu', max_length=200, verbose_name='Menu structure')),
                ('menu_empty_categories', models.BooleanField(help_text='Show categories with no post attached in the menu', verbose_name='Show empty categories in menu')),
                ('sitemap_changefreq', models.CharField(help_text='Changefreq attribute for sitemap items', max_length=12, verbose_name='Sitemap changefreq')),
                ('sitemap_priority', models.DecimalField(decimal_places=3, help_text='Priority attribute for sitemap items', max_digits=5, verbose_name='Sitemap priority')),
                ('object_type', models.CharField(blank=True, max_length=200, verbose_name='Object type')),
                ('og_type', models.CharField(blank=True, max_length=200, verbose_name='Facebook type')),
                ('og_app_id', models.CharField(blank=True, max_length=200, verbose_name='Facebook application ID')),
                ('og_profile_id', models.CharField(blank=True, max_length=200, verbose_name='Facebook profile ID')),
                ('og_publisher', models.CharField(blank=True, max_length=200, verbose_name='Facebook page URL')),
                ('og_author_url', models.CharField(blank=True, max_length=200, verbose_name='Facebook author URL')),
                ('og_author', models.CharField(blank=True, max_length=200, verbose_name='Facebook author')),
                ('twitter_type', models.CharField(blank=True, max_length=200, verbose_name='Twitter type')),
                ('twitter_site', models.CharField(blank=True, max_length=200, verbose_name='Twitter site handle')),
                ('twitter_author', models.CharField(blank=True, max_length=200, verbose_name='Twitter author handle')),
                ('gplus_type', models.CharField(blank=True, max_length=200, verbose_name='Schema.org type')),
                ('gplus_author', models.CharField(blank=True, max_length=200, verbose_name='Schema.org author name')),
                ('send_knock_create', models.BooleanField(default=False, help_text='Emits a desktop notification -if enabled- when publishing a new post', verbose_name='Send notifications on post publish')),
                ('send_knock_update', models.BooleanField(default=False, help_text='Emits a desktop notification -if enabled- when editing a published post', verbose_name='Send notifications on post update')),
                ('default_image_full', models.ForeignKey(blank=True, help_text='If left empty the image size will have to be set for every newly created post.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_images_full', to='filer.thumbnailoption', verbose_name='default size of full images')),
                ('default_image_thumbnail', models.ForeignKey(blank=True, help_text='If left empty the thumbnail image size will have to be set for every newly created post.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_images_thumbnail', to='filer.thumbnailoption', verbose_name='default size of thumbnail images')),
            ],
            options={
                'verbose_name': 'stories config',
                'verbose_name_plural': 'stories configs',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='postcategory',
            name='app_config',
            field=models.ForeignKey(help_text='When selecting a value, the form is reloaded to get the updated default', null=True, on_delete=django.db.models.deletion.CASCADE, to='djangocms_stories.storiesconfig', verbose_name='app. config'),
        ),
        migrations.AddField(
            model_name='post',
            name='app_config',
            field=models.ForeignKey(help_text='When selecting a value, the form is reloaded to get the updated default', null=True, on_delete=django.db.models.deletion.CASCADE, to='djangocms_stories.storiesconfig', verbose_name='app. config'),
        ),
        migrations.CreateModel(
            name='LatestPostsPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin')),
                ('current_site', models.BooleanField(default=True, help_text='Select items from the current site only', verbose_name='current site')),
                ('template_folder', models.CharField(choices=[('plugins', 'Default template')], default='plugins', help_text='Select plugin layout to load for this instance', max_length=200, verbose_name='Plugin layout')),
                ('latest_posts', models.IntegerField(default=5, help_text='The number of latests entries to be displayed.', verbose_name='entries')),
                ('tags', taggit_autosuggest.managers.TaggableManager(blank=True, help_text='Show only the entries tagged with chosen tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='filter by tag')),
                ('categories', models.ManyToManyField(blank=True, help_text='Show only the posts of the chosen categories.', to='djangocms_stories.postcategory', verbose_name='filter by category')),
                ('app_config', models.ForeignKey(help_text='When selecting a value, the form is reloaded to get the updated default', null=True, on_delete=django.db.models.deletion.CASCADE, to='djangocms_stories.storiesconfig', verbose_name='app. config')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='GenericBlogPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin')),
                ('current_site', models.BooleanField(default=True, help_text='Select items from the current site only', verbose_name='current site')),
                ('template_folder', models.CharField(choices=[('plugins', 'Default template')], default='plugins', help_text='Select plugin layout to load for this instance', max_length=200, verbose_name='Plugin layout')),
                ('app_config', models.ForeignKey(help_text='When selecting a value, the form is reloaded to get the updated default', null=True, on_delete=django.db.models.deletion.CASCADE, to='djangocms_stories.storiesconfig', verbose_name='app. config')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='FeaturedPostsPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin')),
                ('current_site', models.BooleanField(default=True, help_text='Select items from the current site only', verbose_name='current site')),
                ('template_folder', models.CharField(choices=[('plugins', 'Default template')], default='plugins', help_text='Select plugin layout to load for this instance', max_length=200, verbose_name='Plugin layout')),
                ('posts', sortedm2m.fields.SortedManyToManyField(help_text=None, to='djangocms_stories.post', verbose_name='Featured posts')),
                ('app_config', models.ForeignKey(help_text='When selecting a value, the form is reloaded to get the updated default', null=True, on_delete=django.db.models.deletion.CASCADE, to='djangocms_stories.storiesconfig', verbose_name='app. config')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='AuthorEntriesPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin')),
                ('current_site', models.BooleanField(default=True, help_text='Select items from the current site only', verbose_name='current site')),
                ('template_folder', models.CharField(choices=[('plugins', 'Default template')], default='plugins', help_text='Select plugin layout to load for this instance', max_length=200, verbose_name='Plugin layout')),
                ('latest_posts', models.IntegerField(default=5, help_text='The number of author entries to be displayed.', verbose_name='entries')),
                ('authors', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='authors')),
                ('app_config', models.ForeignKey(help_text='When selecting a value, the form is reloaded to get the updated default', null=True, on_delete=django.db.models.deletion.CASCADE, to='djangocms_stories.storiesconfig', verbose_name='app. config')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='PostCategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=752, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=752, verbose_name='slug')),
                ('meta_description', models.TextField(blank=True, default='', verbose_name='category meta description')),
                ('abstract', djangocms_text.fields.HTMLField(blank=True, default='', verbose_name='abstract')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='djangocms_stories.postcategory')),
            ],
            options={
                'verbose_name': 'post category Translation',
                'db_table': 'djangocms_stories_postcategory_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master'), ('language_code', 'slug')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StoriesConfigTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('app_title', models.CharField(default='+', max_length=200, verbose_name='application title')),
                ('object_name', models.CharField(default='+', max_length=200, verbose_name='object name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='djangocms_stories.storiesconfig')),
            ],
            options={
                'verbose_name': 'stories config Translation',
                'db_table': 'djangocms_stories_storiesconfig_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
