CLOSE

;####################################################
; Autogenerated Homing PLC for PMAC, DO NOT MODIFY
; Group 2:
;  Axis 15: htype = HSW_HLIM, jdist = -1000, post = i
;  Axis 13: htype = HSW_HLIM, jdist = -1000, post = i
; Group 3:
;  Axis 16: htype = HSW_HLIM, jdist = -1000, post = i
;  Axis 14: htype = HSW_HLIM, jdist = -1000, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(14&30)*50+14%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1400
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1401
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1402
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1403
HomingBackupGroup = 0

OPEN PLC14 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1404=i1513 P1405=i1313 P1406=i1613 P1407=i1413
;Save the low soft limits to P variables px20..x35
P1420=i1514 P1421=i1314 P1422=i1614 P1423=i1414
;Save the home capture flags to P variables px36..x51
MSR28,i912,P1436 MSR24,i912,P1437 MSR29,i912,P1438 MSR25,i912,P1439
;If any are zero then there is probably a macro error
if (P1436=0 or P1437=0 or P1438=0 or P1439=0)
	HomingStatus=StatusInvalid
endif
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1452=P1436^$C P1453=P1437^$C P1454=P1438^$C P1455=P1439^$C
;Save the limit flags to P variables px68..x83
P1468=i1524 P1469=i1324 P1470=i1624 P1471=i1424
;Save the current position to P variables px84..x99
P1484=M1562 P1485=M1362 P1486=M1662 P1487=M1462
;Clear the soft limits
i1513=0 i1313=0 i1613=0 i1413=0
i1514=0 i1314=0 i1614=0 i1414=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m1545=0 m1345=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m1572=100000000*(i1523/ABS(i1523)) 		m1372=100000000*(i1323/ABS(i1323))
		cmd "#15J^*^-1000 #13J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1540&m1340=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m1530=1)
			m1572=100000000*(-i1523/ABS(i1523))
			cmd "#15J^*^-1000"
		endif
		if (m1330=1)
			m1372=100000000*(-i1323/ABS(i1323))
			cmd "#13J^*^-1000"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1540&m1340=0) ; At least one motor should not be In Position
		and (m1530|m1330=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1530|m1330=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m1572=100000000*(i1523/ABS(i1523)) 		m1372=100000000*(i1323/ABS(i1323))
		cmd "#15J^*^-1000 #13J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1540&m1340=0) ; At least one motor should not be In Position
		and (m1542|m1342 = 0) ; Following error check
		and (m1530|m1330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1542|m1342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1530|m1330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1484=(P1484-M1562)/(I1508*32)+-1000-(i1526/16)
		P1485=(P1485-M1362)/(I1308*32)+-1000-(i1326/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW28,i912,P1452 MSW24,i912,P1453 		m1572=100000000*(-i1523/ABS(i1523)) 		m1372=100000000*(-i1323/ABS(i1323))
		cmd "#15J^*^-1000 #13J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1540&m1340=0) ; At least one motor should not be In Position
		and (m1542|m1342 = 0) ; Following error check
		and (m1530|m1330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1542|m1342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1530|m1330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW28,i912,P1436 MSW24,i912,P1437
		cmd "#15hm #13hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1540&m1340=0) ; At least one motor should not be In Position
		and (m1542|m1342 = 0) ; Following error check
		and (m1530|m1330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1542|m1342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1530|m1330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m1545&m1345=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m1572=P1484 m1372=P1485
		cmd "#15J=* #13J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1540&m1340=0) ; At least one motor should not be In Position
		and (m1542|m1342 = 0) ; Following error check
		and (m1530|m1330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1542|m1342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1530|m1330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m1645=0 m1445=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m1672=100000000*(i1623/ABS(i1623)) 		m1472=100000000*(i1423/ABS(i1423))
		cmd "#16J^*^-1000 #14J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1640&m1440=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m1630=1)
			m1672=100000000*(-i1623/ABS(i1623))
			cmd "#16J^*^-1000"
		endif
		if (m1430=1)
			m1472=100000000*(-i1423/ABS(i1423))
			cmd "#14J^*^-1000"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1640&m1440=0) ; At least one motor should not be In Position
		and (m1630|m1430=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1630|m1430=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m1672=100000000*(i1623/ABS(i1623)) 		m1472=100000000*(i1423/ABS(i1423))
		cmd "#16J^*^-1000 #14J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1640&m1440=0) ; At least one motor should not be In Position
		and (m1642|m1442 = 0) ; Following error check
		and (m1630|m1430 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1642|m1442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1630|m1430 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1486=(P1486-M1662)/(I1608*32)+-1000-(i1626/16)
		P1487=(P1487-M1462)/(I1408*32)+-1000-(i1426/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW29,i912,P1454 MSW25,i912,P1455 		m1672=100000000*(-i1623/ABS(i1623)) 		m1472=100000000*(-i1423/ABS(i1423))
		cmd "#16J^*^-1000 #14J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1640&m1440=0) ; At least one motor should not be In Position
		and (m1642|m1442 = 0) ; Following error check
		and (m1630|m1430 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1642|m1442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1630|m1430 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW29,i912,P1438 MSW25,i912,P1439
		cmd "#16hm #14hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1640&m1440=0) ; At least one motor should not be In Position
		and (m1642|m1442 = 0) ; Following error check
		and (m1630|m1430 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1642|m1442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1630|m1430 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m1645&m1445=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m1672=P1486 m1472=P1487
		cmd "#16J=* #14J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1640&m1440=0) ; At least one motor should not be In Position
		and (m1642|m1442 = 0) ; Following error check
		and (m1630|m1430 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1642|m1442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1630|m1430 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m1542=0)
	cmd "#15J/"
endif
if (m1342=0)
	cmd "#13J/"
endif
if (m1642=0)
	cmd "#16J/"
endif
if (m1442=0)
	cmd "#14J/"
endif
;Restore the high soft limits from P variables px04..x19
i1513=P1404 i1313=P1405 i1613=P1406 i1413=P1407
;Restore the low soft limits from P variables px20..x35
i1514=P1420 i1314=P1421 i1614=P1422 i1414=P1423
;Restore the home capture flags from P variables px36..x51
MSW28,i912,P1436 MSW24,i912,P1437 MSW29,i912,P1438 MSW25,i912,P1439
;Restore the limit flags to P variables px68..x83
i1524=P1468 i1324=P1469 i1624=P1470 i1424=P1471

DISABLE PLC14
CLOSE
