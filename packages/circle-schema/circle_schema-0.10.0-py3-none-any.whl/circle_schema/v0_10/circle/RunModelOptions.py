# automatically generated by the FlatBuffers compiler, do not modify

# namespace: circle

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RunModelOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RunModelOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRunModelOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def RunModelOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x43\x49\x52\x30", size_prefixed=size_prefixed)

    # RunModelOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RunModelOptions
    def Location(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RunModelOptions
    def Signature(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(2)
def RunModelOptionsStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddLocation(builder, location): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(location), 0)
def RunModelOptionsAddLocation(builder, location):
    """This method is deprecated. Please switch to AddLocation."""
    return AddLocation(builder, location)
def AddSignature(builder, signature): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(signature), 0)
def RunModelOptionsAddSignature(builder, signature):
    """This method is deprecated. Please switch to AddSignature."""
    return AddSignature(builder, signature)
def End(builder): return builder.EndObject()
def RunModelOptionsEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)

class RunModelOptionsT(object):

    # RunModelOptionsT
    def __init__(self):
        self.location = None  # type: str
        self.signature = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        runModelOptions = RunModelOptions()
        runModelOptions.Init(buf, pos)
        return cls.InitFromObj(runModelOptions)

    @classmethod
    def InitFromObj(cls, runModelOptions):
        x = RunModelOptionsT()
        x._UnPack(runModelOptions)
        return x

    # RunModelOptionsT
    def _UnPack(self, runModelOptions):
        if runModelOptions is None:
            return
        self.location = runModelOptions.Location()
        self.signature = runModelOptions.Signature()

    # RunModelOptionsT
    def Pack(self, builder):
        if self.location is not None:
            location = builder.CreateString(self.location)
        if self.signature is not None:
            signature = builder.CreateString(self.signature)
        Start(builder)
        if self.location is not None:
            AddLocation(builder, location)
        if self.signature is not None:
            AddSignature(builder, signature)
        runModelOptions = End(builder)
        return runModelOptions
