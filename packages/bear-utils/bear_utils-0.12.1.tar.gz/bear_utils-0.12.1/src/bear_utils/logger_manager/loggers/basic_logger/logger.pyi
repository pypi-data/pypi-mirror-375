from collections.abc import Callable

from rich.console import Console

class BasicLogger:
    def __init__(self, console: Console | None = None) -> None: ...
    def info(self, msg: object, **kwargs) -> None: ...
    def debug(self, msg: object, **kwargs) -> None: ...
    def warning(self, msg: object, **kwargs) -> None: ...
    def error(self, msg: object, **kwargs) -> None: ...
    def exception(self, msg: object, **kwargs) -> None: ...
    def success(self, msg: object, **kwargs) -> None: ...
    def failure(self, msg: object, **kwargs) -> None: ...
    def verbose(self, msg: object, **kwargs) -> None: ...
    def print(self, msg: object, style: str | None = None, **kwargs) -> None: ...
    def log(self, level: str, msg: object, **kwargs) -> None: ...
    def inspect(self, obj: object, **kwargs) -> None: ...
    def print_json(self, data: object, **kwargs) -> None: ...
    def replacement_method(self, level: str) -> Callable: ...
