# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workflow_with_existing_schema import WorkflowWithExistingSchema

class TestWorkflowWithExistingSchema(unittest.TestCase):
    """WorkflowWithExistingSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkflowWithExistingSchema:
        """Test WorkflowWithExistingSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkflowWithExistingSchema`
        """
        model = WorkflowWithExistingSchema()
        if include_optional:
            return WorkflowWithExistingSchema(
                schema_id = '',
                urls = [
                    ''
                    ],
                navigation_mode = 'single-page',
                user_prompt = '0123456789',
                limit = 56,
                location = openapi_client.models.workflow_with_custom_schema_location.Workflow_with_Custom_Schema_location(
                    type = 'auto', 
                    iso_code = '', ),
                name = '',
                description = '',
                tags = [
                    ''
                    ],
                monitoring = None,
                interval = 'ONLY_ONCE',
                schedules = [
                    ''
                    ],
                bypass_preview = True,
                interactions = [
                    openapi_client.models.workflow_with_custom_schema_interactions_inner.Workflow_with_Custom_Schema_interactions_inner(
                        type = 'CLICK', 
                        selector = '', 
                        text = '', )
                    ]
            )
        else:
            return WorkflowWithExistingSchema(
                schema_id = '',
                urls = [
                    ''
                    ],
                navigation_mode = 'single-page',
        )
        """

    def testWorkflowWithExistingSchema(self):
        """Test WorkflowWithExistingSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
