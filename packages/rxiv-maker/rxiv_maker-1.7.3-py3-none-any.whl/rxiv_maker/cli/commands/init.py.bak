"""Init command for rxiv-maker CLI."""

import click

from ..framework import InitCommand


@click.command(context_settings={"help_option_names": ["-h", "--help"]})
@click.argument("manuscript_path", type=click.Path(), required=False)
@click.option("--force", "-f", is_flag=True, help="Force overwrite existing files")
@click.option("--no-interactive", is_flag=True, help="Skip interactive prompts and use defaults")
@click.option(
    "--validate", is_flag=True, help="Run validation after initialization to ensure template builds correctly"
)
@click.pass_context
def init(
    ctx: click.Context,
    manuscript_path: str | None,
    force: bool,
    no_interactive: bool,
    validate: bool,
) -> None:
    """Initialize a new manuscript directory with template files and structure.

    **MANUSCRIPT_PATH**: Directory to create for your manuscript.
    Defaults to MANUSCRIPT/

    Creates all required files including configuration, main content, supplementary
    information, bibliography, and figure directory with example scripts.

    ## Examples

    **Initialize default manuscript:**

        $ rxiv init

    **Initialize custom manuscript directory:**

        $ rxiv init MY_PAPER/

    **Force overwrite existing directory:**

        $ rxiv init --force

    **Initialize and validate template builds correctly:**

        $ rxiv init --validate

    **Non-interactive initialization:**

        $ rxiv init --no-interactive
    """
    # Use centralized InitCommand framework - eliminates 250+ lines of boilerplate!
    command = InitCommand()
    command.run(
        ctx,
        manuscript_path,
        force=force,
        no_interactive=no_interactive,
        validate=validate
    )
    """
    verbose = ctx.obj.get("verbose", False)

    # Default to MANUSCRIPT if not specified
    if manuscript_path is None:
        manuscript_path = "MANUSCRIPT"

    manuscript_dir = Path(manuscript_path)

    # Check if directory exists
    if manuscript_dir.exists() and not force:
        console.print(f"‚ùå Error: Directory '{manuscript_path}' already exists", style="red")
        console.print("üí° Use --force to overwrite existing files", style="yellow")
        sys.exit(1)

    try:
        # Create directory structure
        manuscript_dir.mkdir(parents=True, exist_ok=True)
        figures_dir = manuscript_dir / "FIGURES"
        figures_dir.mkdir(exist_ok=True)

        console.print(f"üìÅ Created manuscript directory: {manuscript_path}", style="green")

        # Get metadata (interactive or defaults)
        if no_interactive:
            title = "My Research Paper"
            subtitle = ""
            author_name = "Your Name"
            author_email = "your.email@example.com"
            author_affiliation = "Your Institution"
        else:
            console.print("\nüìù Please provide manuscript information:", style="blue")

            title = Prompt.ask("Title", default="My Research Paper")
            subtitle = Prompt.ask("Subtitle (optional)", default="")

            # Author information
            author_name = Prompt.ask("Author name", default="Your Name")
            author_email = Prompt.ask("Author email", default="your.email@example.com")
            author_affiliation = Prompt.ask("Author affiliation", default="Your Institution")

        # Create 00_CONFIG.yml
        today = datetime.date.today().strftime("%Y-%m-%d")
        config_content = f'''# Manuscript Configuration
title: "{title}"
{f'subtitle: "{subtitle}"' if subtitle else '# subtitle: "Optional subtitle"'}

# Authors and affiliations
authors:
  - name: "{author_name}"
    email: "{author_email}"
    affiliations: ["{author_affiliation}"]

affiliations:
  - "{author_affiliation}"

# Publication metadata
date: "{today}"
license: "CC BY 4.0"
acknowledge_rxiv_maker: true

# Keywords
keywords: ["keyword1", "keyword2", "keyword3"]

# Bibliography file
bibliography: "03_REFERENCES.bib"
'''

        with open(manuscript_dir / "00_CONFIG.yml", "w", encoding="utf-8") as f:
            f.write(config_content)

        # Create 01_MAIN.md
        main_content = f"""# {title}

## Abstract

Write your abstract here. This should provide a clear and concise summary of your research.

## Introduction

Your introduction goes here. You can use all the features of **rxiv-markdown**:

- Citations: @your_reference_2024
- Figure references: @fig:example

## Methods

Describe your methods here. Rxiv-Maker supports:

- Mathematical equations: $E = mc^2$
- Citations and cross-references
- Automatic figure generation

### Subsection

You can use subsections to organize your content effectively.

## Results

Present your results here. For example, see @fig:example for an example workflow visualization.

![](FIGURES/Figure__example.pdf)
{{#fig:example}} **Example Workflow.** This figure demonstrates a basic research workflow from data to publication. The diagram is generated automatically from a simple Mermaid diagram file (Figure__example.mmd) in the FIGURES directory.

## Discussion

Discuss your findings here. Rxiv-Maker enables:

- Reproducible figure generation
- Automatic citation management
- Professional PDF output

## Conclusion

Conclude your manuscript here.

## Acknowledgements

Acknowledge contributions and funding sources here.
"""

        with open(manuscript_dir / "01_MAIN.md", "w", encoding="utf-8") as f:
            f.write(main_content)

        # Create 02_SUPPLEMENTARY_INFO.md
        supp_content = """# Supplementary Information

## Supplementary Methods

Additional methodological details.

## Supplementary Results

Additional results and figures.

## Supplementary Tables

Additional tables.

## Supplementary References

Additional references if needed.
"""

        with open(manuscript_dir / "02_SUPPLEMENTARY_INFO.md", "w", encoding="utf-8") as f:
            f.write(supp_content)

        # Create 03_REFERENCES.bib
        bib_content = """@article{your_reference_2024,
  title={Reproducible Research in Computational Science},
  author={Smith, John A. and Johnson, Mary B.},
  journal={Nature Methods},
  volume={21},
  number={3},
  pages={145--152},
  year={2024},
  publisher={Nature Publishing Group},
  doi={10.1038/s41592-024-02170-1}
}

@misc{rxiv_maker_2024,
  title={Rxiv-Maker: Automated Template Engine for Scientific Publishing},
  author={Henriques, Ricardo and Saraiva, Bruno M. and Jacquemet, Guillaume},
  year={2024},
  howpublished={\\url{https://github.com/HenriquesLab/rxiv-maker}},
  note={Accessed: 2024-12-01}
}
"""

        with open(manuscript_dir / "03_REFERENCES.bib", "w", encoding="utf-8") as f:
            f.write(bib_content)

        # Create example figure (Mermaid diagram)
        figure_mermaid = """flowchart TD
    A[Your Data] --> B[Analysis]
    B --> C[Results]
    C --> D[Publication]

    style A fill:#e1f5fe
    style B fill:#f3e5f5
    style C fill:#e8f5e8
    style D fill:#fff3e0
"""

        with open(figures_dir / "Figure__example.mmd", "w", encoding="utf-8") as f:
            f.write(figure_mermaid)

        # Create .gitignore
        gitignore_content = """# Rxiv-Maker generated files
output/
*.aux
*.log
*.out
*.toc
*.fls
*.fdb_latexmk
*.synctex.gz
*.bak
*.backup

# Generated figures
FIGURES/*.png
FIGURES/*.pdf
FIGURES/*.svg
FIGURES/*.eps

# Cache files
.cache/
__pycache__/
*.pyc

# OS files
.DS_Store
Thumbs.db
"""

        with open(manuscript_dir / ".gitignore", "w", encoding="utf-8") as f:
            f.write(gitignore_content)

        # Run validation if requested
        if validate:
            console.print("\nüîç Running post-initialization validation...", style="yellow")
            try:
                from rxiv_maker.engines.operations.validate import validate_manuscript

                # Run validation on the newly created manuscript
                result = validate_manuscript(
                    manuscript_path=str(manuscript_dir),
                    verbose=verbose,
                    enable_doi_validation=False,  # Skip DOI validation for templates
                    detailed=True,
                )

                if result:
                    console.print("‚úÖ Validation passed! Template is ready to build.", style="green")
                else:
                    console.print("‚ö†Ô∏è  Validation found issues, but template should still build.", style="yellow")

            except ImportError:
                console.print("‚ö†Ô∏è  Validation not available (dependencies missing)", style="yellow")
            except Exception as e:
                console.print(f"‚ö†Ô∏è  Validation failed: {e}", style="yellow")

        console.print("‚úÖ Manuscript initialized successfully!", style="green")
        console.print(f"üìÅ Created in: {manuscript_dir.absolute()}", style="blue")

        # Show next steps
        console.print("\nüöÄ Next steps:", style="blue")
        console.print(f"1. Edit {manuscript_path}/00_CONFIG.yml with your details", style="white")
        console.print(f"2. Write your content in {manuscript_path}/01_MAIN.md", style="white")
        console.print(f"3. Add references to {manuscript_path}/03_REFERENCES.bib", style="white")
        console.print(f"4. Run 'rxiv pdf {manuscript_path}' to generate PDF", style="white")

    except Exception as e:
        console.print(f"‚ùå Error initializing manuscript: {e}", style="red")
        if verbose:
            console.print_exception()
        sys.exit(1)
