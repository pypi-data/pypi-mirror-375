[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "django-hlsfield"
dynamic = ["version"]
description = "Django VideoField + HLSVideoField: metadata, preview frame, automatic HLS/DASH, Celery optional."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "akula993", email = "akula993@gmail.com" }]
keywords = ["django", "video", "hls", "dash", "streaming", "adaptive", "ffmpeg"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Multimedia :: Video",
    "Topic :: Multimedia :: Video :: Conversion",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving",
    "Environment :: Web Environment",
    "Natural Language :: English",
    "Natural Language :: Russian",
]

dependencies = [
    "Django>=4.2,<6.0",
]
[project.optional-dependencies]
# Основные дополнения
celery = ["celery>=5.3,<6.0"]
preview = ["Pillow>=10.0.0"]
magic = ["python-magic>=0.4.27"]
# Cloud storage
s3 = ["boto3>=1.34,<2.0"]
gcs = ["google-cloud-storage>=2.10.0"]
azure = ["azure-storage-blob>=12.17.0"]
# Production оптимизации
redis = ["redis>=4.5.0"]
monitoring = ["prometheus-client>=0.17.0"]
sentry = ["sentry-sdk>=1.32.0"]
# Advanced features (будущие версии)
ai = [
    "opencv-python>=4.8.0",
    "torch>=2.0.0",
    "transformers>=4.30.0"
]
# Полная установка
all = [
    "celery>=5.3,<6.0",
    "Pillow>=10.0.0",
    "python-magic>=0.4.27",
    "boto3>=1.34,<2.0",
    "redis>=4.5.0",
    "prometheus-client>=0.17.0"
]
# Development
dev = [
    "pytest>=7.4.0",
    "pytest-django>=4.5.2",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "tox>=4.6.0"
]

[project.urls]
Homepage = "https://github.com/akula993/django-hlsfield"
Documentation = "https://django-hlsfield.readthedocs.io/"
Repository = "https://github.com/akula993/django-hlsfield.git"
Issues = "https://github.com/akula993/django-hlsfield/issues"
Changelog = "https://github.com/akula993/django-hlsfield/blob/main/CHANGELOG.md"
Funding = "https://github.com/sponsors/akula993"
"Bug Reports" = "https://github.com/akula993/django-hlsfield/issues"
"Source Code" = "https://github.com/akula993/django-hlsfield"

[project.entry-points."django.apps"]
hlsfield = "hlsfield.apps:HLSFieldConfig"

[tool.hatch.version]
path = "src/hlsfield/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/hlsfield"]
include = [
    "src/hlsfield/templates/**/*.html",
]


[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "pyproject.toml",
    "requirements/",
    "docs/",
]

# =============================================================================
# DEVELOPMENT TOOLS CONFIGURATION
# =============================================================================

[tool.black]
target-version = ["py310"]
line-length = 100
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_django = ["django"]
known_first_party = ["hlsfield"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--cov=hlsfield",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=85",
]

[tool.coverage.run]
source = ["src/hlsfield"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
