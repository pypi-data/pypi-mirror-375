# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v4_changes_get200_response_changes_inner_differences_inner import V4ChangesGet200ResponseChangesInnerDifferencesInner

class TestV4ChangesGet200ResponseChangesInnerDifferencesInner(unittest.TestCase):
    """V4ChangesGet200ResponseChangesInnerDifferencesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V4ChangesGet200ResponseChangesInnerDifferencesInner:
        """Test V4ChangesGet200ResponseChangesInnerDifferencesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V4ChangesGet200ResponseChangesInnerDifferencesInner`
        """
        model = V4ChangesGet200ResponseChangesInnerDifferencesInner()
        if include_optional:
            return V4ChangesGet200ResponseChangesInnerDifferencesInner(
                type = 'added',
                fields = [
                    openapi_client.models._v4_changes_get_200_response_changes_inner_differences_inner_fields_inner._v4_changes_get_200_response_changes_inner_differences_inner_fields_inner(
                        key = '', 
                        value = '', 
                        previous_value = '', )
                    ]
            )
        else:
            return V4ChangesGet200ResponseChangesInnerDifferencesInner(
        )
        """

    def testV4ChangesGet200ResponseChangesInnerDifferencesInner(self):
        """Test V4ChangesGet200ResponseChangesInnerDifferencesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
