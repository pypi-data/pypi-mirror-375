# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v4_templates_template_id_auditlog_get200_response_log_entries_inner import V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner

class TestV4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner(unittest.TestCase):
    """V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner:
        """Test V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner`
        """
        model = V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner()
        if include_optional:
            return V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner(
                id = '',
                operation_type = 'CREATE',
                user_id = '',
                user_email = '',
                previous_value = None,
                new_value = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner(
        )
        """

    def testV4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner(self):
        """Test V4TemplatesTemplateIdAuditlogGet200ResponseLogEntriesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
