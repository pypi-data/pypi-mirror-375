[project]
name = "mseep-toolfront"
version = "0.2.16"
description = "ToolFront helps you retrieve information from large databases, APIs, and documents with AI."
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
]
requires-python = ">=3.11"
dependencies = [
    "click>=8.1.8",
    "httpx>=0.28.1",
    "mcp[cli]>=1.9.0",
    "numpy>=1.24.0",
    "pandas>=2.2.3",
    "pydantic>=2.11.4",
    "pytest>=8.3.5",
    "python-decouple>=3.8",
    "openapi-spec-validator>=0.7.2",
    "jsonref>=1.1.0",
    "pydantic-ai>=0.4.2",
    "yarl>=1.20.1",
    "rich>=14.0.0",
    "sqlparse>=0.5.3",
    "tabulate>=0.9.0",
    "ibis-framework>=10.6.0",
    "pyarrow<19.0.0",
    "executing>=2.2.0",
]

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[project.license]
text = "MIT"

[project.scripts]
toolfront = "toolfront.mcp:main"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]
dev = [
    "pre-commit>=3.0.0",
    "ruff>=0.1.0",
    "mkdocs-material[imaging]>=9.6.16",
    "mkdocstrings[python]>=0.30.0",
    "markitdown[docx,pdf,pptx,xls,xlsx]>=0.1.2",
]
bigquery = [
    "ibis-framework[bigquery]>=10.6.0",
]
clickhouse = [
    "ibis-framework[clickhouse]>=10.6.0",
]
databricks = [
    "ibis-framework[databricks]>=10.6.0",
]
druid = [
    "ibis-framework[druid]>=10.6.0",
]
duckdb = [
    "ibis-framework[duckdb]>=10.6.0",
]
flink = [
    "ibis-framework[flink]>=10.6.0",
]
mssql = [
    "ibis-framework[mssql]>=10.6.0",
]
mysql = [
    "ibis-framework[mysql]>=10.6.0",
]
oracle = [
    "ibis-framework[oracle]>=10.6.0",
]
postgres = [
    "ibis-framework[postgres]>=10.6.0",
]
risingwave = [
    "ibis-framework[risingwave]>=10.6.0",
]
snowflake = [
    "ibis-framework[snowflake]>=10.6.0",
]
sqlite = [
    "ibis-framework[sqlite]>=10.6.0",
]
trino = [
    "ibis-framework[trino]>=10.6.0",
]
pyspark = [
    "ibis-framework[pyspark]>=10.6.0",
]
all = [
    "toolfront[bigquery]",
    "toolfront[clickhouse]",
    "toolfront[databricks]",
    "toolfront[druid]",
    "toolfront[duckdb]",
    "toolfront[mssql]",
    "toolfront[mysql]",
    "toolfront[oracle]",
    "toolfront[postgres]",
    "toolfront[pyspark]",
    "toolfront[risingwave]",
    "toolfront[snowflake]",
    "toolfront[sqlite]",
    "toolfront[trino]",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = [
    "src",
]
include = [
    "toolfront*",
]

[tool.setuptools.package-data]
toolfront = [
    "instructions/*.txt",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "N",
    "UP",
    "B",
    "A",
    "C4",
    "T20",
    "SIM",
    "PTH",
]
ignore = [
    "T201",
    "N806",
    "A003",
    "N805",
    "N818",
    "B008",
    "B904",
]
fixable = [
    "ALL",
]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "asyncio: mark test as an async test",
]

[build-system]
requires = [
    "setuptools>=61.0",
]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.11.13",
]
