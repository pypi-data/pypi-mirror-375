[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "fastgithub"
description = "A Python library to supercharge your GitHub organization with bots and webhooks. "
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["github", "web", "bot", "ci", "fastapi", "automation", "webhook"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Environment :: Web Environment",
  "Framework :: FastAPI",
  "Intended Audience :: Developers",
]
authors = [
  { name = "Vincent Duchauffour", email = "vincent.duchauffour@proton.me" },
]
requires-python = ">=3.12"
dynamic = ["version"]
dependencies = [
  "fastapi[standard]>=0.116.1",
  "pydantic>=2.9.2",
  "pygithub>=2.6.1",
]

[dependency-groups]
dev = [
  "ipython>=8.29.0",
  "pre-commit>=4.0.1",
  "pyright>=1.1.389",
  "pytest-asyncio>=0.24.0",
  "pytest>=8.3.3",
  "pytest-cov>=6.0.0",
  "ruff>=0.12.8",
]

[project.urls]
Homepage = "https://github.com/VDuchauffour/fastgithub"
Documentation = "https://github.com/VDuchauffour/fastgithub"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/fastgithub/_version.py"

[tool.uv]
cache-keys = [{ git = { commit = true, tags = true } }]
reinstall-package = ["fastgithub"]

[tool.ruff]
extend-exclude = ["setup.py"]
target-version = "py312"
force-exclude = true
line-length = 99

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # flake8-bandit
  "S",
  # pyupgrade
  "UP",
  # pep8-naming
  "N",
  # isort
  "I",
]
ignore = ["S301", "S311"]
per-file-ignores = { "__init__.py" = [
  "E402",
  "F401",
  "F403",
  "F811",
], "test/**/*.py" = [
  "S101",
  "S301",
  "S311",
], "tests/**/*.py" = [
  "S101",
  "S301",
  "S311",
] }

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 99

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true
preview = true

[tool.yamlfix]
explicit_start = false
whitelines = 1
sequence_style = "block_style"

[tool.pytest.ini_options]
minversion = "7"
addopts = "--cov=./src --cov-report=term --cov-report=xml --cov-report=html"
pythonpath = "src"
asyncio_mode = "auto"
markers = ["integration"]

[tool.coverage.run]
branch = true
omit = ["*docs*", "*stubs*", "*examples*", "*test*", "*tests*", "*__init__*"]

[tool.coverage.report]
fail_under = 0
show_missing = true
ignore_errors = true
omit = ["*docs*", "*stubs*", "*examples*", "*test*", "*tests*", "*__init__*"]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "except ImportError:",
  "Protocol",
  "@(abc.)?abstractmethod",
  "ModuleNotFoundError",
  "...",
]
