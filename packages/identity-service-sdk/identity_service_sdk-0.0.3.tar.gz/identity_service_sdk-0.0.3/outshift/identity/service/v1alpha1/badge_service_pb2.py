# Copyright 2025 Cisco Systems, Inc. and its affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: outshift/identity/service/v1alpha1/badge_service.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from outshift.identity.service.v1alpha1 import badge_pb2 as outshift_dot_identity_dot_service_dot_v1alpha1_dot_badge__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n6outshift/identity/service/v1alpha1/badge_service.proto\x12\"outshift.identity.service.v1alpha1\x1a\x1cgoogle/api/annotations.proto\x1a.outshift/identity/service/v1alpha1/badge.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x91\x02\n\x11IssueBadgeRequest\x12\x15\n\x06\x61pp_id\x18\x01 \x01(\tR\x05\x61ppId\x12J\n\x03\x61\x32\x61\x18\x02 \x01(\x0b\x32\x38.outshift.identity.service.v1alpha1.IssueA2ABadgeRequestR\x03\x61\x32\x61\x12J\n\x03mcp\x18\x03 \x01(\x0b\x32\x38.outshift.identity.service.v1alpha1.IssueMcpBadgeRequestR\x03mcp\x12M\n\x04oasf\x18\x04 \x01(\x0b\x32\x39.outshift.identity.service.v1alpha1.IssueOASFBadgeRequestR\x04oasf\"\x93\x01\n\x14IssueMcpBadgeRequest\x12\x17\n\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x15\n\x03url\x18\x02 \x01(\tH\x01R\x03url\x88\x01\x01\x12(\n\rschema_base64\x18\x03 \x01(\tH\x02R\x0cschemaBase64\x88\x01\x01\x42\x07\n\x05_nameB\x06\n\x04_urlB\x10\n\x0e_schema_base64\"\x90\x01\n\x14IssueA2ABadgeRequest\x12)\n\x0ewell_known_url\x18\x01 \x01(\tH\x00R\x0cwellKnownUrl\x88\x01\x01\x12(\n\rschema_base64\x18\x02 \x01(\tH\x01R\x0cschemaBase64\x88\x01\x01\x42\x11\n\x0f_well_known_urlB\x10\n\x0e_schema_base64\"<\n\x15IssueOASFBadgeRequest\x12#\n\rschema_base64\x18\x01 \x01(\tR\x0cschemaBase64\"*\n\x12VerifyBadgeRequest\x12\x14\n\x05\x62\x61\x64ge\x18\x01 \x01(\tR\x05\x62\x61\x64ge2\x98\x03\n\x0c\x42\x61\x64geService\x12\xb7\x01\n\nIssueBadge\x12\x35.outshift.identity.service.v1alpha1.IssueBadgeRequest\x1a).outshift.identity.service.v1alpha1.Badge\"G\x92\x41\x1b\x12\rIssue a badge*\nIssueBadge\x82\xd3\xe4\x93\x02#\"\x1e/v1alpha1/apps/{app_id}/badges:\x01*\x12\xc1\x01\n\x0bVerifyBadge\x12\x36.outshift.identity.service.v1alpha1.VerifyBadgeRequest\x1a\x36.outshift.identity.service.v1alpha1.VerificationResult\"B\x92\x41\x1d\x12\x0eVerify a badge*\x0bVerifyBadge\x82\xd3\xe4\x93\x02\x1c\"\x17/v1alpha1/badges/verify:\x01*\x1a\n\x92\x41\x07\n\x05\x42\x61\x64geB\xd2\x02\n&com.outshift.identity.service.v1alpha1B\x11\x42\x61\x64geServiceProtoP\x01Zjgithub.com/outshift/identity-service/api/server/outshift/identity/service/v1alpha1;identity_service_sdk_go\xa2\x02\x03OIS\xaa\x02\"Outshift.Identity.Service.V1alpha1\xca\x02\"Outshift\\Identity\\Service\\V1alpha1\xe2\x02.Outshift\\Identity\\Service\\V1alpha1\\GPBMetadata\xea\x02%Outshift::Identity::Service::V1alpha1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'outshift.identity.service.v1alpha1.badge_service_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n&com.outshift.identity.service.v1alpha1B\021BadgeServiceProtoP\001Zjgithub.com/outshift/identity-service/api/server/outshift/identity/service/v1alpha1;identity_service_sdk_go\242\002\003OIS\252\002\"Outshift.Identity.Service.V1alpha1\312\002\"Outshift\\Identity\\Service\\V1alpha1\342\002.Outshift\\Identity\\Service\\V1alpha1\\GPBMetadata\352\002%Outshift::Identity::Service::V1alpha1'
  _globals['_BADGESERVICE']._options = None
  _globals['_BADGESERVICE']._serialized_options = b'\222A\007\n\005Badge'
  _globals['_BADGESERVICE'].methods_by_name['IssueBadge']._options = None
  _globals['_BADGESERVICE'].methods_by_name['IssueBadge']._serialized_options = b'\222A\033\022\rIssue a badge*\nIssueBadge\202\323\344\223\002#\"\036/v1alpha1/apps/{app_id}/badges:\001*'
  _globals['_BADGESERVICE'].methods_by_name['VerifyBadge']._options = None
  _globals['_BADGESERVICE'].methods_by_name['VerifyBadge']._serialized_options = b'\222A\035\022\016Verify a badge*\013VerifyBadge\202\323\344\223\002\034\"\027/v1alpha1/badges/verify:\001*'
  _globals['_ISSUEBADGEREQUEST']._serialized_start=221
  _globals['_ISSUEBADGEREQUEST']._serialized_end=494
  _globals['_ISSUEMCPBADGEREQUEST']._serialized_start=497
  _globals['_ISSUEMCPBADGEREQUEST']._serialized_end=644
  _globals['_ISSUEA2ABADGEREQUEST']._serialized_start=647
  _globals['_ISSUEA2ABADGEREQUEST']._serialized_end=791
  _globals['_ISSUEOASFBADGEREQUEST']._serialized_start=793
  _globals['_ISSUEOASFBADGEREQUEST']._serialized_end=853
  _globals['_VERIFYBADGEREQUEST']._serialized_start=855
  _globals['_VERIFYBADGEREQUEST']._serialized_end=897
  _globals['_BADGESERVICE']._serialized_start=900
  _globals['_BADGESERVICE']._serialized_end=1308
# @@protoc_insertion_point(module_scope)
