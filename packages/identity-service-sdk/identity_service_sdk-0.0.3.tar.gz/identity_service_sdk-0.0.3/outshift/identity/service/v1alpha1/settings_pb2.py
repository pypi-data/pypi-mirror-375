# Copyright 2025 Cisco Systems, Inc. and its affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: outshift/identity/service/v1alpha1/settings.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n1outshift/identity/service/v1alpha1/settings.proto\x12\"outshift.identity.service.v1alpha1\"2\n\x06\x41piKey\x12\x1c\n\x07\x61pi_key\x18\x01 \x01(\tH\x00R\x06\x61piKey\x88\x01\x01\x42\n\n\x08_api_key\"\xb3\x01\n\x0e\x44uoIdpSettings\x12\x1f\n\x08hostname\x18\x01 \x01(\tH\x00R\x08hostname\x88\x01\x01\x12,\n\x0fintegration_key\x18\x02 \x01(\tH\x01R\x0eintegrationKey\x88\x01\x01\x12\"\n\nsecret_key\x18\x03 \x01(\tH\x02R\tsecretKey\x88\x01\x01\x42\x0b\n\t_hostnameB\x12\n\x10_integration_keyB\r\n\x0b_secret_key\"\xad\x04\n\x0eIssuerSettings\x12 \n\tissuer_id\x18\x01 \x01(\tH\x00R\x08issuerId\x88\x01\x01\x12\x1a\n\x06key_id\x18\x02 \x01(\tH\x01R\x05keyId\x88\x01\x01\x12K\n\x08idp_type\x18\x03 \x01(\x0e\x32+.outshift.identity.service.v1alpha1.IdpTypeH\x02R\x07idpType\x88\x01\x01\x12\x61\n\x10\x64uo_idp_settings\x18\x04 \x01(\x0b\x32\x32.outshift.identity.service.v1alpha1.DuoIdpSettingsH\x03R\x0e\x64uoIdpSettings\x88\x01\x01\x12\x64\n\x11okta_idp_settings\x18\x05 \x01(\x0b\x32\x33.outshift.identity.service.v1alpha1.OktaIdpSettingsH\x04R\x0foktaIdpSettings\x88\x01\x01\x12\x61\n\x10ory_idp_settings\x18\x06 \x01(\x0b\x32\x32.outshift.identity.service.v1alpha1.OryIdpSettingsH\x05R\x0eoryIdpSettings\x88\x01\x01\x42\x0c\n\n_issuer_idB\t\n\x07_key_idB\x0b\n\t_idp_typeB\x13\n\x11_duo_idp_settingsB\x14\n\x12_okta_idp_settingsB\x13\n\x11_ory_idp_settings\"\xa1\x01\n\x0fOktaIdpSettings\x12\x1c\n\x07org_url\x18\x01 \x01(\tH\x00R\x06orgUrl\x88\x01\x01\x12 \n\tclient_id\x18\x02 \x01(\tH\x01R\x08\x63lientId\x88\x01\x01\x12$\n\x0bprivate_key\x18\x03 \x01(\tH\x02R\nprivateKey\x88\x01\x01\x42\n\n\x08_org_urlB\x0c\n\n_client_idB\x0e\n\x0c_private_key\"s\n\x0eOryIdpSettings\x12&\n\x0cproject_slug\x18\x01 \x01(\tH\x00R\x0bprojectSlug\x88\x01\x01\x12\x1c\n\x07\x61pi_key\x18\x02 \x01(\tH\x01R\x06\x61piKey\x88\x01\x01\x42\x0f\n\r_project_slugB\n\n\x08_api_key\"\xd6\x01\n\x08Settings\x12H\n\x07\x61pi_key\x18\x01 \x01(\x0b\x32*.outshift.identity.service.v1alpha1.ApiKeyH\x00R\x06\x61piKey\x88\x01\x01\x12`\n\x0fissuer_settings\x18\x02 \x01(\x0b\x32\x32.outshift.identity.service.v1alpha1.IssuerSettingsH\x01R\x0eissuerSettings\x88\x01\x01\x42\n\n\x08_api_keyB\x12\n\x10_issuer_settings*m\n\x07IdpType\x12\x18\n\x14IDP_TYPE_UNSPECIFIED\x10\x00\x12\x10\n\x0cIDP_TYPE_DUO\x10\x01\x12\x11\n\rIDP_TYPE_OKTA\x10\x02\x12\x10\n\x0cIDP_TYPE_ORY\x10\x03\x12\x11\n\rIDP_TYPE_SELF\x10\x04\x42\xce\x02\n&com.outshift.identity.service.v1alpha1B\rSettingsProtoP\x01Zjgithub.com/outshift/identity-service/api/server/outshift/identity/service/v1alpha1;identity_service_sdk_go\xa2\x02\x03OIS\xaa\x02\"Outshift.Identity.Service.V1alpha1\xca\x02\"Outshift\\Identity\\Service\\V1alpha1\xe2\x02.Outshift\\Identity\\Service\\V1alpha1\\GPBMetadata\xea\x02%Outshift::Identity::Service::V1alpha1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'outshift.identity.service.v1alpha1.settings_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n&com.outshift.identity.service.v1alpha1B\rSettingsProtoP\001Zjgithub.com/outshift/identity-service/api/server/outshift/identity/service/v1alpha1;identity_service_sdk_go\242\002\003OIS\252\002\"Outshift.Identity.Service.V1alpha1\312\002\"Outshift\\Identity\\Service\\V1alpha1\342\002.Outshift\\Identity\\Service\\V1alpha1\\GPBMetadata\352\002%Outshift::Identity::Service::V1alpha1'
  _globals['_IDPTYPE']._serialized_start=1381
  _globals['_IDPTYPE']._serialized_end=1490
  _globals['_APIKEY']._serialized_start=89
  _globals['_APIKEY']._serialized_end=139
  _globals['_DUOIDPSETTINGS']._serialized_start=142
  _globals['_DUOIDPSETTINGS']._serialized_end=321
  _globals['_ISSUERSETTINGS']._serialized_start=324
  _globals['_ISSUERSETTINGS']._serialized_end=881
  _globals['_OKTAIDPSETTINGS']._serialized_start=884
  _globals['_OKTAIDPSETTINGS']._serialized_end=1045
  _globals['_ORYIDPSETTINGS']._serialized_start=1047
  _globals['_ORYIDPSETTINGS']._serialized_end=1162
  _globals['_SETTINGS']._serialized_start=1165
  _globals['_SETTINGS']._serialized_end=1379
# @@protoc_insertion_point(module_scope)
