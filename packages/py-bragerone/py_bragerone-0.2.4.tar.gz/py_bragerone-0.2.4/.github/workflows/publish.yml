name: CI / Publish (TestPyPI & PyPI)

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  workflow_dispatch: {}

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # potrzebne dla setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}

      - name: Install build & test deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test] build
          # Jeśli nie masz extra "test", zamień na: pip install -r requirements.txt -r requirements-dev.txt

      - name: Run tests
        run: pytest -q

      - name: Build sdist + wheel
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    name: Publish dev to TestPyPI (on push to main)
    needs: build-and-test
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true  # nie wywali się, jeśli ta wersja już jest

      - name: Smoke test install from TestPyPI
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install --index-url https://test.pypi.org/simple/ \
                      --extra-index-url https://pypi.org/simple \
                      py-bragerone
          python - <<'PY'
          import bragerone as m
          print("Imported OK:", getattr(m, "__version__", "no __version__"))
          PY

  publish-pypi:
    name: Publish release to PyPI (on tag vX.Y.Z)
    needs: build-and-test
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: false

