[tool.poetry]
name = "oups"
version = "2025.09.5"
description = "Out-of-core pipelines over ordered data: StatefulLoop, stateful ops, and ordered Parquet Store."
authors = ["pierrot"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://codeberg.org/pierrot/oups"
keywords = [
    "out-of-core",
    "streaming",
    "stateful",
    "time-series",
    "pandas",
    "parquet",
    "data-engineering",
]
classifiers = [
    "Programming Language :: Python :: 3.13",
]
packages = [{ include = "oups" }]
exclude = [
    "tests",
    "test-data",
    "docs",
]

[tool.poetry.urls]
Documentation = "https://codeberg.org/pierrot/oups/src/branch/main/docs"
Issues = "https://codeberg.org/pierrot/oups/issues"
Source = "https://codeberg.org/pierrot/oups"
Changelog = "https://codeberg.org/pierrot/oups/src/branch/main/CHANGELOG.md"


[tool.poetry.dependencies]
python = ">=3.13,<4.0"
sortedcontainers = ">=2.4.0"
pandas = ">=2.2.3"
fastparquet = ">=2023.10.1"
#arro3-core = ">=0.4.6"
#arro3-io = ">=0.4.6"
numpy = ">=2.0"
joblib = ">=1.3.2"
cloudpickle = ">=3.1.1"
numba = ">=0.61.2"
flufl-lock = ">=8.2.0"

[tool.poetry.group.dev.dependencies]
black = ">=25.1"
pre-commit = ">=4.2.0"
pytest = ">=8.3.5"
sphinx = ">=7.2.6"
sphinx-rtd-theme = ">=3.0.0"
numpydoc = ">=1.8.0"
pytest-codeblock = "^0.1.8"

[build-system]
requires = [
    "setuptools",
    "poetry-core>=2.1.3"
]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests", "docs/source"]
markers = [
    "codeblock: mark for code blocks collected from documentation",
]

# Ruff configuration
[tool.ruff]
line-length = 110
target-version = "py313"
exclude = [
    ".eggs",
    ".git",
    ".pytest_cache",
    ".ruff_cache",
]

[tool.ruff.lint]
select = [
    "E", "F", "W",     # pyflakes/pycodestyle
    "B", "B9",         # flake8-bugbear
    "C4",              # flake8-comprehensions
    "I",               # isort (import sorting)
    "UP",              # pyupgrade
    "YTT",             # flake8-2020
    "T10",             # flake8-debugger
    "S",               # bandit (subset)
]
ignore = [
    "E203",              # keep Black-compatible whitespace rules
    "S101",              # allow assert in tests
    "B904",              # temporarily ignore exception chaining rule
    "UP038",             # temporarily ignore isinstance tuple -> union advice
]
# Allow autofix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = []
"oups/stateful_ops/aggstream/jcumsegagg.py" = ["C901"]
"oups/stateful_ops/aggstream/segmentby.py" = ["C901"]
"oups/stateful_ops/aggstream/cumsegagg.py" = ["C901", "E203"]
"oups/stateful_ops/aggstream/aggstream.py" = ["C901"]
"oups/store/ordered_parquet_dataset/ordered_parquet_dataset/base.py" = ["E203"]
"oups/store/ordered_parquet_dataset/parquet_adapter.py" = ["S403", "S301"]
"oups/store/store/iter_intersections.py" = ["E203"]
"oups/__init__.py" = ["F401"]
"oups/store/__init__.py" = ["F401"]
"oups/store/ordered_parquet_dataset/__init__.py" = ["F401"]

[tool.ruff.lint.isort]
force-single-line = true
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.lint.mccabe]
max-complexity = 10
