"use strict";(self.webpackChunkmy_component=self.webpackChunkmy_component||[]).push([[6825],{56825:(e,a,t)=>{t.d(a,{offchainLookup:()=>w,offchainLookupSignature:()=>m});var s=t(62831),r=t(83855),n=t(36026),o=t(48283);class c extends n.C{constructor(e){var a;let{callbackSelector:t,cause:s,data:r,extraData:n,sender:c,urls:d}=e;super(s.shortMessage||"An error occurred while fetching for an offchain result.",{cause:s,metaMessages:[...s.metaMessages||[],null!==(a=s.metaMessages)&&void 0!==a&&a.length?"":[],"Offchain Gateway Call:",d&&["  Gateway URL(s):",...d.map((e=>"    ".concat((0,o.I)(e))))],"  Sender: ".concat(c),"  Data: ".concat(r),"  Callback selector: ".concat(t),"  Extra data: ".concat(n)].flat(),name:"OffchainLookupError"})}}class d extends n.C{constructor(e){let{result:a,url:t}=e;super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:["Gateway URL: ".concat((0,o.I)(t)),"Response: ".concat((0,r.A)(a))],name:"OffchainLookupResponseMalformedError"})}}class l extends n.C{constructor(e){let{sender:a,to:t}=e;super("Reverted sender address does not match target contract address (`to`).",{metaMessages:["Contract address: ".concat(t),"OffchainLookup sender address: ".concat(a)],name:"OffchainLookupSenderMismatchError"})}}var u=t(79779),i=t(39510),p=t(10003),f=t(87197),h=t(82651),y=t(7466);const m="0x556f1830",b={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function w(e,a){let{blockNumber:t,blockTag:r,data:n,to:o}=a;const{args:d}=(0,i.W)({data:n,abi:[b]}),[u,y,m,w,g]=d,{ccipRead:v}=e,x=v&&"function"===typeof(null===v||void 0===v?void 0:v.request)?v.request:k;try{if(!(0,f.h)(o,u))throw new l({sender:u,to:o});const a=await x({data:m,sender:u,urls:y}),{data:n}=await(0,s.T)(e,{blockNumber:t,blockTag:r,data:(0,h.xW)([w,(0,p.h)([{type:"bytes"},{type:"bytes"}],[a,g])]),to:o});return n}catch(C){throw new c({callbackSelector:w,cause:C,data:n,extraData:g,sender:u,urls:y})}}async function k(e){let{data:a,sender:t,urls:s}=e,n=new Error("An unknown error occurred.");for(let i=0;i<s.length;i++){const e=s[i],p=e.includes("{data}")?"GET":"POST",f="POST"===p?{data:a,sender:t}:void 0,h="POST"===p?{"Content-Type":"application/json"}:{};try{var o;const s=await fetch(e.replace("{sender}",t).replace("{data}",a),{body:JSON.stringify(f),headers:h,method:p});let l;if(l=null!==(o=s.headers.get("Content-Type"))&&void 0!==o&&o.startsWith("application/json")?(await s.json()).data:await s.text(),!s.ok){var c;n=new u.Ci({body:f,details:null!==(c=l)&&void 0!==c&&c.error?(0,r.A)(l.error):s.statusText,headers:s.headers,status:s.status,url:e});continue}if(!(0,y.q)(l)){n=new d({result:l,url:e});continue}return l}catch(l){n=new u.Ci({body:f,details:l.message,url:e})}}throw n}}}]);