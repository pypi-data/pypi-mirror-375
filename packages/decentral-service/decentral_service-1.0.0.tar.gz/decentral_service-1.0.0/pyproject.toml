[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "decentral-service"
version = "1.0.0"
authors = [
    {name = "DecentralService Team", email = "team@decentralservice.com"},
]
description = "A Redis-like edge microservice for multi-threaded task processing"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
dependencies = [
    "flask>=3.1.2",
    "flask-cors>=6.0.1",
    "psutil>=7.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[project.urls]
Homepage = "https://github.com/your-org/decentral-service"
Repository = "https://github.com/your-org/decentral-service"
Issues = "https://github.com/your-org/decentral-service/issues"

[project.scripts]
decentral-service = "decentral_service.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["decentral_service*"]

[tool.setuptools.package-data]
decentral_service = ["*.py", "*.md", "*.txt"]
