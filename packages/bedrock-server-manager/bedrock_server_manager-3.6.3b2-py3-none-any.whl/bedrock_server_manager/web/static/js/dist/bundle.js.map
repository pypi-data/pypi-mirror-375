{
  "version": 3,
  "sources": ["../../../../../../frontend/src/utils.js", "../../../../../../frontend/src/server_actions.js", "../../../../../../frontend/src/dashboard.js", "../../../../../../frontend/src/account.js", "../../../../../../frontend/src/allowlist.js", "../../../../../../frontend/src/auth.js", "../../../../../../frontend/src/backup_restore.js", "../../../../../../frontend/src/content_management.js", "../../../../../../frontend/src/install_config.js", "../../../../../../frontend/src/manage_plugins.js", "../../../../../../frontend/src/manage_settings.js", "../../../../../../frontend/src/server_settings.js", "../../../../../../frontend/src/monitor_usage.js", "../../../../../../frontend/src/sidebar_nav.js", "../../../../../../frontend/src/query_param_handler.js", "../../../../../../frontend/src/users.js", "../../../../../../frontend/src/register.js", "../../../../../../frontend/src/setup.js", "../../../../../../frontend/src/main.js"],
  "sourcesContent": ["// frontend/src/utils.js\n/**\n * @fileoverview Utility functions for the Bedrock Server Manager web interface,\n * including status message display and asynchronous API request handling.\n */\n\n// --- Helper: Display Status Messages ---\n/**\n * Displays a status message dynamically in a designated area on the page.\n * The message automatically fades out and clears after a set duration.\n * Handles cases where the status area element might be missing.\n *\n * @param {string} message - The text content of the message to display.\n * @param {string} [type='info'] - The type of message, influencing styling.\n *                                 Expected values: 'info', 'success', 'warning', 'error'.\n */\nexport function showStatusMessage(message, type = 'info') {\n  const functionName = 'showStatusMessage';\n  console.log(`${functionName}: Displaying message (Type: ${type}): \"${message}\"`);\n\n  const area = document.getElementById('status-message-area');\n  if (!area) {\n    console.warn(`${functionName}: Element '#status-message-area' not found. Falling back to standard alert.`);\n    alert(`${type.toUpperCase()}: ${message}`); // Fallback for critical messages if area missing\n    return;\n  }\n\n  // Assign classes for styling and set text content\n  // Using template literal for cleaner class string construction\n  area.className = `message-box message-${type}`;\n  area.textContent = message;\n  area.style.transition = ''; // Clear previous transitions immediately\n  area.style.opacity = '1'; // Make visible instantly\n\n  // Use a unique identifier for the timeout related to *this specific message*\n  // This helps prevent race conditions if messages are shown in quick succession.\n  const messageId = Date.now() + Math.random(); // Simple unique ID\n  area.dataset.currentMessageId = messageId; // Store ID on the element\n\n  console.debug(`${functionName}: Set message content and visibility for messageId ${messageId}.`);\n\n  // Set timeout to fade out and clear the message\n  setTimeout(() => {\n    // Check if the message currently displayed *still* corresponds to this timeout call\n    if (area.dataset.currentMessageId === String(messageId)) {\n      console.debug(`${functionName}: Initiating fade-out for messageId ${messageId} (\"${message}\").`);\n      area.style.transition = 'opacity 0.5s ease-out';\n      area.style.opacity = '0';\n\n      // Set another timeout to clear content *after* fade completes\n      setTimeout(() => {\n        // Final check: Only clear if it's still the same message and it faded out\n        if (area.dataset.currentMessageId === String(messageId) && area.style.opacity === '0') {\n          console.debug(`${functionName}: Clearing content for messageId ${messageId} after fade.`);\n          area.textContent = '';\n          area.className = 'message-box'; // Reset styles\n          area.style.transition = ''; // Remove transition property\n          delete area.dataset.currentMessageId; // Clean up dataset attribute\n        } else {\n          console.debug(\n            `${functionName}: Aborting final clear for messageId ${messageId} - message changed or fade interrupted.`,\n          );\n        }\n      }, 500); // Match fade duration (500ms)\n    } else {\n      console.debug(`${functionName}: Aborting fade-out for messageId ${messageId} - a newer message was displayed.`);\n    }\n  }, 5000); // Start fade-out after 5 seconds\n}\n\n// --- Helper: Send API Request ---\n/**\n * Sends an asynchronous request (using Fetch API) to a server API endpoint.\n * Handles common tasks like setting headers (Accept, Content-Type, CSRF),\n * managing JSON request/response bodies, displaying status messages,\n * handling HTTP errors, parsing application-level success/error statuses,\n * and optionally disabling/re-enabling a button element during the request.\n *\n * @async\n * @param {string|null} serverName - The name of the target server. Use `null` or empty string\n *                                   if `actionPath` is an absolute path (starts with '/').\n * @param {string} actionPath - The API endpoint path. If it starts with '/', it's treated as\n *                             absolute. Otherwise, it's appended to `/api/server/{serverName}/`.\n * @param {string} [method='POST'] - The HTTP method (e.g., 'GET', 'POST', 'PUT', 'DELETE').\n * @param {object|null} [body=null] - Optional JavaScript object to send as the JSON request body.\n *                                    Ignored for methods like 'GET'.\n * @param {HTMLElement|null} [buttonElement=null] - Optional button element to disable while the request is pending.\n * @param {boolean} [suppressSuccessPopup=false] - Optional. If true, success messages will not be shown via showStatusMessage.\n * @returns {Promise<object|false>} A promise that resolves with:\n *                                  - The parsed JSON response data object if the HTTP request was successful (status 2xx)\n *                                    and the response was valid JSON or 204 No Content. The caller *must* check the\n *                                    `status` field within this object (`responseData.status === 'success'`) to confirm\n *                                    the *application-level* success of the action.\n *                                  - `false` if the fetch request itself failed (network error, CORS issue, DNS error),\n *                                    if the CSRF token was missing, if URL construction failed, or if an HTTP error\n *                                    status (non-2xx) was received.\n * @throws {Error} Can throw errors if JSON parsing fails unexpectedly on a response claiming to be JSON,\n *                 though attempts are made to handle this gracefully.\n */\nexport async function sendServerActionRequest(\n  serverName,\n  actionPath,\n  method = 'POST',\n  body = null,\n  buttonElement = null,\n  suppressSuccessPopup = false,\n) {\n  const functionName = 'sendServerActionRequest';\n  // Use console.debug for potentially verbose parameter logging\n  console.debug(\n    `${functionName}: Initiating request - Server: '${serverName || 'N/A'}', Path: '${actionPath}', Method: ${method}, SuppressSuccess: ${suppressSuccessPopup}`,\n  );\n  if (body) console.debug(`${functionName}: Request Body:`, body); // Log body only if present\n  if (buttonElement) console.debug(`${functionName}: Associated Button:`, buttonElement);\n\n  // --- 2. Construct URL ---\n  let apiUrl;\n  const isAbsoluteUrl = /^(?:[a-z]+:)?\\/\\//i.test(actionPath);\n\n  if (isAbsoluteUrl) {\n    apiUrl = actionPath; // Use as absolute path\n    console.debug(`${functionName}: Using absolute URL: ${apiUrl}`);\n  } else if (actionPath.startsWith('/')) {\n    apiUrl = actionPath; // Use as absolute path\n    console.debug(`${functionName}: Using absolute URL: ${apiUrl}`);\n  } else if (serverName && serverName.trim()) {\n    // Check serverName is not empty/whitespace\n    apiUrl = `/api/server/${serverName}/${actionPath}`; // Construct relative path\n    console.debug(`${functionName}: Using relative URL for server '${serverName}': ${apiUrl}`);\n  } else {\n    const errorMsg = \"Invalid arguments: 'serverName' is required for relative action paths.\";\n    console.error(`${functionName}: ${errorMsg}`);\n    showStatusMessage(errorMsg, 'error');\n    if (buttonElement) buttonElement.disabled = false;\n    return false; // Critical configuration failure\n  }\n\n  // --- 3. Prepare Fetch Request ---\n  console.debug(`${functionName}: Preparing fetch request to ${apiUrl} (Method: ${method})`);\n  if (buttonElement) {\n    console.debug(`${functionName}: Disabling button.`);\n    buttonElement.disabled = true;\n  }\n  // Show initial user feedback immediately\n  if (!suppressSuccessPopup) {\n    showStatusMessage(`Processing action at ${apiUrl}...`, 'info');\n  }\n\n  const fetchOptions = {\n    method: method.toUpperCase(), // Ensure method is uppercase\n    headers: {\n      Accept: 'application/json', // We always want JSON back\n    },\n  };\n\n  // Add JWT to headers if available\n  const jwtToken = localStorage.getItem('jwt_token');\n  if (jwtToken) {\n    fetchOptions.headers['Authorization'] = `Bearer ${jwtToken}`;\n    console.debug(`${functionName}: Added JWT to Authorization header.`);\n  } else {\n    console.debug(`${functionName}: No JWT found in localStorage.`);\n  }\n  // CSRF header removed earlier\n\n  // Add body and Content-Type header if applicable\n  const methodAllowsBody = ['POST', 'PUT', 'PATCH', 'DELETE'].includes(fetchOptions.method);\n  if (body && methodAllowsBody) {\n    try {\n      fetchOptions.body = JSON.stringify(body);\n      fetchOptions.headers['Content-Type'] = 'application/json';\n      console.debug(`${functionName}: Added JSON body and Content-Type header.`);\n    } catch (stringifyError) {\n      const errorMsg = `Failed to stringify request body: ${stringifyError.message}`;\n      console.error(`${functionName}: ${errorMsg}`, body);\n      showStatusMessage(errorMsg, 'error');\n      if (buttonElement) buttonElement.disabled = false;\n      return false; // Cannot proceed if body cannot be stringified\n    }\n  } else if (body && !methodAllowsBody) {\n    console.warn(\n      `${functionName}: Body provided for HTTP method '${fetchOptions.method}' which typically does not support it. Body ignored.`,\n    );\n  } else {\n    console.debug(`${functionName}: No request body provided or method does not support it.`);\n  }\n\n  // --- 4. Execute Fetch Request and Process Response ---\n  let responseData = null; // To store parsed JSON response\n  let httpSuccess = false; // Track if HTTP status code was 2xx\n\n  try {\n    console.debug(`${functionName}: Executing fetch(${apiUrl}, ...)`);\n    const response = await fetch(apiUrl, fetchOptions);\n    console.log(`${functionName}: Response received - Status: ${response.status}, OK: ${response.ok}`);\n    httpSuccess = response.ok; // ok is true for statuses in the range 200-299\n\n    // --- Process Body based on Status and Content-Type ---\n    if (response.status === 204) {\n      // Handle No Content explicitly\n      console.log(`${functionName}: Received 204 No Content. Treating as success.`);\n      responseData = { status: 'success', message: `Action at ${apiUrl} successful (No Content).` };\n      // httpSuccess is already true\n    } else {\n      // Try to read body (JSON preferred, fallback to text)\n      const contentType = response.headers.get('content-type');\n      console.debug(`${functionName}: Response Content-Type: ${contentType}`);\n      if (contentType && contentType.includes('application/json')) {\n        console.debug(`${functionName}: Parsing JSON response body...`);\n        responseData = await response.json(); // Can throw error if invalid JSON\n        console.debug(`${functionName}: Parsed JSON response:`, responseData);\n      } else {\n        // Not JSON - read as text and handle based on HTTP status\n        console.debug(`${functionName}: Response not JSON. Reading as text...`);\n        const textResponse = await response.text();\n        console.warn(\n          `${functionName}: Received non-JSON response (Status: ${response.status}). Body (truncated): ${textResponse.substring(0, 500)}`,\n        );\n        if (!httpSuccess) {\n          // If HTTP status indicated error (non-2xx)\n          // Construct an error object from the text response\n          responseData = {\n            status: 'error',\n            message: `Request failed (Status ${response.status}): ${textResponse.substring(0, 200)}${textResponse.length > 200 ? '...' : ''}`,\n          };\n          console.debug(`${functionName}: Created error object from text response.`);\n        } else {\n          // HTTP status was 2xx, but body wasn't JSON/204 - this is unexpected\n          const warnMsg = `Request to ${apiUrl} succeeded (Status ${response.status}) but returned unexpected content type: ${contentType}. Check server logs.`;\n          console.warn(`${functionName}: ${warnMsg}`);\n          showStatusMessage(warnMsg, 'warning');\n          // Return false to indicate API contract violation, even though HTTP was ok.\n          // Button is re-enabled in finally block for this case.\n          return false;\n        }\n      }\n    }\n\n    // --- 5. Handle Response Based on HTTP Status ---\n    if (!httpSuccess) {\n      // Process HTTP errors (4xx, 5xx)\n      const errorMessage = responseData?.message || `Request failed with status ${response.status}`;\n      console.error(`${functionName}: HTTP Error - Status: ${response.status}, Message: \"${errorMessage}\"`);\n\n      // Specific handling for validation errors (400 with 'errors' object)\n      if (response.status === 400 && responseData?.errors && typeof responseData.errors === 'object') {\n        showStatusMessage(errorMessage || 'Validation failed. Please check fields.', 'error');\n        // Display field-specific errors (assuming helper elements exist)\n        const errorArea = document.getElementById('validation-error-area');\n        let generalErrors = [];\n        Object.entries(responseData.errors).forEach(([field, msg]) => {\n          const fieldErrorEl = document.querySelector(`.validation-error[data-field=\"${field}\"]`);\n          if (fieldErrorEl) {\n            fieldErrorEl.textContent = msg;\n          } else {\n            generalErrors.push(`<strong>${field}:</strong> ${msg}`);\n          }\n        });\n        if (errorArea && generalErrors.length > 0) {\n          errorArea.innerHTML = generalErrors.join('<br>');\n        }\n      }\n      // Specific handling for CSRF error (often 400 with specific message from Flask-WTF)\n      else if (response.status === 400 && errorMessage.toLowerCase().includes('csrf token')) {\n        const csrfErrorMsg = 'Security token error. Please refresh the page and try again.';\n        console.error(`${functionName}: CSRF Token Error detected.`);\n        showStatusMessage(csrfErrorMsg, 'error');\n      } else {\n        // Show generic error message for other HTTP errors\n        showStatusMessage(errorMessage, 'error');\n      }\n      // Return false as the HTTP request failed\n      return false;\n    } else {\n      // --- 6. Handle Application-Level Status in SUCCESSFUL (2xx) HTTP Responses ---\n      console.debug(\n        `${functionName}: HTTP request successful (Status: ${response.status}). Checking application status in response...`,\n      );\n      // Check 'status' field within the JSON response data\n      if (responseData && responseData.status === 'success') {\n        const successMsg = responseData.message || `Action at ${apiUrl} completed successfully.`;\n        console.info(`${functionName}: Application success. Message: \"${successMsg}\"`);\n        if (!suppressSuccessPopup) {\n          // Only show popup if not suppressed\n          showStatusMessage(successMsg, 'success');\n        }\n        // Optionally trigger UI updates based on success here if needed\n      } else if (responseData && responseData.status === 'confirm_needed') {\n        // Special status - let the caller handle confirmation logic\n        console.info(`${functionName}: Application status 'confirm_needed'. Returning data for confirmation handling.`);\n        // Message usually shown by caller based on responseData.message\n        // Button is handled in finally block (remains disabled)\n      } else {\n        if (actionPath !== '/api/account' && actionPath !== '/api/themes') {\n          // HTTP success (2xx), but application status is 'error' or missing/unexpected\n          const appStatus = responseData?.status || 'unknown';\n          const appMessage = responseData?.message || `Action at ${apiUrl} reported status: ${appStatus}.`;\n          console.warn(\n            `${functionName}: HTTP success but application status is '${appStatus}'. Message: ${appMessage}`,\n          );\n          showStatusMessage(appMessage, 'warning'); // Use warning or error depending on severity preference\n        }\n      }\n    }\n  } catch (error) {\n    // Catch network errors, CORS, DNS, unexpected JSON parse errors\n    const errorMsg = `Network or processing error during action at ${apiUrl}: ${error.message}`;\n    console.error(`${functionName}: Fetch failed - ${errorMsg}`, error);\n    showStatusMessage(errorMsg, 'error');\n    // Ensure button is re-enabled if an error occurs before finally might run reliably\n    if (buttonElement) buttonElement.disabled = false;\n    return false; // Indicate failure\n  } finally {\n    // --- 7. Final Button Re-enabling Logic ---\n    // Re-enable the button unless the operation requires confirmation ('confirm_needed')\n    console.debug(\n      `${functionName}: Finally block executing. httpSuccess=${httpSuccess}, responseData.status=${responseData?.status}`,\n    );\n    if (buttonElement) {\n      // Only if a button was provided\n      if (responseData?.status !== 'confirm_needed') {\n        if (buttonElement.disabled) {\n          console.debug(`${functionName}: Re-enabling button in finally block.`);\n          buttonElement.disabled = false;\n        } else {\n          console.debug(`${functionName}: Button was already enabled in finally block.`);\n        }\n      } else {\n        console.debug(`${functionName}: Button remains disabled due to 'confirm_needed' status.`);\n      }\n    }\n  }\n\n  // Log the final data object being returned to the caller\n  console.debug(`${functionName}: Returning response data object (or false if HTTP error occurred):`, responseData);\n  // Return the parsed data object if HTTP was successful (caller checks internal status),\n  // otherwise return false (already returned within error handling blocks).\n  return httpSuccess ? responseData : false;\n}\n", "// frontend/src/server_actions.js\n/**\n * @fileoverview Frontend JavaScript functions for triggering common server actions\n * like start, stop, restart, delete, update, and sending commands via API calls.\n * These are typically attached to onclick events of buttons in the UI.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\n/**\n * Gets the currently selected server name from the '#server-select' dropdown.\n * Displays a warning message if no server is selected or the dropdown is missing.\n *\n * @returns {string|null} The selected server name, or null if selection is invalid or element missing.\n */\nfunction getSelectedServer() {\n  const functionName = 'getSelectedServer';\n  console.debug(`${functionName}: Attempting to get selected server from #server-select dropdown.`);\n\n  const serverSelect = document.getElementById('server-select');\n  if (!serverSelect) {\n    const errorMsg = \"Internal page error: Server selection dropdown element ('#server-select') not found.\";\n    console.error(`${functionName}: ${errorMsg}`);\n    showStatusMessage(errorMsg, 'error');\n    return null;\n  }\n\n  const selectedServer = serverSelect.value; // The value attribute of the selected <option>\n  console.debug(`${functionName}: Value from dropdown: \"${selectedServer}\"`);\n\n  if (!selectedServer || selectedServer === '') {\n    // Check for empty string value explicitly\n    const warnMsg = 'Please select a server from the dropdown list first.';\n    console.warn(`${functionName}: ${warnMsg}`);\n    showStatusMessage(warnMsg, 'warning');\n    return null;\n  }\n\n  console.debug(`${functionName}: Returning selected server name: '${selectedServer}'`);\n  return selectedServer;\n}\n\n// --- Global Action Functions (Typically called via onclick) ---\n\n/**\n * Initiates the 'start' server action via API for the currently selected server.\n *\n * @param {HTMLButtonElement} buttonElement - The 'Start' button element clicked.\n */\nexport function startServer(buttonElement) {\n  const functionName = 'startServer';\n  console.log(`${functionName}: Action triggered.`);\n  console.debug(`${functionName}: Button Element:`, buttonElement);\n\n  const serverName = getSelectedServer(); // Get selected server, handles null/warning message\n  if (serverName) {\n    const actionPath = 'start'; // Relative API path\n    const method = 'POST';\n    console.log(`${functionName}: Attempting to start server '${serverName}' via API call to ${actionPath}...`);\n    sendServerActionRequest(serverName, actionPath, method, null, buttonElement);\n    console.log(`${functionName}: API request initiated for '${serverName}' (asynchronous).`);\n  } else {\n    console.warn(`${functionName}: Action aborted because no server was selected.`);\n    // User message already shown by getSelectedServer()\n  }\n}\n\n/**\n * Initiates the 'stop' server action via API for the currently selected server.\n *\n * @param {HTMLButtonElement} buttonElement - The 'Stop' button element clicked.\n */\nexport function stopServer(buttonElement) {\n  const functionName = 'stopServer';\n  console.log(`${functionName}: Action triggered.`);\n  console.debug(`${functionName}: Button Element:`, buttonElement);\n\n  const serverName = getSelectedServer();\n  if (serverName) {\n    const actionPath = 'stop';\n    const method = 'POST';\n    console.log(`${functionName}: Attempting to stop server '${serverName}' via API call to ${actionPath}...`);\n    sendServerActionRequest(serverName, actionPath, method, null, buttonElement);\n    console.log(`${functionName}: API request initiated for '${serverName}' (asynchronous).`);\n  } else {\n    console.warn(`${functionName}: Action aborted because no server was selected.`);\n  }\n}\n\n/**\n * Initiates the 'restart' server action via API for the currently selected server.\n *\n * @param {HTMLButtonElement} buttonElement - The 'Restart' button element clicked.\n */\nexport function restartServer(buttonElement) {\n  const functionName = 'restartServer';\n  console.log(`${functionName}: Action triggered.`);\n  console.debug(`${functionName}: Button Element:`, buttonElement);\n\n  const serverName = getSelectedServer();\n  if (serverName) {\n    const actionPath = 'restart';\n    const method = 'POST';\n    console.log(`${functionName}: Attempting to restart server '${serverName}' via API call to ${actionPath}...`);\n    sendServerActionRequest(serverName, actionPath, method, null, buttonElement);\n    console.log(`${functionName}: API request initiated for '${serverName}' (asynchronous).`);\n  } else {\n    console.warn(`${functionName}: Action aborted because no server was selected.`);\n  }\n}\n\n/**\n * Prompts the user to enter a console command and sends it to the currently selected server via API.\n *\n * @param {HTMLButtonElement} buttonElement - The 'Send Command' button element clicked.\n */\nexport function promptCommand(buttonElement) {\n  const functionName = 'promptCommand';\n  console.log(`${functionName}: Action triggered.`);\n  console.debug(`${functionName}: Button Element:`, buttonElement);\n\n  const serverName = getSelectedServer();\n  if (!serverName) {\n    console.warn(`${functionName}: Action aborted because no server was selected.`);\n    return; // Exit if no server selected\n  }\n\n  // --- User Interaction: Prompt for Command ---\n  console.debug(`${functionName}: Prompting user for command input for server '${serverName}'.`);\n  const command = prompt(`Enter command to send to server '${serverName}':`);\n  // --- End User Interaction ---\n\n  if (command === null) {\n    // User pressed Cancel on the prompt\n    console.log(`${functionName}: Command input cancelled by user.`);\n    showStatusMessage('Command input cancelled.', 'info');\n    return;\n  }\n\n  const trimmedCommand = command.trim();\n  console.debug(`${functionName}: User entered command: \"${command}\", Trimmed: \"${trimmedCommand}\"`);\n\n  if (trimmedCommand === '') {\n    console.warn(`${functionName}: Command is empty after trimming.`);\n    showStatusMessage('Command cannot be empty.', 'warning');\n    return; // Don't send empty command\n  }\n\n  // --- Prepare and Send API Request ---\n  const actionPath = 'send_command';\n  const method = 'POST';\n  const requestBody = { command: trimmedCommand }; // API expects command in body\n  console.debug(`${functionName}: Constructed request body:`, requestBody);\n  console.log(\n    `${functionName}: Attempting to send command '${trimmedCommand}' to server '${serverName}' via API call to ${actionPath}...`,\n  );\n  sendServerActionRequest(serverName, actionPath, method, requestBody, buttonElement);\n  console.log(`${functionName}: API request initiated for '${serverName}' (asynchronous).`);\n}\n\n/**\n * Prompts the user for confirmation and initiates the 'delete' server action via API.\n *\n * @param {HTMLButtonElement} buttonElement - The 'Delete' button element clicked.\n * @param {string} serverName - The name of the server to delete (passed directly, not from select).\n */\nexport function deleteServer(buttonElement, serverName) {\n  const functionName = 'deleteServer';\n  console.log(`${functionName}: Action triggered for server: '${serverName}'`);\n  console.debug(`${functionName}: Button Element:`, buttonElement);\n\n  // --- Input Validation ---\n  if (!serverName || typeof serverName !== 'string' || !serverName.trim()) {\n    const errorMsg = 'Internal error: Server name is missing or invalid for delete action.';\n    console.error(`${functionName}: ${errorMsg}`);\n    showStatusMessage(errorMsg, 'error');\n    return;\n  }\n  const trimmedServerName = serverName.trim(); // Use trimmed name internally\n\n  // --- Confirmation ---\n  console.debug(`${functionName}: Prompting user for delete confirmation for server '${trimmedServerName}'.`);\n  const confirmationMessage = `Are you absolutely sure you want to delete ALL data for server '${trimmedServerName}'?\\n\\nThis includes installation, configuration, and backups and cannot be undone!`;\n  if (confirm(confirmationMessage)) {\n    console.log(`${functionName}: Deletion confirmed by user for '${trimmedServerName}'. Sending API request...`);\n    // --- Prepare and Send API Request ---\n    const actionPath = 'delete';\n    const method = 'DELETE'; // Use DELETE HTTP method\n    // Call API helper\n    sendServerActionRequest(trimmedServerName, actionPath, method, null, buttonElement);\n    console.log(`${functionName}: API request initiated for '${trimmedServerName}' (asynchronous).`);\n    // Success/Error message handled by sendServerActionRequest\n    // Consider adding specific logic here to remove the server row from the UI *after* successful deletion response?\n  } else {\n    console.log(`${functionName}: Deletion cancelled by user for '${trimmedServerName}'.`);\n    showStatusMessage('Deletion cancelled.', 'info');\n  }\n}\n\n/**\n * Initiates the 'update' server action via API for a specific server.\n *\n * @param {HTMLButtonElement} buttonElement - The 'Update' button element clicked.\n * @param {string} serverName - The name of the server to update (passed directly).\n */\nexport function triggerServerUpdate(buttonElement, serverName) {\n  const functionName = 'triggerServerUpdate';\n  console.log(`${functionName}: Action triggered for server: '${serverName}'`);\n  console.debug(`${functionName}: Button Element:`, buttonElement);\n\n  // --- Input Validation ---\n  if (!serverName || typeof serverName !== 'string' || !serverName.trim()) {\n    const errorMsg = 'Internal error: Server name is missing or invalid for update action.';\n    console.error(`${functionName}: ${errorMsg}`);\n    showStatusMessage(errorMsg, 'error');\n    return;\n  }\n  const trimmedServerName = serverName.trim();\n\n  // --- Confirmation (Optional, but recommended for potentially long operations) ---\n  // const confirmationMessage = `Check for updates and update server '${trimmedServerName}' if needed?`;\n  // if (!confirm(confirmationMessage)) {\n  //     console.log(`${functionName}: Update cancelled by user for '${trimmedServerName}'.`);\n  //     showStatusMessage('Update cancelled.', 'info');\n  //     return;\n  // }\n  // console.log(`${functionName}: User confirmed update check for '${trimmedServerName}'.`);\n\n  // --- Prepare and Send API Request ---\n  const actionPath = 'update';\n  const method = 'POST';\n  console.log(`${functionName}: Attempting to update server '${trimmedServerName}' via API call to ${actionPath}...`);\n  sendServerActionRequest(trimmedServerName, actionPath, method, null, buttonElement);\n  console.log(`${functionName}: API request initiated for '${trimmedServerName}' (asynchronous).`);\n}\n", "import { sendServerActionRequest, showStatusMessage } from './utils.js';\nimport {\n  startServer,\n  stopServer,\n  restartServer,\n  promptCommand,\n  triggerServerUpdate,\n  deleteServer,\n} from './server_actions.js';\n\nexport function initializeDashboard() {\n  const functionName = 'DashboardManager';\n  console.log(`${functionName}: Initializing all dashboard interactivity.`);\n\n  // --- Constants and Elements ---\n  const POLLING_INTERVAL_MS = 60000;\n  const serverSelect = document.getElementById('server-select');\n  const globalActionButtons = document.querySelectorAll('.server-selection-section .action-buttons-group button');\n  const serverDependentSections = document.querySelectorAll('.server-dependent-actions');\n  const serverCardList = document.getElementById('server-card-list');\n  const noServersMessage = document.getElementById('no-servers-message');\n\n  if (!serverSelect || !serverCardList || !noServersMessage) {\n    console.error(`${functionName}: A critical element for the dashboard is missing. Functionality may be impaired.`);\n    if (typeof showStatusMessage === 'function') {\n      showStatusMessage('Dashboard Error: Critical page elements missing.', 'error');\n    } else {\n      const body = document.querySelector('body');\n      if (body)\n        body.insertAdjacentHTML(\n          'afterbegin',\n          '<p style=\"color:red; text-align:center; padding:10px; background:lightyellow; border:1px solid red;\">Critical Dashboard Error: Page elements missing.</p>',\n        );\n    }\n    return;\n  }\n\n  // --- State Management and UI Updates ---\n\n  function updateActionStates(selectedServerName) {\n    const hasSelection = selectedServerName && selectedServerName !== '';\n    const serverNameEncoded = hasSelection ? encodeURIComponent(selectedServerName) : '';\n    globalActionButtons.forEach((button) => (button.disabled = !hasSelection));\n    serverDependentSections.forEach((section) => {\n      const span = section.querySelector('span[id^=\"selected-server-\"]');\n      const actions = section.querySelectorAll('.action-button, .action-link');\n      if (span) {\n        span.textContent = hasSelection ? selectedServerName : '(No server selected)';\n        span.style.fontStyle = hasSelection ? 'normal' : 'italic';\n      }\n      actions.forEach((action) => {\n        action.disabled = !hasSelection;\n        if (action.tagName === 'A' && action.id && hasSelection) {\n          let targetUrl = '#';\n          switch (action.id) {\n            // Routes without router prefix (or handled by main_router)\n            case 'config-link-properties':\n              targetUrl = `/server/${serverNameEncoded}/configure_properties`;\n              break;\n            case 'config-link-allowlist':\n              targetUrl = `/server/${serverNameEncoded}/configure_allowlist`;\n              break;\n            case 'config-link-permissions':\n              targetUrl = `/server/${serverNameEncoded}/configure_permissions`;\n              break;\n            case 'config-link-monitor':\n              targetUrl = `/server/${serverNameEncoded}/monitor`;\n              break;\n            case 'config-link-service':\n              targetUrl = `/server/${serverNameEncoded}/configure_service`;\n              break;\n            case 'task-scheduler-menu':\n              targetUrl = `/server/${serverNameEncoded}/scheduler`;\n              break; // This redirects via main_router\n\n            // Routes with /content prefix\n            case 'content-link-world':\n              targetUrl = `/server/${serverNameEncoded}/install_world`;\n              break;\n            case 'content-link-addon':\n              targetUrl = `/server/${serverNameEncoded}/install_addon`;\n              break;\n\n            // Routes with /backup-restore prefix\n            case 'backup-link-menu':\n              targetUrl = `/server/${serverNameEncoded}/backup`;\n              break;\n            case 'restore-link-menu':\n              targetUrl = `/server/${serverNameEncoded}/restore`;\n              break;\n\n            default:\n              console.warn(`${functionName}: No URL map for link ID '${action.id}'.`);\n              targetUrl = '#'; // Ensure it's a safe default\n              break;\n          }\n          action.href = targetUrl;\n        } else if (action.tagName === 'A' && !hasSelection) {\n          action.href = '#';\n        }\n      });\n    });\n  }\n\n  function createServerCardElement(server) {\n    const card = document.createElement('div');\n    card.className = 'server-card';\n    card.dataset.serverName = server.name;\n    const safeServerName = encodeURIComponent(server.name);\n    const status = server.status || 'UNKNOWN';\n    const version = server.version || 'N/A';\n    card.innerHTML = `\n        <div class=\"server-card-thumbnail\">\n            <img src=\"/api/server/${safeServerName}/world/icon\" alt=\"${server.name} World Icon\" class=\"world-icon-img\">\n        </div>\n        <div class=\"server-card-info\">\n            <h3>${server.name}</h3>\n            <p><span class=\"info-label\">Status:</span> <span class=\"status-text status-${status.toLowerCase()}\">${status.toUpperCase()}</span></p>\n            <p><span class=\"info-label\">Version:</span> <span class=\"version-text\">${version}</span></p>\n            <p><span class=\"info-label\">Players:</span> <span class=\"player-count-text\">${server.player_count}</span></p>\n        </div>\n        <div class=\"server-card-actions\">\n            <a href=\"/servers/${safeServerName}/settings\" class=\"action-link\" title=\"Server Settings\">Settings</a>\n        </div>`;\n    return card;\n  }\n\n  function updateServerDropdown(servers) {\n    const previouslySelected = serverSelect.value;\n    serverSelect.innerHTML = '';\n    if (servers.length === 0) {\n      const noServerOption = new Option('-- No Servers Installed --', '');\n      noServerOption.disabled = true;\n      serverSelect.add(noServerOption);\n      serverSelect.disabled = true;\n      serverSelect.title = 'No servers available';\n    } else {\n      serverSelect.add(new Option('-- Select a Server --', ''));\n      servers.forEach((server) => serverSelect.add(new Option(server.name, server.name)));\n      serverSelect.disabled = false;\n      serverSelect.title = 'Select a server';\n    }\n    serverSelect.value = previouslySelected;\n    if (serverSelect.value !== previouslySelected) {\n      serverSelect.dispatchEvent(new Event('change'));\n    }\n  }\n\n  async function updateDashboard() {\n    try {\n      // Use sendServerActionRequest and suppress success pop-up for polling\n      const data = await sendServerActionRequest(null, '/api/servers', 'GET', null, null, true);\n\n      if (!data || data.status !== 'success' || !Array.isArray(data.servers)) {\n        console.warn(\n          `${functionName}: API call to /api/servers did not return success or valid server data. Message:`,\n          data?.message,\n        );\n        if (typeof showStatusMessage === 'function' && !(data && data.message && data.status === 'error')) {\n          showStatusMessage('Failed to update dashboard: Could not retrieve server list.', 'warning');\n        }\n        return;\n      }\n\n      const newServers = data.servers;\n      const newServerMap = new Map(newServers.map((s) => [s.name, s]));\n      const existingCardElements = serverCardList.querySelectorAll('.server-card');\n      const existingServerNames = new Set(Array.from(existingCardElements).map((card) => card.dataset.serverName));\n\n      existingCardElements.forEach((card) => {\n        const serverName = card.dataset.serverName;\n        if (newServerMap.has(serverName)) {\n          const serverData = newServerMap.get(serverName);\n          const safeServerName = encodeURIComponent(serverData.name);\n          const status = serverData.status || 'UNKNOWN';\n          const version = serverData.version || 'N/A';\n          card.innerHTML = `\n                    <div class=\"server-card-thumbnail\">\n                        <img src=\"/api/server/${safeServerName}/world/icon\" alt=\"${serverData.name} World Icon\" class=\"world-icon-img\">\n                    </div>\n                    <div class=\"server-card-info\">\n                        <h3>${serverData.name}</h3>\n                        <p><span class=\"info-label\">Status:</span> <span class=\"status-text status-${status.toLowerCase()}\">${status.toUpperCase()}</span></p>\n                        <p><span class=\"info-label\">Version:</span> <span class=\"version-text\">${version}</span></p>\n                        <p><span class=\"info-label\">Players:</span> <span class=\"player-count-text\">${serverData.player_count}</span></p>\n                    </div>\n                    <div class=\"server-card-actions\">\n                        <a href=\"/servers/${safeServerName}/settings\" class=\"action-link\" title=\"Server Settings\">Settings</a>\n                    </div>`;\n        } else {\n          card.remove();\n        }\n      });\n\n      newServers.forEach((server) => {\n        if (!existingServerNames.has(server.name)) {\n          serverCardList.appendChild(createServerCardElement(server));\n        }\n      });\n\n      updateServerDropdown(newServers);\n      noServersMessage.style.display = newServers.length === 0 ? 'block' : 'none';\n    } catch (error) {\n      console.error(`${functionName}: Client-side error during dashboard update:`, error);\n      if (typeof showStatusMessage === 'function') {\n        showStatusMessage(`Dashboard update error: ${error.message}`, 'error');\n      }\n    }\n  }\n\n  serverSelect.addEventListener('change', (event) => {\n    updateActionStates(event.target.value);\n  });\n\n  // Attach event listeners to buttons\n  document.getElementById('start-server-btn')?.addEventListener('click', (e) => startServer(e.currentTarget));\n  document.getElementById('stop-server-btn')?.addEventListener('click', (e) => stopServer(e.currentTarget));\n  document.getElementById('restart-server-btn')?.addEventListener('click', (e) => restartServer(e.currentTarget));\n  document.getElementById('prompt-command-btn')?.addEventListener('click', (e) => promptCommand(e.currentTarget));\n  document\n    .getElementById('update-server-btn')\n    ?.addEventListener('click', (e) => triggerServerUpdate(e.currentTarget, serverSelect.value));\n  document\n    .getElementById('delete-server-btn')\n    ?.addEventListener('click', (e) => deleteServer(e.currentTarget, serverSelect.value));\n\n\n  updateDashboard();\n  setInterval(updateDashboard, POLLING_INTERVAL_MS);\n  console.log(`${functionName}: Initialization complete. Polling every ${POLLING_INTERVAL_MS}ms.`);\n}\n", "// frontend/src/account.js\n/**\n * @fileoverview Frontend JavaScript for the account management page.\n * Handles theme selection and other account-related settings.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nfunction loadUserProfile() {\n  sendServerActionRequest(null, '/api/account', 'GET', null, null, true).then((response) => {\n    if (response) {\n      document.getElementById('full_name').value = response.full_name || '';\n      document.getElementById('email').value = response.email || '';\n    }\n  });\n}\n\nfunction changePassword() {\n  const form = document.getElementById('change-password-form');\n  const currentPassword = form.elements['current_password'].value;\n  const newPassword = form.elements['new_password'].value;\n  const confirmNewPassword = form.elements['confirm_new_password'].value;\n\n  if (newPassword !== confirmNewPassword) {\n    showStatusMessage('New passwords do not match.', 'error');\n    return;\n  }\n\n  const data = {\n    current_password: currentPassword,\n    new_password: newPassword,\n  };\n\n  sendServerActionRequest(null, '/api/account/change-password', 'POST', data).then((response) => {\n    if (response && response.status === 'success') {\n      form.reset();\n    }\n  });\n}\n\nfunction updateProfile() {\n  const form = document.getElementById('profile-form');\n  const fullName = form.elements['full_name'].value;\n  const email = form.elements['email'].value;\n\n  const data = {\n    full_name: fullName,\n    email: email,\n  };\n\n  sendServerActionRequest(null, '/api/account/profile', 'POST', data);\n}\n\nexport function initializeAccountPage() {\n  loadUserProfile();\n  // --- Theme Selector Logic ---\n  const themeSelect = document.getElementById('theme-select');\n  if (themeSelect) {\n    // Populate theme options\n    sendServerActionRequest(null, '/api/themes', 'GET', null, null, true).then((themes) => {\n      if (themes) {\n        Object.keys(themes).forEach((themeName) => {\n          const option = document.createElement('option');\n          option.value = themeName;\n          option.textContent = themeName.charAt(0).toUpperCase() + themeName.slice(1);\n          themeSelect.appendChild(option);\n        });\n      }\n\n      // Set initial value from the data attribute on the select element\n      const currentTheme = themeSelect.dataset.currentTheme;\n      if (currentTheme) {\n        themeSelect.value = currentTheme;\n      }\n    });\n\n    themeSelect.addEventListener('change', async (event) => {\n      const newTheme = event.target.value;\n      const themeStylesheet = document.getElementById('theme-stylesheet');\n      if (themeStylesheet) {\n        const themes = await sendServerActionRequest(null, `/api/themes`, 'GET', null, null, true);\n        if (themes) {\n          themeStylesheet.href = themes[newTheme];\n        }\n      }\n\n      // Save the new theme setting for the user\n      await sendServerActionRequest(null, '/api/account/theme', 'POST', { theme: newTheme }, null);\n    });\n  }\n\n  // --- Sidebar Navigation ---\n  const navLinks = document.querySelectorAll('.sidebar-nav .nav-link');\n  const contentSections = document.querySelectorAll('.main-content .content-section');\n\n  navLinks.forEach((link) => {\n    link.addEventListener('click', (event) => {\n      // Check if it's a link to another page\n      if (!link.getAttribute('data-target')) {\n        return;\n      }\n\n      event.preventDefault();\n      const targetId = link.getAttribute('data-target');\n\n      // Deactivate all links and sections\n      navLinks.forEach((navLink) => navLink.classList.remove('active'));\n      contentSections.forEach((section) => section.classList.remove('active'));\n\n      // Activate the clicked link and target section\n      link.classList.add('active');\n      const targetSection = document.getElementById(targetId);\n      if (targetSection) {\n        targetSection.classList.add('active');\n      }\n    });\n  });\n\n  // Attach event listeners for the forms\n  const changePasswordForm = document.getElementById('change-password-form');\n  if (changePasswordForm) {\n    changePasswordForm.addEventListener('submit', (event) => {\n      event.preventDefault();\n      changePassword();\n    });\n  }\n\n  const profileForm = document.getElementById('profile-form');\n  if (profileForm) {\n    profileForm.addEventListener('submit', (event) => {\n      event.preventDefault();\n      updateProfile();\n    });\n  }\n}\n", "// frontend/src/allowlist.js\n/**\n * @fileoverview Frontend JavaScript for managing the server allowlist.\n * Handles user input, interacts with the allowlist API endpoints, and updates the UI.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nexport function initializeAllowlistPage() {\n  const functionName = 'AllowlistManager';\n  console.log(`${functionName}: Initializing allowlist page.`);\n\n  const serverNameElement = document.querySelector('p[data-server-name]');\n  let serverName = null;\n\n  if (serverNameElement && serverNameElement.dataset.serverName) {\n    serverName = serverNameElement.dataset.serverName;\n    console.log(`${functionName}: Found server name: '${serverName}'`);\n  } else {\n    console.error(`${functionName}: Could not find server name.`);\n    showStatusMessage('Critical page error: Could not determine server context.', 'error');\n    return;\n  }\n\n  async function addAllowlistPlayers(buttonElement) {\n    const functionName = 'addAllowlistPlayers';\n    console.log(`${functionName}: Initiated. Server: ${serverName}`);\n    console.debug(`${functionName}: Button Element:`, buttonElement);\n\n    const textArea = document.getElementById('player-names-add');\n    const ignoreLimitCheckbox = document.getElementById('ignore-limit-add');\n\n    if (!textArea || !ignoreLimitCheckbox) {\n      const errorMsg = \"Required 'add player' form elements not found.\";\n      console.error(`${functionName}: ${errorMsg}`);\n      showStatusMessage(`Internal page error: ${errorMsg}`, 'error');\n      return;\n    }\n\n    const playerNamesRaw = textArea.value;\n    const playersToAdd = playerNamesRaw\n      .split('\\n')\n      .map((name) => name.trim())\n      .filter((name) => name.length > 0);\n\n    if (playersToAdd.length === 0) {\n      const warnMsg = 'No player names entered.';\n      console.warn(`${functionName}: ${warnMsg}`);\n      showStatusMessage(warnMsg, 'warning');\n      return;\n    }\n\n    const ignoresPlayerLimit = ignoreLimitCheckbox.checked;\n    const requestBody = {\n      players: playersToAdd,\n      ignoresPlayerLimit: ignoresPlayerLimit,\n    };\n\n    const apiResponseData = await sendServerActionRequest(\n      serverName,\n      'allowlist/add',\n      'POST',\n      requestBody,\n      buttonElement,\n    );\n\n    if (apiResponseData && apiResponseData.status === 'success') {\n      const message = apiResponseData.message || 'Players processed.';\n      showStatusMessage(message, 'success');\n      textArea.value = '';\n      await fetchAndUpdateAllowlistDisplay();\n    }\n  }\n\n  async function fetchAndUpdateAllowlistDisplay() {\n    const functionName = 'fetchAndUpdateAllowlistDisplay';\n    console.log(`${functionName}: Initiating for server: ${serverName}`);\n\n    const displayList = document.getElementById('current-allowlist-display');\n    if (!displayList) {\n      console.error(`${functionName}: Target display element not found.`);\n      showStatusMessage('Internal page error: Allowlist display area not found.', 'error');\n      return;\n    }\n\n    displayList.innerHTML = '<li><i>Loading allowlist...</i></li>';\n\n    try {\n      const apiResponseData = await sendServerActionRequest(serverName, 'allowlist/get', 'GET', null, null, true);\n      displayList.innerHTML = '';\n\n      if (apiResponseData && apiResponseData.status === 'success' && Array.isArray(apiResponseData.players)) {\n        const players = apiResponseData.players;\n        if (players.length > 0) {\n          players.forEach((player) => {\n            const li = document.createElement('li');\n            li.className = 'allowlist-player-item';\n            li.innerHTML = `\n                            <span class=\"player-name\">${player.name || 'Unnamed Player'}</span>\n                            <span class=\"player-meta\"> (Ignores Limit: ${player.ignoresPlayerLimit ? 'Yes' : 'No'})</span>\n                        `;\n            const removeButton = document.createElement('button');\n            removeButton.type = 'button';\n            removeButton.textContent = 'Remove';\n            removeButton.className = 'action-button remove-button danger-button';\n            removeButton.title = `Remove ${player.name || 'this player'}`;\n            if (player.name) {\n              // Use data attribute instead of onclick\n              removeButton.dataset.playerName = player.name;\n            } else {\n              removeButton.disabled = true;\n            }\n            li.appendChild(removeButton);\n            displayList.appendChild(li);\n          });\n        } else {\n          displayList.innerHTML = '<li><i>No players currently in allowlist.</i></li>';\n        }\n      } else {\n        const errorMsg = `Could not refresh allowlist: ${apiResponseData.message || 'API returned an error.'}`;\n        showStatusMessage(errorMsg, 'error');\n      }\n    } catch (error) {\n      console.error(`${functionName}: Unexpected error:`, error);\n      showStatusMessage(`Client-side error updating allowlist: ${error.message}`, 'error');\n      displayList.innerHTML = '<li><i style=\"color: red;\">Error updating display.</i></li>';\n    }\n  }\n\n  async function removeAllowlistPlayer(buttonElement, playerName) {\n    if (!confirm(`Are you sure you want to remove '${playerName}' from the allowlist?`)) {\n      showStatusMessage('Player removal cancelled.', 'info');\n      return;\n    }\n\n    const requestBody = { players: [playerName] };\n    const apiResponseData = await sendServerActionRequest(\n      serverName,\n      'allowlist/remove',\n      'DELETE',\n      requestBody,\n      buttonElement,\n    );\n\n    if (apiResponseData && apiResponseData.status === 'success') {\n      await fetchAndUpdateAllowlistDisplay();\n      showStatusMessage(apiResponseData.message || `Player ${playerName} processed.`, 'success');\n    }\n  }\n\n  // Attach event listeners\n  const addPlayersButton = document.getElementById('add-allowlist-players-btn');\n  if (addPlayersButton) {\n    addPlayersButton.addEventListener('click', () => addAllowlistPlayers(addPlayersButton));\n  }\n\n  // Event delegation for remove buttons\n  const displayList = document.getElementById('current-allowlist-display');\n  if (displayList) {\n    displayList.addEventListener('click', (event) => {\n      const target = event.target;\n      if (target.classList.contains('remove-button') && target.dataset.playerName) {\n        removeAllowlistPlayer(target, target.dataset.playerName);\n      }\n    });\n  }\n\n  // Initial fetch\n  fetchAndUpdateAllowlistDisplay();\n}\n", "// frontend/src/auth.js\n/**\n * @fileoverview Handles frontend authentication logic, specifically login.\n */\n\nimport { showStatusMessage } from './utils.js';\n\nexport function initializeLoginPage() {\n  const loginForm = document.getElementById('login-form');\n  if (loginForm) {\n    loginForm.addEventListener('submit', (event) => {\n      event.preventDefault();\n      const loginButton = loginForm.querySelector('button[type=\"submit\"]');\n      handleLoginAttempt(loginButton);\n    });\n  }\n}\n\nasync function handleLoginAttempt(buttonElement) {\n  const functionName = 'handleLoginAttempt';\n  console.log(`${functionName}: Initiated.`);\n\n  const usernameInput = document.getElementById('username');\n  const passwordInput = document.getElementById('password');\n\n  if (!usernameInput || !passwordInput) {\n    console.error(`${functionName}: Login form elements not found.`);\n    showStatusMessage('Internal page error: Login form elements missing.', 'error');\n    return;\n  }\n\n  const username = usernameInput.value.trim();\n  const password = passwordInput.value;\n\n  if (!username) {\n    showStatusMessage('Username is required.', 'warning');\n    usernameInput.focus();\n    return;\n  }\n  if (!password) {\n    showStatusMessage('Password is required.', 'warning');\n    passwordInput.focus();\n    return;\n  }\n\n  if (buttonElement) buttonElement.disabled = true;\n  showStatusMessage('Attempting login...', 'info');\n\n  const formData = new FormData();\n  formData.append('username', username);\n  formData.append('password', password);\n\n  try {\n    const response = await fetch('/auth/token', {\n      method: 'POST',\n      body: formData,\n      headers: {\n        Accept: 'application/json',\n      },\n    });\n\n    const responseData = await response.json();\n\n    if (response.ok && responseData.access_token) {\n      if (responseData.access_token) {\n        localStorage.setItem('jwt_token', responseData.access_token);\n      }\n      showStatusMessage(responseData.message || 'Login successful! Redirecting...', 'success');\n\n      const nextUrl = new URLSearchParams(window.location.search).get('next');\n      setTimeout(() => {\n        window.location.href = nextUrl || '/';\n      }, 500);\n    } else {\n      const errorMessage = responseData.detail || responseData.message || 'Login failed.';\n      showStatusMessage(errorMessage, 'error');\n      if (passwordInput) passwordInput.value = '';\n      if (buttonElement) buttonElement.disabled = false;\n    }\n  } catch (error) {\n    const errorMsg = `Network or processing error during login: ${error.message}`;\n    showStatusMessage(errorMsg, 'error');\n    if (passwordInput) passwordInput.value = '';\n    if (buttonElement) buttonElement.disabled = false;\n  }\n}\n", "// frontend/src/backup_restore.js\n/**\n * @fileoverview Frontend JavaScript functions for triggering server backup and restore operations.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nexport function triggerBackup(buttonElement, serverName, backupType) {\n  const functionName = 'triggerBackup';\n  console.log(`${functionName}: Initiated. Server: '${serverName}', Type: '${backupType}'`);\n\n  if (backupType === 'all') {\n    const confirmationMessage = `Perform a full backup (world + config) for server '${serverName}'?`;\n    if (!confirm(confirmationMessage)) {\n      showStatusMessage('Full backup cancelled.', 'info');\n      return;\n    }\n  }\n\n  const requestBody = { backup_type: backupType };\n  const absoluteActionPath = `/api/server/${serverName}/backup/action`;\n  sendServerActionRequest(null, absoluteActionPath, 'POST', requestBody, buttonElement);\n}\n\nexport function triggerSpecificConfigBackup(buttonElement, serverName, filename) {\n  const functionName = 'triggerSpecificConfigBackup';\n  console.log(`${functionName}: Initiated. Server: '${serverName}', File: '${filename}'`);\n\n  if (!filename || !filename.trim()) {\n    showStatusMessage('Internal error: No filename provided.', 'error');\n    return;\n  }\n\n  const requestBody = {\n    backup_type: 'config',\n    file_to_backup: filename.trim(),\n  };\n  const absoluteActionPath = `/api/server/${serverName}/backup/action`;\n  sendServerActionRequest(null, absoluteActionPath, 'POST', requestBody, buttonElement);\n}\n\nexport function triggerRestore(buttonElement, serverName, restoreType, backupFilePath) {\n  const functionName = 'triggerRestore';\n  console.log(`${functionName}: Initiated. Server: '${serverName}', Type: '${restoreType}', File: '${backupFilePath}'`);\n\n  if (!backupFilePath || !backupFilePath.trim()) {\n    showStatusMessage('Internal error: No backup file path provided.', 'error');\n    return;\n  }\n\n  const backupFilename = backupFilePath.trim().split(/[\\\\/]/).pop();\n  const confirmationMessage = `Are you sure you want to restore backup '${backupFilename}' for server '${serverName}'? This will OVERWRITE current data!`;\n  if (!confirm(confirmationMessage)) {\n    showStatusMessage('Restore operation cancelled.', 'info');\n    return;\n  }\n\n  const requestBody = {\n    restore_type: restoreType.toLowerCase(),\n    backup_file: backupFilePath.trim(),\n  };\n  const absoluteActionPath = `/api/server/${serverName}/restore/action`;\n  sendServerActionRequest(null, absoluteActionPath, 'POST', requestBody, buttonElement);\n}\n\nexport function triggerRestoreAll(buttonElement, serverName) {\n  const functionName = 'triggerRestoreAll';\n  console.log(`${functionName}: Initiated for server: '${serverName}'`);\n\n  const confirmationMessage = `Are you sure you want to restore ALL latest backups for server '${serverName}'? This will OVERWRITE current world and configuration files!`;\n  if (!confirm(confirmationMessage)) {\n    showStatusMessage('Restore All operation cancelled.', 'info');\n    return;\n  }\n\n  const requestBody = {\n    restore_type: 'all',\n    backup_file: null,\n  };\n  const absoluteActionPath = `/api/server/${serverName}/restore/action`;\n  sendServerActionRequest(null, absoluteActionPath, 'POST', requestBody, buttonElement);\n}\n\nexport async function handleSelectBackupType(buttonElement, serverName, restoreType) {\n  const functionName = 'handleSelectBackupType';\n  console.log(`${functionName}: Initiated for server '${serverName}', type '${restoreType}'.`);\n\n  const requestBody = { restore_type: restoreType };\n  const absoluteActionPath = `/api/server/${serverName}/restore/select_backup_type`;\n\n  try {\n    const responseData = await sendServerActionRequest(null, absoluteActionPath, 'POST', requestBody, buttonElement);\n    if (responseData && responseData.status === 'success' && responseData.redirect_url) {\n      window.location.href = responseData.redirect_url;\n    } else if (responseData && responseData.message) {\n      showStatusMessage(responseData.message, responseData.status === 'success' ? 'success' : 'error');\n    }\n  } catch (error) {\n    console.error(`${functionName}: Unexpected error: ${error.message}`, error);\n    showStatusMessage('An unexpected error occurred.', 'error');\n    if (buttonElement) buttonElement.disabled = false;\n  }\n}\n\nexport function initializeBackupRestorePage() {\n  console.log('Backup/Restore page script loaded.');\n\n  const page = document.getElementById('backup-restore-page');\n  const serverName = page?.dataset.serverName;\n\n  document\n    .getElementById('backup-world-btn')\n    ?.addEventListener('click', (e) => triggerBackup(e.currentTarget, serverName, 'world'));\n  document\n    .getElementById('backup-all-btn')\n    ?.addEventListener('click', (e) => triggerBackup(e.currentTarget, serverName, 'all'));\n\n  document\n    .getElementById('select-world-backup-btn')\n    ?.addEventListener('click', (e) => handleSelectBackupType(e.currentTarget, serverName, 'world'));\n  document\n    .getElementById('select-properties-backup-btn')\n    ?.addEventListener('click', (e) => handleSelectBackupType(e.currentTarget, serverName, 'properties'));\n  document\n    .getElementById('select-allowlist-backup-btn')\n    ?.addEventListener('click', (e) => handleSelectBackupType(e.currentTarget, serverName, 'allowlist'));\n  document\n    .getElementById('select-permissions-backup-btn')\n    ?.addEventListener('click', (e) => handleSelectBackupType(e.currentTarget, serverName, 'permissions'));\n  document\n    .getElementById('restore-all-btn')\n    ?.addEventListener('click', (e) => triggerRestoreAll(e.currentTarget, serverName));\n\n  document\n    .getElementById('backup-allowlist-btn')\n    ?.addEventListener('click', (e) => triggerSpecificConfigBackup(e.currentTarget, serverName, 'allowlist.json'));\n  document\n    .getElementById('backup-permissions-btn')\n    ?.addEventListener('click', (e) => triggerSpecificConfigBackup(e.currentTarget, serverName, 'permissions.json'));\n  document\n    .getElementById('backup-properties-btn')\n    ?.addEventListener('click', (e) => triggerSpecificConfigBackup(e.currentTarget, serverName, 'server.properties'));\n\n  document.querySelectorAll('.restore-backup-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      const btn = e.currentTarget;\n      const restoreType = btn.dataset.restoreType;\n      const backupPath = btn.dataset.backupPath;\n      triggerRestore(btn, serverName, restoreType, backupPath);\n    });\n  });\n}\n", "// frontend/src/content_management.js\n/**\n * @fileoverview Frontend JavaScript functions for triggering content installation\n * (worlds and addons) via API calls based on user interaction.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nexport function triggerWorldInstall(buttonElement, serverName, worldFilePath) {\n  const filenameForDisplay = worldFilePath.split(/[\\\\/]/).pop() || worldFilePath;\n  const confirmationMessage = `Install world '${filenameForDisplay}' for server '${serverName}'?\\n\\nWARNING: This will permanently REPLACE the current world data!`;\n  if (!confirm(confirmationMessage)) {\n    showStatusMessage('World installation cancelled.', 'info');\n    return;\n  }\n  const requestBody = { filename: worldFilePath };\n  const apiUrl = `/api/server/${serverName}/world/install`;\n  sendServerActionRequest(null, apiUrl, 'POST', requestBody, buttonElement);\n}\n\nexport async function triggerWorldExport(buttonElement, serverName) {\n  const absoluteActionPath = `/api/server/${serverName}/world/export`;\n  const result = await sendServerActionRequest(null, absoluteActionPath, 'POST', null, buttonElement);\n  if (result && result.status === 'success') {\n    showStatusMessage(result.message + ' Refreshing list...', 'success');\n    setTimeout(() => {\n      window.location.reload();\n    }, 2000);\n  }\n}\n\nexport async function triggerWorldReset(buttonElement, serverName) {\n  if (!confirm(`WARNING: Reset the current world for server '${serverName}'?`)) {\n    showStatusMessage('World reset cancelled.', 'info');\n    return;\n  }\n  const absoluteActionPath = `/api/server/${serverName}/world/reset`;\n  await sendServerActionRequest(null, absoluteActionPath, 'DELETE', null, buttonElement);\n}\n\nexport function triggerAddonInstall(buttonElement, serverName, addonFilePath) {\n  const filenameForDisplay = addonFilePath.split(/[\\\\/]/).pop() || addonFilePath;\n  const confirmationMessage = `Install addon '${filenameForDisplay}' for server '${serverName}'?`;\n  if (!confirm(confirmationMessage)) {\n    showStatusMessage('Addon installation cancelled.', 'info');\n    return;\n  }\n  const requestBody = { filename: addonFilePath };\n  const apiUrl = `/api/server/${serverName}/addon/install`;\n  sendServerActionRequest(null, apiUrl, 'POST', requestBody, buttonElement);\n}\n\nexport function initializeContentManagementPage() {\n  console.log('Content management page script loaded.');\n\n  const page = document.getElementById('content-management-page');\n  const serverName = page?.dataset.serverName;\n\n  document\n    .getElementById('export-world-btn')\n    ?.addEventListener('click', (e) => triggerWorldExport(e.currentTarget, serverName));\n  document\n    .getElementById('reset-world-btn')\n    ?.addEventListener('click', (e) => triggerWorldReset(e.currentTarget, serverName));\n\n  document.querySelectorAll('.install-addon-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      const btn = e.currentTarget;\n      const addonPath = btn.dataset.addonPath;\n      triggerAddonInstall(btn, serverName, addonPath);\n    });\n  });\n\n  document.querySelectorAll('.import-world-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      const btn = e.currentTarget;\n      const worldPath = btn.dataset.worldPath;\n      triggerWorldInstall(btn, serverName, worldPath);\n    });\n  });\n}\n", "// frontend/src/install_config.js\n/**\n * @fileoverview Frontend JavaScript for handling the multi-step server installation\n * and configuration process.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nfunction _clearValidationErrors() {\n  const errorArea = document.getElementById('validation-error-area');\n  if (errorArea) {\n    errorArea.innerHTML = '';\n    errorArea.style.display = 'none';\n  }\n  document.querySelectorAll('.validation-error').forEach((el) => (el.textContent = ''));\n}\n\nfunction _handleInstallSuccessNavigation(apiResponseData) {\n  const nextUrl = apiResponseData?.next_step_url;\n  const message = apiResponseData?.message || 'Server installed successfully!';\n  if (nextUrl) {\n    showStatusMessage(`${message} Proceeding to configuration...`, 'success');\n    setTimeout(() => (window.location.href = nextUrl), 1500);\n  } else {\n    showStatusMessage('Server installed, but next step URL is missing.', 'warning');\n  }\n}\n\nfunction pollTaskStatus(taskId, successCallback) {\n  const intervalId = setInterval(async () => {\n    try {\n      const response = await fetch(`/api/tasks/status/${taskId}`);\n      if (!response.ok) {\n        clearInterval(intervalId);\n        showStatusMessage(`Error checking task status: ${response.statusText}`, 'error');\n        return;\n      }\n      const data = await response.json();\n      if (data.status === 'success') {\n        clearInterval(intervalId);\n        if (successCallback) successCallback(data.result);\n        else showStatusMessage(data.message || 'Task completed successfully.', 'success');\n      } else if (data.status === 'error') {\n        clearInterval(intervalId);\n        showStatusMessage(`Task failed: ${data.message}`, 'error');\n      } else if (data.message) {\n        showStatusMessage(`Task in progress: ${data.message}`, 'info');\n      }\n    } catch (error) {\n      clearInterval(intervalId);\n      showStatusMessage(`Error polling task status: ${error.message}`, 'error');\n    }\n  }, 2000);\n}\n\nexport async function triggerInstallServer(buttonElement) {\n  const serverNameInput = document.getElementById('install-server-name');\n  const serverVersionInput = document.getElementById('install-server-version');\n  const serverName = serverNameInput.value.trim();\n  const serverVersion = serverVersionInput.value.trim() || 'LATEST';\n\n  if (!serverName) return showStatusMessage('Server name cannot be empty.', 'warning');\n  if (!/^[a-zA-Z0-9_-]+$/.test(serverName)) return showStatusMessage('Server name has invalid characters.', 'error');\n\n  _clearValidationErrors();\n\n  const requestBody = { server_name: serverName, server_version: serverVersion, overwrite: false };\n  if (serverVersion.toUpperCase() === 'CUSTOM') {\n    requestBody.server_zip_path = document.getElementById('custom-zip-selector').value;\n  }\n\n  const initialResponse = await sendServerActionRequest(\n    null,\n    '/api/server/install',\n    'POST',\n    requestBody,\n    buttonElement,\n  );\n\n  if (initialResponse) {\n    if (initialResponse.status === 'confirm_needed') {\n      if (confirm(initialResponse.message)) {\n        const finalResponse = await sendServerActionRequest(\n          null,\n          '/api/server/install',\n          'POST',\n          { ...requestBody, overwrite: true },\n          buttonElement,\n        );\n        if (finalResponse && finalResponse.status === 'pending') {\n          pollTaskStatus(finalResponse.task_id, _handleInstallSuccessNavigation);\n        }\n      } else {\n        showStatusMessage('Installation cancelled.', 'info');\n        if (buttonElement) buttonElement.disabled = false;\n      }\n    } else if (initialResponse.status === 'pending') {\n      pollTaskStatus(initialResponse.task_id, _handleInstallSuccessNavigation);\n    }\n  }\n}\n\nexport async function saveProperties(buttonElement, serverName, isNewInstall) {\n  const propertiesData = {};\n  const formElements = document.querySelectorAll(\n    '.properties-config-section .form-input, .properties-config-section .toggle-input, .properties-config-section input[type=\"hidden\"]',\n  );\n  formElements.forEach((el) => {\n    if (!el.name) return;\n    if (el.type === 'checkbox' && el.classList.contains('toggle-input')) {\n      if (el.checked) propertiesData[el.name.replace('-cb', '')] = 'true';\n    } else if (el.type === 'hidden') {\n      if (!el.disabled) propertiesData[el.name] = el.value;\n    } else if (!el.classList.contains('toggle-input')) {\n      propertiesData[el.name] = el.value;\n    }\n  });\n\n  _clearValidationErrors();\n  const response = await sendServerActionRequest(\n    null,\n    `/api/server/${serverName}/properties/set`,\n    'POST',\n    { properties: propertiesData },\n    buttonElement,\n  );\n\n  if (response && response.status === 'success') {\n    const message = response.message || 'Properties saved.';\n    if (isNewInstall) {\n      showStatusMessage(`${message} Proceeding to Allowlist...`, 'success');\n      setTimeout(\n        () => (window.location.href = `/server/${encodeURIComponent(serverName)}/configure_allowlist?new_install=True`),\n        1500,\n      );\n    } else {\n      showStatusMessage(message, 'success');\n    }\n  }\n}\n\nasync function loadPermissions() {\n  const loader = document.getElementById('permissions-loader');\n  const tableBody = document.getElementById('permissions-table-body');\n  const configSection = document.getElementById('install-config-page');\n  const serverName = configSection?.dataset.serverName;\n\n  if (!tableBody || !serverName) {\n    console.error('Required elements for loading permissions not found.');\n    return;\n  }\n\n  try {\n    const data = await sendServerActionRequest(serverName, 'permissions/get', 'GET', null, null, true);\n    tableBody.innerHTML = ''; // Clear loader/previous content\n\n    if (data && data.status === 'success' && data.data && data.data.permissions && Array.isArray(data.data.permissions)) {\n      const playerRowTemplate = document.getElementById('player-row-template');\n      const noPlayersTemplate = document.getElementById('no-players-row-template');\n\n      if (data.data.permissions.length > 0) {\n        data.data.permissions.forEach((player) => {\n          const rowClone = playerRowTemplate.content.cloneNode(true);\n          rowClone.querySelector('.player-name').textContent = player.name;\n          rowClone.querySelector('.player-xuid').textContent = player.xuid;\n          const select = rowClone.querySelector('.permission-select');\n          select.dataset.xuid = player.xuid;\n          select.value = player.permission_level;\n          tableBody.appendChild(rowClone);\n        });\n      } else {\n        const noPlayersRow = noPlayersTemplate.content.cloneNode(true);\n        tableBody.appendChild(noPlayersRow);\n      }\n      if (configSection) configSection.style.display = 'block';\n    } else {\n      showStatusMessage(data?.message || 'Failed to load permissions.', 'error');\n    }\n  } catch (error) {\n    showStatusMessage(`Client-side error loading permissions: ${error.message}`, 'error');\n  } finally {\n    if (loader) loader.style.display = 'none';\n  }\n}\n\nexport async function savePermissions(buttonElement, serverName, isNewInstall) {\n  const permissions = Array.from(document.querySelectorAll('select.permission-select')).map((select) => ({\n    xuid: select.dataset.xuid,\n    name: select.closest('tr').querySelector('.player-name').textContent.trim(),\n    permission_level: select.value,\n  }));\n\n  _clearValidationErrors();\n  const response = await sendServerActionRequest(\n    null,\n    `/api/server/${serverName}/permissions/set`,\n    'PUT',\n    { permissions },\n    buttonElement,\n  );\n\n  if (response && response.status === 'success') {\n    const message = response.message || 'Permissions saved.';\n    if (isNewInstall) {\n      showStatusMessage(`${message} Proceeding to Service Config...`, 'success');\n      setTimeout(\n        () => (window.location.href = `/server/${encodeURIComponent(serverName)}/configure_service?new_install=True`),\n        1500,\n      );\n    } else {\n      showStatusMessage(message, 'success');\n    }\n  }\n}\n\nexport async function saveServiceSettings(buttonElement, serverName, currentOs, isNewInstall) {\n  const settings = {\n    autoupdate: document.getElementById('service-autoupdate-cb').checked,\n    autostart: document.getElementById('service-autostart-cb').checked,\n  };\n  const startAfter = isNewInstall && document.getElementById('service-start-server').checked;\n\n  _clearValidationErrors();\n  const saveResponse = await sendServerActionRequest(\n    null,\n    `/api/server/${serverName}/service/update`,\n    'POST',\n    settings,\n    buttonElement,\n  );\n\n  if (saveResponse && ['success', 'success_with_warning'].includes(saveResponse.status)) {\n    const message = saveResponse.message || 'Service settings saved.';\n    if (startAfter) {\n      showStatusMessage(`${message} Starting server...`, 'info');\n      const startResponse = await sendServerActionRequest(serverName, 'start', 'POST', null, buttonElement);\n      if (startResponse && startResponse.status === 'success') {\n        showStatusMessage('Server started! Installation complete. Redirecting...', 'success');\n        setTimeout(() => (window.location.href = '/'), 2000);\n      } else {\n        showStatusMessage(\n          `Settings saved, but server failed to start: ${startResponse?.message || 'Unknown error'}`,\n          'warning',\n        );\n      }\n    } else if (isNewInstall) {\n      showStatusMessage(`${message} Installation complete! Redirecting...`, 'success');\n      setTimeout(() => (window.location.href = '/'), 1500);\n    } else {\n      showStatusMessage(message, 'success');\n    }\n  }\n}\n\nexport async function checkCustomVersion(version) {\n  const customZipGroup = document.getElementById('custom-zip-selector-group');\n  if (version.toUpperCase() === 'CUSTOM') {\n    customZipGroup.style.display = 'block';\n    const data = await sendServerActionRequest(null, '/api/downloads/list', 'GET', null, null, true);\n    const selector = document.getElementById('custom-zip-selector');\n    selector.innerHTML = '';\n    if (data && data.custom_zips && data.custom_zips.length > 0) {\n      data.custom_zips.forEach((zip) => {\n        const option = document.createElement('option');\n        option.value = zip;\n        option.textContent = zip;\n        selector.appendChild(option);\n      });\n    } else {\n      selector.innerHTML = '<option disabled>No custom zips found</option>';\n    }\n  } else {\n    customZipGroup.style.display = 'none';\n  }\n}\n\nexport function initializeInstallConfigPage() {\n  console.log('Install/config page script loaded.');\n\n  const installConfigPage = document.getElementById('install-config-page');\n  const serverName = installConfigPage?.dataset.serverName;\n  const isNewInstall = installConfigPage?.dataset.isNewInstall === 'true';\n  const os = installConfigPage?.dataset.os;\n\n  document\n    .getElementById('install-server-btn')\n    ?.addEventListener('click', (e) => triggerInstallServer(e.currentTarget));\n  document\n    .getElementById('save-permissions-btn')\n    ?.addEventListener('click', (e) => savePermissions(e.currentTarget, serverName, isNewInstall));\n  document\n    .getElementById('submit-properties-btn')\n    ?.addEventListener('click', (e) => saveProperties(e.currentTarget, serverName, isNewInstall));\n  document\n    .getElementById('save-service-settings-btn')\n    ?.addEventListener('click', (e) => saveServiceSettings(e.currentTarget, serverName, os, isNewInstall));\n\n  if (new URLSearchParams(window.location.search).has('in_setup')) {\n    const bannerContainer = document.getElementById('setup-banner-container');\n    if (bannerContainer) {\n      bannerContainer.innerHTML = `\n            <div class=\"setup-banner\">\n                <h3>Step 3: Install a Server</h3>\n                <p>\n                    Install and configure your first Bedrock Server. This will include setting server.properties, allowlist, and other files.\n                </p>\n                <a href=\"/\" class=\"action-button\">Skip</a>\n            </div>\n        `;\n    }\n  }\n\n  // Custom controls initialization\n  document.querySelectorAll('.segmented-control').forEach((control) => {\n    const input = document.getElementById(control.dataset.inputId);\n    if (input) {\n      control.querySelectorAll('.segment').forEach((segment) => {\n        segment.addEventListener('click', (e) => {\n          e.preventDefault();\n          input.value = segment.dataset.value;\n          control.querySelectorAll('.segment').forEach((s) => s.classList.remove('active'));\n          segment.classList.add('active');\n        });\n      });\n    }\n  });\n\n  document.querySelectorAll('.toggle-input').forEach((input) => {\n    const hidden = input\n      .closest('.form-group-toggle-container')\n      ?.querySelector(`.toggle-hidden-false[name=\"${input.name.replace('-cb', '')}\"]`);\n    if (hidden) {\n      const sync = () => (hidden.disabled = input.checked);\n      input.addEventListener('change', sync);\n      sync();\n    }\n  });\n\n  // Logic from configure_properties.html\n  const setInputValue = (id, value) => {\n    const el = document.getElementById(id);\n    if (el) el.value = value;\n  };\n\n  const setToggleState = (id, value) => {\n    const el = document.getElementById(id);\n    if (el) {\n      el.checked = String(value).toLowerCase() === 'true';\n      el.dispatchEvent(new Event('change'));\n    }\n  };\n\n  const setSegmentedControlState = (hiddenInputId, value) => {\n    const hiddenInput = document.getElementById(hiddenInputId);\n    const controlWrapper = document.querySelector(`[data-input-id=\"${hiddenInputId}\"]`);\n    if (hiddenInput && controlWrapper) {\n      hiddenInput.value = value;\n      controlWrapper.querySelectorAll('.segment').forEach((s) => s.classList.remove('active'));\n      const activeSegment = controlWrapper.querySelector(`.segment[data-value=\"${value}\"]`);\n      if (activeSegment) activeSegment.classList.add('active');\n    }\n  };\n\n  function populateForm(properties) {\n    const propertyMap = {\n      'server-name': { id: 'server-name', type: 'input' },\n      'level-name': { id: 'level-name', type: 'input' },\n      gamemode: { id: 'gamemode-hidden', type: 'segment' },\n      difficulty: { id: 'difficulty-hidden', type: 'segment' },\n      'allow-cheats': { id: 'allow-cheats-cb', type: 'toggle' },\n      'max-players': { id: 'max-players', type: 'input' },\n      'level-seed': { id: 'level-seed', type: 'input' },\n      'server-port': { id: 'server-port', type: 'input' },\n      'server-portv6': { id: 'server-portv6', type: 'input' },\n      'enable-lan-visibility': { id: 'enable-lan-visibility-cb', type: 'toggle' },\n      'allow-list': { id: 'allow-list-cb', type: 'toggle' },\n      'default-player-permission-level': { id: 'default-player-permission-level-hidden', type: 'segment' },\n      'view-distance': { id: 'view-distance', type: 'input' },\n      'tick-distance': { id: 'tick-distance', type: 'input' },\n      'online-mode': { id: 'online-mode-cb', type: 'toggle' },\n      'texturepack-required': { id: 'texturepack-required-cb', type: 'toggle' },\n    };\n\n    for (const key in properties) {\n      if (Object.prototype.hasOwnProperty.call(properties, key) && propertyMap[key]) {\n        const prop = propertyMap[key];\n        const value = properties[key];\n        if (value === undefined) continue;\n\n        switch (prop.type) {\n          case 'input':\n            setInputValue(prop.id, value);\n            break;\n          case 'toggle':\n            setToggleState(prop.id, value);\n            break;\n          case 'segment':\n            setSegmentedControlState(prop.id, value);\n            break;\n        }\n      }\n    }\n  }\n\n  async function loadProperties() {\n    const loader = document.getElementById('properties-loader');\n    const formContainer = document.getElementById('properties-form-container');\n    try {\n      const data = await sendServerActionRequest(serverName, 'properties/get', 'GET', null, null);\n      if (data && data.status === 'success' && data.properties) {\n        populateForm(data.properties);\n        if (formContainer) formContainer.style.display = 'block';\n      } else {\n        showStatusMessage(data?.message || 'Failed to load server properties.', 'error');\n      }\n    } catch (error) {\n      showStatusMessage(`Client-side error loading properties: ${error.message}`, 'error');\n    } finally {\n      if (loader) loader.style.display = 'none';\n    }\n  }\n\n  if (document.getElementById('properties-form-container')) {\n    loadProperties();\n  }\n\n  if (document.getElementById('permissions-table-body')) {\n    loadPermissions();\n  }\n}\n", "// frontend/src/manage_plugins.js\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nexport function initializeManagePluginsPage() {\n  const functionName = 'PluginManagerUI';\n\n  const pluginList = document.getElementById('plugin-list');\n  const pluginItemTemplate = document.getElementById('plugin-item-template');\n  const noPluginsTemplate = document.getElementById('no-plugins-template');\n  const loadErrorTemplate = document.getElementById('load-error-template');\n  const pluginLoader = document.getElementById('plugin-loader');\n  const reloadPluginsBtn = document.getElementById('reload-plugins-btn');\n\n  if (\n    !pluginList ||\n    !pluginItemTemplate ||\n    !noPluginsTemplate ||\n    !loadErrorTemplate ||\n    !pluginLoader ||\n    !reloadPluginsBtn\n  ) {\n    console.error(`${functionName}: Critical page elements missing.`);\n    if (pluginList) pluginList.innerHTML = '<li>Page setup error.</li>';\n    return;\n  }\n\n  // Check for 'in_setup' parameter and display banner if present\n  const urlParams = new URLSearchParams(window.location.search);\n  if (urlParams.has('in_setup')) {\n    const bannerContainer = document.getElementById('setup-banner-container');\n    if (bannerContainer) {\n      bannerContainer.innerHTML = `\n        <div class=\"setup-banner\">\n            <h3>Step 2: Plugin Management</h3>\n            <p>\n                Here you can manage plugins. Reload plugins to apply any changes.<br>\n                <strong>Note:</strong> Any plugins that add new FastAPI routes (such as the content_uploader_plugin) will require a server restart to take effect.\n            </p>\n            <a href=\"/install?in_setup=true\" class=\"action-button\">Continue to Server Installation</a>\n        </div>\n      `;\n    }\n  }\n\n  reloadPluginsBtn.addEventListener('click', handleReloadClick);\n\n  async function handleReloadClick() {\n    reloadPluginsBtn.disabled = true;\n    const originalButtonText = reloadPluginsBtn.innerHTML;\n    reloadPluginsBtn.innerHTML = '<div class=\"spinner-small\"></div> Reloading...';\n\n    try {\n      const result = await sendServerActionRequest(null, '/api/plugins/reload', 'PUT', null, reloadPluginsBtn);\n      if (result && result.status === 'success') {\n        await fetchAndRenderPlugins();\n      }\n    } finally {\n      reloadPluginsBtn.innerHTML = originalButtonText;\n      if (reloadPluginsBtn.disabled) reloadPluginsBtn.disabled = false;\n    }\n  }\n\n  async function fetchAndRenderPlugins() {\n    pluginLoader.style.display = 'flex';\n    pluginList.querySelectorAll('li:not(#plugin-loader)').forEach((el) => el.remove());\n\n    try {\n      const data = await sendServerActionRequest(null, '/api/plugins', 'GET', null, null, true);\n      pluginLoader.style.display = 'none';\n\n      if (data && data.status === 'success') {\n        const plugins = data.data;\n        if (plugins && Object.keys(plugins).length > 0) {\n          Object.keys(plugins)\n            .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n            .forEach((pluginName) => {\n              const pluginData = plugins[pluginName];\n              const itemClone = pluginItemTemplate.content.cloneNode(true);\n              itemClone.querySelector('.plugin-name').textContent = pluginName;\n              itemClone.querySelector('.plugin-version').textContent = `v${pluginData.version || 'N/A'}`;\n              const toggleSwitch = itemClone.querySelector('.plugin-toggle-switch');\n              toggleSwitch.checked = pluginData.enabled;\n              toggleSwitch.dataset.pluginName = pluginName;\n              toggleSwitch.addEventListener('change', handlePluginToggle);\n              pluginList.appendChild(itemClone);\n            });\n        } else {\n          pluginList.appendChild(noPluginsTemplate.content.cloneNode(true));\n        }\n      } else {\n        pluginList.appendChild(loadErrorTemplate.content.cloneNode(true));\n      }\n    } catch (error) {\n      pluginLoader.style.display = 'none';\n      pluginList.appendChild(loadErrorTemplate.content.cloneNode(true));\n      showStatusMessage(`Unexpected error fetching plugin data: ${error.message}`, 'error');\n    }\n  }\n\n  async function handlePluginToggle(event) {\n    const toggleSwitch = event.target;\n    const pluginName = toggleSwitch.dataset.pluginName;\n    const isEnabled = toggleSwitch.checked;\n\n    const result = await sendServerActionRequest(\n      null,\n      `/api/plugins/${pluginName}`,\n      'POST',\n      { enabled: isEnabled },\n      toggleSwitch,\n    );\n    if (!result || result.status !== 'success') {\n      toggleSwitch.checked = !isEnabled; // Revert on error\n    }\n  }\n\n  fetchAndRenderPlugins();\n  console.log(`${functionName}: Plugin management page initialized.`);\n}\n", "// frontend/src/manage_settings.js\n/**\n * @fileoverview Frontend JavaScript for the global settings management page.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nexport function initializeManageSettingsPage() {\n  const settingsFormContainer = document.getElementById('settings-form-container');\n  const settingsSidebar = document.getElementById('settings-sidebar');\n  const reloadButton = document.getElementById('reload-settings-btn');\n  const loader = document.getElementById('settings-loader');\n  const settingsFormSection = document.getElementById('settings-form-section');\n\n  if (!settingsFormSection || !settingsFormContainer || !settingsSidebar || !reloadButton || !loader) {\n    console.error('manage_settings.js: Critical elements not found.');\n    return;\n  }\n\n  // Check for 'in_setup' parameter and display banner if present\n  const urlParams = new URLSearchParams(window.location.search);\n  if (urlParams.has('in_setup')) {\n    const bannerContainer = document.getElementById('setup-banner-container');\n    if (bannerContainer) {\n      bannerContainer.innerHTML = `\n        <div class=\"setup-banner\">\n            <h3>Step 1: Global Settings</h3>\n            <p>\n                Modify the global settings for your Bedrock Server Manager instance. Reload the settings after making changes to apply them.<br>\n                <strong>Note:</strong> Some settings may require a server restart to take effect.\n            </p>\n            <a href=\"/plugins?in_setup=true\" class=\"action-button\">Continue to Plugin Setup</a>\n        </div>\n      `;\n    }\n  }\n\n  const showLoader = (isLoading) => {\n    loader.style.display = isLoading ? 'block' : 'none';\n    settingsFormSection.style.display = isLoading ? 'none' : 'block';\n    if (isLoading) {\n        settingsFormContainer.innerHTML = '';\n        settingsSidebar.innerHTML = '';\n    }\n  };\n\n  const showError = (message) => {\n    showLoader(false);\n    settingsFormSection.style.display = 'none';\n    showStatusMessage(message, 'error');\n  };\n\n  const renderSettings = (data) => {\n    settingsFormContainer.innerHTML = '';\n    settingsSidebar.innerHTML = '';\n    let totalFieldsRendered = 0;\n\n    Object.keys(data)\n      .sort()\n      .forEach((categoryKey) => {\n        if (typeof data[categoryKey] !== 'object' || data[categoryKey] === null) return;\n\n        const fieldset = document.createElement('fieldset');\n        fieldset.id = `category-${categoryKey}`;\n        const legend = document.createElement('legend');\n        legend.textContent = categoryKey.charAt(0).toUpperCase() + categoryKey.slice(1);\n        fieldset.appendChild(legend);\n\n        const link = document.createElement('a');\n        link.href = `#category-${categoryKey}`;\n        link.className = 'nav-link';\n        link.textContent = legend.textContent;\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            document.querySelectorAll('.settings-nav .nav-link').forEach(l => l.classList.remove('active'));\n            link.classList.add('active');\n            fieldset.scrollIntoView({ behavior: 'smooth' });\n        });\n        settingsSidebar.appendChild(link);\n\n\n        let categoryFieldsAdded = 0;\n        Object.keys(data[categoryKey])\n          .sort()\n          .forEach((settingKey) => {\n            const formGroup = createFormElement(\n              `${categoryKey}.${settingKey}`,\n              settingKey,\n              data[categoryKey][settingKey],\n            );\n            if (formGroup) {\n              fieldset.appendChild(formGroup);\n              categoryFieldsAdded++;\n            }\n          });\n\n        if (categoryFieldsAdded > 0) {\n          settingsFormContainer.appendChild(fieldset);\n          totalFieldsRendered += categoryFieldsAdded;\n        }\n      });\n\n    if (totalFieldsRendered === 0) showError('No configurable settings.');\n  };\n\n  const createFormElement = (fullKey, labelText, value) => {\n    const formGroup = document.createElement('div');\n    formGroup.className = 'form-group';\n    const label = document.createElement('label');\n    label.htmlFor = fullKey;\n    label.textContent = (labelText.charAt(0).toUpperCase() + labelText.slice(1)).replace(/_/g, ' ');\n    let inputElement;\n\n    if (typeof value === 'boolean') {\n      // simplified toggle creation\n      formGroup.classList.add('form-group-toggle-container');\n      inputElement = document.createElement('input');\n      inputElement.type = 'checkbox';\n      inputElement.checked = value;\n      inputElement.className = 'toggle-input';\n      const switchLabel = document.createElement('label');\n      switchLabel.htmlFor = fullKey;\n      switchLabel.className = 'toggle-switch';\n      formGroup.append(label, inputElement, switchLabel);\n    } else {\n      formGroup.appendChild(label);\n      inputElement = document.createElement('input');\n      inputElement.className = 'form-input';\n      if (Array.isArray(value)) {\n        inputElement.type = 'text';\n        inputElement.value = value.join(', ');\n        inputElement.placeholder = 'comma, separated, list';\n      } else {\n        inputElement.type = typeof value === 'number' ? 'number' : 'text';\n        inputElement.value = value;\n      }\n      formGroup.appendChild(inputElement);\n    }\n\n    inputElement.id = fullKey;\n    inputElement.name = fullKey;\n    inputElement.addEventListener('change', handleInputChange);\n    return formGroup;\n  };\n\n  async function handleInputChange(event) {\n    const input = event.target;\n    let value =\n      input.type === 'checkbox' ? input.checked : input.type === 'number' ? parseFloat(input.value) : input.value;\n    if (input.placeholder === 'comma, separated, list') {\n      value = value\n        .split(',')\n        .map((s) => s.trim())\n        .filter(Boolean);\n    }\n    await sendServerActionRequest(null, '/api/settings', 'POST', { key: input.name, value }, null);\n  }\n\n  reloadButton.addEventListener('click', async () => {\n    if (confirm('Discard unsaved changes and reload from file?')) {\n      const result = await sendServerActionRequest(null, '/api/settings/reload', 'POST', null, reloadButton);\n      if (result && result.status === 'success') {\n        await loadAndRenderSettings();\n      }\n    }\n  });\n\n  const loadAndRenderSettings = async () => {\n    showLoader(true);\n    try {\n      const result = await sendServerActionRequest(null, '/api/settings', 'GET', null, null, true);\n      if (result && result.status === 'success' && result.settings) {\n        renderSettings(result.settings);\n      } else {\n        showError(result?.message || 'Error loading settings.');\n      }\n    } catch (error) {\n      showError(`Client-side error: ${error.message}`);\n    } finally {\n      showLoader(false);\n    }\n  };\n\n  loadAndRenderSettings();\n}\n", "// frontend/src/server_settings.js\n/**\n * @fileoverview Frontend JavaScript for the server-specific settings management page.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nexport function initializeServerSettingsPage() {\n  const settingsFormContainer = document.getElementById('settings-form-container');\n  const settingsSidebar = document.getElementById('settings-sidebar');\n  const loader = document.getElementById('settings-loader');\n  const settingsFormSection = document.getElementById('settings-form-section');\n\n  if (!settingsFormSection || !settingsFormContainer || !settingsSidebar || !loader) {\n    console.error('server_settings.js: Critical elements not found.');\n    return;\n  }\n\n  const getServerNameFromPath = () => {\n    const pathParts = window.location.pathname.split('/');\n    // Expected URL: /servers/{server_name}/settings\n    const serverNameIndex = pathParts.indexOf('servers') + 1;\n    return pathParts.length > serverNameIndex ? pathParts[serverNameIndex] : null;\n  };\n\n  const serverName = getServerNameFromPath();\n  if (!serverName) {\n    showError('Could not determine server name from URL.');\n    return;\n  }\n\n  const showLoader = (isLoading) => {\n    loader.style.display = isLoading ? 'block' : 'none';\n    settingsFormSection.style.display = isLoading ? 'none' : 'block';\n    if (isLoading) {\n        settingsFormContainer.innerHTML = '';\n        settingsSidebar.innerHTML = '';\n    }\n  };\n\n  const showError = (message) => {\n    showLoader(false);\n    settingsFormSection.style.display = 'none';\n    showStatusMessage(message, 'error');\n  };\n\n  const renderSettings = (data) => {\n    settingsFormContainer.innerHTML = '';\n    settingsSidebar.innerHTML = '';\n    let totalFieldsRendered = 0;\n\n    // Define the order of categories\n    const categoryOrder = ['server_info', 'settings', 'custom'];\n\n    categoryOrder.forEach((categoryKey) => {\n        if (!data.hasOwnProperty(categoryKey) || typeof data[categoryKey] !== 'object' || data[categoryKey] === null) return;\n\n        const fieldset = document.createElement('fieldset');\n        fieldset.id = `category-${categoryKey}`;\n        const legend = document.createElement('legend');\n        legend.textContent = categoryKey.charAt(0).toUpperCase() + categoryKey.slice(1);\n        fieldset.appendChild(legend);\n\n        const link = document.createElement('a');\n        link.href = `#category-${categoryKey}`;\n        link.className = 'nav-link';\n        link.textContent = legend.textContent;\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            document.querySelectorAll('.sidebar-nav .nav-link').forEach(l => l.classList.remove('active'));\n            link.classList.add('active');\n            fieldset.scrollIntoView({ behavior: 'smooth' });\n        });\n        settingsSidebar.appendChild(link);\n\n        let categoryFieldsAdded = 0;\n        Object.keys(data[categoryKey])\n          .sort()\n          .forEach((settingKey) => {\n            const formGroup = createFormElement(\n              `${categoryKey}.${settingKey}`,\n              settingKey,\n              data[categoryKey][settingKey],\n            );\n            if (formGroup) {\n              fieldset.appendChild(formGroup);\n              categoryFieldsAdded++;\n            }\n          });\n\n        if (categoryFieldsAdded > 0) {\n          settingsFormContainer.appendChild(fieldset);\n          totalFieldsRendered += categoryFieldsAdded;\n        }\n      });\n\n\n    if (totalFieldsRendered === 0) showError('No configurable settings found for this server.');\n  };\n\n  const createFormElement = (fullKey, labelText, value) => {\n    const formGroup = document.createElement('div');\n    formGroup.className = 'form-group';\n    const label = document.createElement('label');\n    label.htmlFor = fullKey;\n    label.textContent = (labelText.charAt(0).toUpperCase() + labelText.slice(1)).replace(/_/g, ' ');\n    let inputElement;\n\n    if (typeof value === 'boolean') {\n      formGroup.classList.add('form-group-toggle-container');\n      inputElement = document.createElement('input');\n      inputElement.type = 'checkbox';\n      inputElement.checked = value;\n      inputElement.className = 'toggle-input';\n      const switchLabel = document.createElement('label');\n      switchLabel.htmlFor = fullKey;\n      switchLabel.className = 'toggle-switch';\n      formGroup.append(label, inputElement, switchLabel);\n    } else {\n      formGroup.appendChild(label);\n      inputElement = document.createElement('input');\n      inputElement.className = 'form-input';\n      if (Array.isArray(value)) {\n        inputElement.type = 'text';\n        inputElement.value = value.join(', ');\n        inputElement.placeholder = 'comma, separated, list';\n      } else {\n        inputElement.type = typeof value === 'number' ? 'number' : 'text';\n        inputElement.value = value;\n      }\n      formGroup.appendChild(inputElement);\n    }\n\n    inputElement.id = fullKey;\n    inputElement.name = fullKey;\n    inputElement.addEventListener('change', handleInputChange);\n    return formGroup;\n  };\n\n  async function handleInputChange(event) {\n    const input = event.target;\n    let value =\n      input.type === 'checkbox' ? input.checked : input.type === 'number' ? parseFloat(input.value) : input.value;\n    if (input.placeholder === 'comma, separated, list') {\n      value = value\n        .split(',')\n        .map((s) => s.trim())\n        .filter(Boolean);\n    }\n    await sendServerActionRequest(null, `/api/servers/${serverName}/settings`, 'POST', { key: input.name, value }, null);\n  }\n\n  const loadAndRenderSettings = async () => {\n    showLoader(true);\n    try {\n      const result = await sendServerActionRequest(null, `/api/servers/${serverName}/settings`, 'GET', null, null, true);\n      if (result && result.status === 'success' && result.settings) {\n        renderSettings(result.settings);\n      } else {\n        showError(result?.message || 'Error loading server settings.');\n      }\n    } catch (error) {\n      showError(`Client-side error: ${error.message}`);\n    } finally {\n      showLoader(false);\n    }\n  };\n\n  loadAndRenderSettings();\n}\n", "// frontend/src/monitor_usage.js\n/**\n * @fileoverview Frontend JavaScript for the server resource usage monitor page.\n */\n\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nexport function initializeMonitorUsagePage() {\n  const statusElement = document.getElementById('status-info');\n  if (!statusElement) {\n    console.error('Monitor page error: #status-info element not found.');\n    return;\n  }\n\n  const serverName = statusElement.dataset.serverName;\n  if (!serverName) {\n    statusElement.textContent = 'Configuration Error: Server name missing.';\n    showStatusMessage('Could not initialize monitoring: server name not found on page.', 'error');\n    return;\n  }\n\n  let statusIntervalId = null;\n\n  async function updateStatus() {\n    try {\n      const data = await sendServerActionRequest(serverName, 'process_info', 'GET', null, null, true);\n      if (data && data.status === 'success' && data.data?.process_info) {\n        const info = data.data.process_info;\n        statusElement.textContent = `\nPID          : ${info.pid ?? 'N/A'}\nCPU Usage    : ${info.cpu_percent != null ? info.cpu_percent.toFixed(1) + '%' : 'N/A'}\nMemory Usage : ${info.memory_mb != null ? info.memory_mb.toFixed(1) + ' MB' : 'N/A'}\nUptime       : ${info.uptime ?? 'N/A'}\n                `.trim();\n      } else if (data && data.status === 'error') {\n        statusElement.textContent = `Error: ${data.message || 'API error.'}`;\n      } else {\n        statusElement.textContent = 'Server Status: STOPPED or process info not found.';\n      }\n    } catch (error) {\n      statusElement.textContent = `Client-side error: ${error.message}`;\n      showStatusMessage(`Client-side error fetching status: ${error.message}`, 'error');\n      if (statusIntervalId) clearInterval(statusIntervalId);\n    }\n  }\n\n  updateStatus();\n  statusIntervalId = setInterval(updateStatus, 2000);\n\n  // Cleanup interval on page unload\n  window.addEventListener('beforeunload', () => {\n    if (statusIntervalId) {\n      clearInterval(statusIntervalId);\n    }\n  });\n\n  console.log(`Monitoring started for server: ${serverName}`);\n}\n", "// frontend/src/sidebar_nav.js\n/**\n * @fileoverview Handles client-side navigation within a single page using a sidebar.\n */\n\nexport function initializeSidebarNav() {\n  const navLinks = document.querySelectorAll('.sidebar-nav .nav-link');\n  const contentSections = document.querySelectorAll('.main-content .content-section');\n  const submenuLinks = document.querySelectorAll('.sidebar-nav .has-submenu');\n\n  if (navLinks.length === 0) {\n    console.warn('Sidebar navigation links not found.');\n    return;\n  }\n\n  function switchSection(event) {\n    event.preventDefault();\n    const clickedLink = event.currentTarget;\n    const targetId = clickedLink.dataset.target;\n    if (!targetId) return;\n\n    const targetSection = document.getElementById(targetId);\n    if (targetSection) {\n      navLinks.forEach((link) => link.classList.remove('active'));\n      contentSections.forEach((section) => section.classList.remove('active'));\n\n      clickedLink.classList.add('active');\n      targetSection.classList.add('active');\n\n      const parentSubmenu = clickedLink.closest('.submenu');\n      if (parentSubmenu) {\n        parentSubmenu.style.maxHeight = parentSubmenu.scrollHeight + 'px';\n        const parentLink = parentSubmenu.previousElementSibling;\n        if (parentLink && parentLink.classList.contains('has-submenu')) {\n          parentLink.classList.add('active');\n        }\n      }\n    }\n  }\n\n  function toggleSubmenu(event) {\n    event.preventDefault();\n    const clickedLink = event.currentTarget;\n    const submenu = clickedLink.nextElementSibling;\n    if (submenu && submenu.classList.contains('submenu')) {\n      submenu.style.maxHeight = submenu.style.maxHeight ? null : submenu.scrollHeight + 'px';\n    }\n  }\n\n  navLinks.forEach((link) => {\n    if (link.dataset.target) {\n      link.addEventListener('click', switchSection);\n    }\n  });\n\n  submenuLinks.forEach((link) => {\n    link.addEventListener('click', toggleSubmenu);\n  });\n\n  // Activate the first link if it's a section link\n  if (navLinks.length > 0 && navLinks[0].dataset.target) {\n    navLinks[0].click();\n  }\n\n  console.log('Sidebar navigation initialized.');\n}\n", "// frontend/src/query_param_handler.js\n/**\n * @fileoverview Handles reading URL query parameters and displaying status messages.\n */\n\nimport { showStatusMessage } from './utils.js';\n\nexport function handleQueryParameters() {\n  const urlParams = new URLSearchParams(window.location.search);\n  const message = urlParams.get('message');\n  const category = urlParams.get('category');\n\n  if (message) {\n    if (typeof showStatusMessage === 'function') {\n      showStatusMessage(message, category);\n    } else {\n      console.warn('showStatusMessage function not found. Cannot display message from URL.');\n    }\n    // Clean the URL\n    const newUrl = new URL(window.location.href);\n    newUrl.searchParams.delete('message');\n    newUrl.searchParams.delete('category');\n    window.history.replaceState({}, document.title, newUrl.toString());\n  }\n}\n", "// frontend/src/users.js\nimport { sendServerActionRequest } from './utils.js';\n\nfunction copyToClipboard(text) {\n  navigator.clipboard.writeText(text).then(\n    () => {\n      alert('Copied to clipboard');\n    },\n    (err) => {\n      alert('Could not copy text: ', err);\n    },\n  );\n}\n\nfunction generateToken() {\n  const form = document.getElementById('generate-token-form');\n  const formData = new FormData(form);\n  const data = Object.fromEntries(formData.entries());\n\n  sendServerActionRequest(null, '/register/generate-token', 'POST', data).then((response) => {\n    if (response && response.status === 'success') {\n      window.location.href = response.redirect_url;\n    }\n  });\n}\n\nfunction disableUser(userId) {\n  if (confirm('Are you sure you want to disable this user?')) {\n    sendServerActionRequest(null, `/users/${userId}/disable`, 'POST').then((response) => {\n      if (response && response.status === 'success') {\n        window.location.reload();\n      }\n    });\n  }\n}\n\nfunction enableUser(userId) {\n  if (confirm('Are you sure you want to enable this user?')) {\n    sendServerActionRequest(null, `/users/${userId}/enable`, 'POST').then((response) => {\n      if (response && response.status === 'success') {\n        window.location.reload();\n      }\n    });\n  }\n}\n\nfunction deleteUser(userId) {\n  if (confirm('Are you sure you want to delete this user?')) {\n    sendServerActionRequest(null, `/users/${userId}/delete`, 'POST').then((response) => {\n      if (response && response.status === 'success') {\n        window.location.reload();\n      }\n    });\n  }\n}\n\nfunction updateUserRole(userId) {\n  const role = document.getElementById(`role-${userId}`).value;\n  const data = { role: role };\n\n  sendServerActionRequest(null, `/users/${userId}/role`, 'POST', data).then((response) => {\n    if (response && response.status === 'success') {\n      window.location.reload();\n    }\n  });\n}\n\nexport function initializeUsersPage() {\n  document.getElementById('generate-token-btn')?.addEventListener('click', generateToken);\n\n  document.querySelectorAll('.copy-link-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      copyToClipboard(e.currentTarget.dataset.link);\n    });\n  });\n\n  document.querySelectorAll('.update-role-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      updateUserRole(e.currentTarget.dataset.userId);\n    });\n  });\n\n  document.querySelectorAll('.disable-user-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      disableUser(e.currentTarget.dataset.userId);\n    });\n  });\n\n  document.querySelectorAll('.enable-user-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      enableUser(e.currentTarget.dataset.userId);\n    });\n  });\n\n  document.querySelectorAll('.delete-user-btn').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      deleteUser(e.currentTarget.dataset.userId);\n    });\n  });\n}\n", "// frontend/src/register.js\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nfunction submitForm() {\n  const form = document.getElementById('register-form');\n  const username = document.getElementById('username').value;\n  const password = document.getElementById('password').value;\n  const confirm_password = document.getElementById('confirm_password').value;\n\n  if (!username || !password || !confirm_password) {\n    showStatusMessage('All fields are required.', 'error');\n    return;\n  }\n\n  if (password !== confirm_password) {\n    showStatusMessage('Passwords do not match.', 'error');\n    return;\n  }\n\n  const formData = new FormData(form);\n  const data = Object.fromEntries(formData.entries());\n\n  const token = document.getElementById('register-form').dataset.token;\n\n  sendServerActionRequest(null, `/register/${token}`, 'POST', data).then((response) => {\n    if (response && response.status === 'success') {\n      window.location.href = response.redirect_url;\n    }\n  });\n}\n\nexport function initializeRegisterPage() {\n  const registerForm = document.getElementById('register-form');\n  if (registerForm) {\n    registerForm.addEventListener('submit', (e) => {\n      e.preventDefault();\n      submitForm();\n    });\n  }\n}\n", "// frontend/src/setup.js\nimport { sendServerActionRequest, showStatusMessage } from './utils.js';\n\nfunction submitForm() {\n  const form = document.getElementById('setup-form');\n  const username = document.getElementById('username').value;\n  const password = document.getElementById('password').value;\n  const confirm_password = document.getElementById('confirm_password').value;\n\n  if (!username || !password || !confirm_password) {\n    showStatusMessage('All fields are required.', 'error');\n    return;\n  }\n\n  if (password !== confirm_password) {\n    showStatusMessage('Passwords do not match.', 'error');\n    return;\n  }\n\n  const formData = new FormData(form);\n  const data = Object.fromEntries(formData.entries());\n\n  sendServerActionRequest(null, '/setup/create-first-user', 'POST', data).then((response) => {\n    if (response && response.status === 'success') {\n      window.location.href = response.redirect_url;\n    }\n  });\n}\n\nexport function initializeSetupPage() {\n  const setupForm = document.getElementById('setup-form');\n  if (setupForm) {\n    setupForm.addEventListener('submit', (e) => {\n      e.preventDefault();\n      submitForm();\n    });\n  }\n}\n", "// frontend/src/main.js\nimport * as serverActions from './server_actions.js';\n\nimport { initializeDashboard } from './dashboard.js';\nimport { initializeAccountPage } from './account.js';\nimport { initializeAllowlistPage } from './allowlist.js';\nimport { initializeLoginPage } from './auth.js';\nimport * as backupRestore from './backup_restore.js';\nimport * as contentManagement from './content_management.js';\nimport * as installConfig from './install_config.js';\nimport { initializeManagePluginsPage } from './manage_plugins.js';\nimport { initializeManageSettingsPage } from './manage_settings.js';\nimport { initializeServerSettingsPage } from './server_settings.js';\nimport { initializeMonitorUsagePage } from './monitor_usage.js';\nimport { initializeSidebarNav } from './sidebar_nav.js';\nimport { handleQueryParameters } from './query_param_handler.js';\nimport { initializeUsersPage } from './users.js';\nimport { initializeRegisterPage } from './register.js';\nimport { initializeSetupPage } from './setup.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // General initializations\n  initializeSidebarNav();\n  handleQueryParameters();\n\n  // Page-specific initializations\n  if (document.getElementById('server-card-list')) {\n    initializeDashboard();\n  } else if (document.getElementById('change-password-form')) {\n    initializeAccountPage();\n  } else if (document.getElementById('current-allowlist-display')) {\n    initializeAllowlistPage();\n  } else if (document.getElementById('login-form')) {\n    initializeLoginPage();\n  } else if (document.getElementById('backup-restore-page')) {\n    backupRestore.initializeBackupRestorePage();\n  } else if (document.getElementById('content-management-page')) {\n    contentManagement.initializeContentManagementPage();\n  } else if (document.getElementById('install-config-page')) {\n    installConfig.initializeInstallConfigPage();\n  } else if (document.getElementById('plugin-list')) {\n    initializeManagePluginsPage();\n  } else if (document.getElementById('settings-form-container')) {\n    if (window.location.pathname.startsWith('/servers/')) {\n      initializeServerSettingsPage();\n    } else {\n      initializeManageSettingsPage();\n    }\n  } else if (document.getElementById('status-info')) {\n    initializeMonitorUsagePage();\n  } else if (document.getElementById('user-management-section')) {\n    initializeUsersPage();\n  } else if (document.getElementById('register-form')) {\n    initializeRegisterPage();\n  } else if (document.getElementById('setup-form')) {\n    initializeSetupPage();\n  }\n\n  console.log('main.js loaded and initialized');\n});\n"],
  "mappings": "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",
  "names": ["showStatusMessage", "message", "type", "functionName", "area", "messageId", "sendServerActionRequest", "serverName", "actionPath", "method", "body", "buttonElement", "suppressSuccessPopup", "apiUrl", "errorMsg", "fetchOptions", "jwtToken", "methodAllowsBody", "stringifyError", "responseData", "httpSuccess", "response", "contentType", "textResponse", "warnMsg", "successMsg", "appStatus", "appMessage", "errorMessage", "errorArea", "generalErrors", "field", "msg", "fieldErrorEl", "csrfErrorMsg", "error", "init_utils", "__esmMin", "getSelectedServer", "functionName", "serverSelect", "errorMsg", "showStatusMessage", "selectedServer", "warnMsg", "startServer", "buttonElement", "serverName", "actionPath", "method", "sendServerActionRequest", "stopServer", "restartServer", "promptCommand", "command", "trimmedCommand", "requestBody", "deleteServer", "trimmedServerName", "confirmationMessage", "triggerServerUpdate", "init_server_actions", "__esmMin", "init_utils", "initializeDashboard", "functionName", "POLLING_INTERVAL_MS", "serverSelect", "globalActionButtons", "serverDependentSections", "serverCardList", "noServersMessage", "showStatusMessage", "body", "updateActionStates", "selectedServerName", "hasSelection", "serverNameEncoded", "button", "section", "span", "actions", "action", "targetUrl", "createServerCardElement", "server", "card", "safeServerName", "status", "version", "updateServerDropdown", "servers", "previouslySelected", "noServerOption", "updateDashboard", "data", "sendServerActionRequest", "newServers", "newServerMap", "s", "existingCardElements", "existingServerNames", "serverName", "serverData", "error", "event", "e", "startServer", "stopServer", "restartServer", "promptCommand", "triggerServerUpdate", "deleteServer", "init_dashboard", "__esmMin", "init_utils", "init_server_actions", "loadUserProfile", "sendServerActionRequest", "response", "changePassword", "form", "currentPassword", "newPassword", "confirmNewPassword", "showStatusMessage", "updateProfile", "fullName", "email", "initializeAccountPage", "themeSelect", "themes", "themeName", "option", "currentTheme", "event", "newTheme", "themeStylesheet", "navLinks", "contentSections", "link", "targetId", "navLink", "section", "targetSection", "changePasswordForm", "profileForm", "init_account", "__esmMin", "init_utils", "initializeAllowlistPage", "functionName", "serverNameElement", "serverName", "showStatusMessage", "addAllowlistPlayers", "buttonElement", "textArea", "ignoreLimitCheckbox", "errorMsg", "playersToAdd", "name", "warnMsg", "ignoresPlayerLimit", "apiResponseData", "sendServerActionRequest", "message", "fetchAndUpdateAllowlistDisplay", "displayList", "players", "player", "li", "removeButton", "error", "removeAllowlistPlayer", "playerName", "addPlayersButton", "event", "target", "init_allowlist", "__esmMin", "init_utils", "initializeLoginPage", "loginForm", "event", "loginButton", "handleLoginAttempt", "buttonElement", "functionName", "usernameInput", "passwordInput", "showStatusMessage", "username", "password", "formData", "response", "responseData", "nextUrl", "errorMessage", "error", "errorMsg", "init_auth", "__esmMin", "init_utils", "triggerBackup", "buttonElement", "serverName", "backupType", "confirmationMessage", "showStatusMessage", "requestBody", "absoluteActionPath", "sendServerActionRequest", "triggerSpecificConfigBackup", "filename", "triggerRestore", "restoreType", "backupFilePath", "triggerRestoreAll", "handleSelectBackupType", "functionName", "responseData", "error", "initializeBackupRestorePage", "e", "button", "btn", "backupPath", "init_backup_restore", "__esmMin", "init_utils", "triggerWorldInstall", "buttonElement", "serverName", "worldFilePath", "confirmationMessage", "showStatusMessage", "requestBody", "apiUrl", "sendServerActionRequest", "triggerWorldExport", "absoluteActionPath", "result", "triggerWorldReset", "triggerAddonInstall", "addonFilePath", "initializeContentManagementPage", "e", "button", "btn", "addonPath", "worldPath", "init_content_management", "__esmMin", "init_utils", "_clearValidationErrors", "errorArea", "el", "_handleInstallSuccessNavigation", "apiResponseData", "nextUrl", "message", "showStatusMessage", "pollTaskStatus", "taskId", "successCallback", "intervalId", "response", "data", "error", "triggerInstallServer", "buttonElement", "serverNameInput", "serverVersionInput", "serverName", "serverVersion", "requestBody", "initialResponse", "sendServerActionRequest", "finalResponse", "saveProperties", "isNewInstall", "propertiesData", "loadPermissions", "loader", "tableBody", "configSection", "playerRowTemplate", "noPlayersTemplate", "player", "rowClone", "select", "noPlayersRow", "savePermissions", "permissions", "saveServiceSettings", "currentOs", "settings", "startAfter", "saveResponse", "startResponse", "initializeInstallConfigPage", "installConfigPage", "os", "e", "bannerContainer", "control", "input", "segment", "s", "hidden", "sync", "setInputValue", "id", "value", "setToggleState", "setSegmentedControlState", "hiddenInputId", "hiddenInput", "controlWrapper", "activeSegment", "populateForm", "properties", "propertyMap", "key", "prop", "loadProperties", "formContainer", "init_install_config", "__esmMin", "init_utils", "initializeManagePluginsPage", "functionName", "pluginList", "pluginItemTemplate", "noPluginsTemplate", "loadErrorTemplate", "pluginLoader", "reloadPluginsBtn", "bannerContainer", "handleReloadClick", "originalButtonText", "result", "sendServerActionRequest", "fetchAndRenderPlugins", "el", "data", "plugins", "a", "b", "pluginName", "pluginData", "itemClone", "toggleSwitch", "handlePluginToggle", "error", "showStatusMessage", "event", "isEnabled", "init_manage_plugins", "__esmMin", "init_utils", "initializeManageSettingsPage", "settingsFormContainer", "settingsSidebar", "reloadButton", "loader", "settingsFormSection", "bannerContainer", "showLoader", "isLoading", "showError", "message", "showStatusMessage", "renderSettings", "data", "totalFieldsRendered", "categoryKey", "fieldset", "legend", "link", "e", "l", "categoryFieldsAdded", "settingKey", "formGroup", "createFormElement", "fullKey", "labelText", "value", "label", "inputElement", "switchLabel", "handleInputChange", "event", "input", "s", "sendServerActionRequest", "result", "loadAndRenderSettings", "error", "init_manage_settings", "__esmMin", "init_utils", "initializeServerSettingsPage", "settingsFormContainer", "settingsSidebar", "loader", "settingsFormSection", "serverName", "pathParts", "serverNameIndex", "showError", "showLoader", "isLoading", "message", "showStatusMessage", "renderSettings", "data", "totalFieldsRendered", "categoryKey", "fieldset", "legend", "link", "e", "l", "categoryFieldsAdded", "settingKey", "formGroup", "createFormElement", "fullKey", "labelText", "value", "label", "inputElement", "switchLabel", "handleInputChange", "event", "input", "s", "sendServerActionRequest", "result", "error", "init_server_settings", "__esmMin", "init_utils", "initializeMonitorUsagePage", "statusElement", "serverName", "showStatusMessage", "statusIntervalId", "updateStatus", "data", "sendServerActionRequest", "info", "error", "init_monitor_usage", "__esmMin", "init_utils", "initializeSidebarNav", "navLinks", "contentSections", "submenuLinks", "switchSection", "event", "clickedLink", "targetId", "targetSection", "link", "section", "parentSubmenu", "parentLink", "toggleSubmenu", "submenu", "init_sidebar_nav", "__esmMin", "handleQueryParameters", "urlParams", "message", "category", "showStatusMessage", "newUrl", "init_query_param_handler", "__esmMin", "init_utils", "copyToClipboard", "text", "err", "generateToken", "form", "formData", "data", "sendServerActionRequest", "response", "disableUser", "userId", "enableUser", "deleteUser", "updateUserRole", "initializeUsersPage", "button", "init_users", "__esmMin", "init_utils", "submitForm", "form", "username", "password", "confirm_password", "showStatusMessage", "formData", "data", "token", "sendServerActionRequest", "response", "initializeRegisterPage", "registerForm", "init_register", "__esmMin", "init_utils", "submitForm", "form", "username", "password", "confirm_password", "showStatusMessage", "formData", "data", "sendServerActionRequest", "response", "initializeSetupPage", "setupForm", "init_setup", "__esmMin", "init_utils", "require_main", "__commonJSMin", "init_server_actions", "init_dashboard", "init_account", "init_allowlist", "init_auth", "init_backup_restore", "init_content_management", "init_install_config", "init_manage_plugins", "init_manage_settings", "init_server_settings", "init_monitor_usage", "init_sidebar_nav", "init_query_param_handler", "init_users", "init_register", "init_setup", "initializeSidebarNav", "handleQueryParameters", "initializeDashboard", "initializeAccountPage", "initializeAllowlistPage", "initializeLoginPage", "initializeBackupRestorePage", "initializeContentManagementPage", "initializeInstallConfigPage", "initializeManagePluginsPage", "initializeServerSettingsPage", "initializeManageSettingsPage", "initializeMonitorUsagePage", "initializeUsersPage", "initializeRegisterPage", "initializeSetupPage"]
}
