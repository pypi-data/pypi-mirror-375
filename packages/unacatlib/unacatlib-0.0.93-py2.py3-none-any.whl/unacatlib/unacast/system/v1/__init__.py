# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: unacast/system/v1/test_service.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    Optional,
)

import betterproto
import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase

from ...v2 import catalog as __v2_catalog__


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


class TestStatus(betterproto.Enum):
    UNKNOWN = 0
    SUCCESS = 1
    FAILURE = 2


@dataclass(eq=False, repr=False)
class TestResponse(betterproto.Message):
    status: "TestStatus" = betterproto.enum_field(1)
    message: str = betterproto.string_field(2)
    action_url: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class TestResult(betterproto.Message):
    status: "TestStatus" = betterproto.enum_field(1)
    message: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ValidateDataDeliveryTestRequest(betterproto.Message):
    create_data_delivery_request: "__v2_catalog__.CreateDataDeliveryRequest" = (
        betterproto.message_field(1)
    )


class TestServiceStub(betterproto.ServiceStub):
    async def data_delivery_test(
        self,
        betterproto_lib_google_protobuf_empty: "betterproto_lib_google_protobuf.Empty",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "TestResponse":
        return await self._unary_unary(
            "/unacast.system.v1.TestService/DataDeliveryTest",
            betterproto_lib_google_protobuf_empty,
            TestResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def validate_data_delivery_test(
        self,
        validate_data_delivery_test_request: "ValidateDataDeliveryTestRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "TestResult":
        return await self._unary_unary(
            "/unacast.system.v1.TestService/ValidateDataDeliveryTest",
            validate_data_delivery_test_request,
            TestResult,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def delete_delivered_big_query_table(
        self,
        betterproto_lib_google_protobuf_empty: "betterproto_lib_google_protobuf.Empty",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "betterproto_lib_google_protobuf.Empty":
        return await self._unary_unary(
            "/unacast.system.v1.TestService/DeleteDeliveredBigQueryTable",
            betterproto_lib_google_protobuf_empty,
            betterproto_lib_google_protobuf.Empty,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class TestServiceBase(ServiceBase):

    async def data_delivery_test(
        self,
        betterproto_lib_google_protobuf_empty: "betterproto_lib_google_protobuf.Empty",
    ) -> "TestResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def validate_data_delivery_test(
        self, validate_data_delivery_test_request: "ValidateDataDeliveryTestRequest"
    ) -> "TestResult":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def delete_delivered_big_query_table(
        self,
        betterproto_lib_google_protobuf_empty: "betterproto_lib_google_protobuf.Empty",
    ) -> "betterproto_lib_google_protobuf.Empty":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_data_delivery_test(
        self,
        stream: "grpclib.server.Stream[betterproto_lib_google_protobuf.Empty, TestResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.data_delivery_test(request)
        await stream.send_message(response)

    async def __rpc_validate_data_delivery_test(
        self,
        stream: "grpclib.server.Stream[ValidateDataDeliveryTestRequest, TestResult]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.validate_data_delivery_test(request)
        await stream.send_message(response)

    async def __rpc_delete_delivered_big_query_table(
        self,
        stream: "grpclib.server.Stream[betterproto_lib_google_protobuf.Empty, betterproto_lib_google_protobuf.Empty]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.delete_delivered_big_query_table(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/unacast.system.v1.TestService/DataDeliveryTest": grpclib.const.Handler(
                self.__rpc_data_delivery_test,
                grpclib.const.Cardinality.UNARY_UNARY,
                betterproto_lib_google_protobuf.Empty,
                TestResponse,
            ),
            "/unacast.system.v1.TestService/ValidateDataDeliveryTest": grpclib.const.Handler(
                self.__rpc_validate_data_delivery_test,
                grpclib.const.Cardinality.UNARY_UNARY,
                ValidateDataDeliveryTestRequest,
                TestResult,
            ),
            "/unacast.system.v1.TestService/DeleteDeliveredBigQueryTable": grpclib.const.Handler(
                self.__rpc_delete_delivered_big_query_table,
                grpclib.const.Cardinality.UNARY_UNARY,
                betterproto_lib_google_protobuf.Empty,
                betterproto_lib_google_protobuf.Empty,
            ),
        }
