repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: "f8a3f8c471fb698229face5ed7640a64900b781e"  # v0.4.4
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "9db9854e3041219b1eb619872a2dfaf58adfb20b"  # v1.9.0
    hooks:
      - id: mypy
        additional_dependencies: [types-python-dateutil]

  - repo: https://github.com/PyCQA/bandit
    rev: "f3a18ab30bc444e62d02505419ab7059cead0853"  # 1.7.6
    hooks:
      - id: bandit
        args: ["-f", "json"]
        exclude: ^tests/
        # Note: Removed pass_filenames: false to only scan changed files
        # This improves commit speed while still maintaining security checks
        # Full tree scan still happens in CI/CD via 'bandit -r mcp_zammad/'
        # Output streams to stdout for pre-commit to capture

  - repo: https://github.com/semgrep/semgrep
    rev: "5abdc505a8fe8e663e50beb10b92edb9d990ffa5"  # v1.35.0
    hooks:
      - id: semgrep
        args: ["--config=auto", "--error", "--no-rewrite-rule-ids"]

  - repo: local
    hooks:
      - id: pip-audit
        name: pip-audit
        entry: uv
        language: system
        args: ["run", "pip-audit", "--format=json"]
        pass_filenames: false
        # Output streams to stdout for pre-commit to capture

      - id: no-plaintext-fence
        name: Block plaintext code fences
        entry: |
          bash -c 'found=0; for file in "$@"; do inside_fence=0; while IFS= read -r line; do if [[ "$line" =~ ^[[:space:]]*\`\`\` ]]; then inside_fence=$((1-inside_fence)); fi; if [[ $inside_fence -eq 0 && "$line" =~ \`\`\`[Pp][Ll][Aa][Ii][Nn][Tt][Ee][Xx][Tt][[:space:]]*$ ]]; then echo "❌ $file: Use \`\`\`text instead of \`\`\`plaintext"; found=1; fi; done < "$file"; done; exit $found' --
        language: system
        files: '\.md$'
        pass_filenames: true

      - id: markdown-consistent-numbering
        name: Enforce '1.' for markdown lists
        entry: |
          bash -c 'found=0; for file in "$@"; do inside_fence=0; line_num=0; while IFS= read -r line; do line_num=$((line_num+1)); if [[ "$line" =~ ^[[:space:]]*\`\`\` ]]; then inside_fence=$((1-inside_fence)); fi; if [[ $inside_fence -eq 0 && "$line" =~ ^[[:space:]]*([2-9]|[0-9]{2,})\. ]]; then echo "❌ $file:$line_num Use '\''1.'\'' for all numbered list items to reduce diff churn"; found=1; fi; done < "$file"; done; exit $found' --
        language: system
        files: '\.md$'
        pass_filenames: true