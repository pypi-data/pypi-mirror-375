# coding: utf-8

"""
    The Selling Partner API for Finances

    The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.

    The version of the OpenAPI document: 2024-06-19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class ItemRelatedIdentifier(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'item_related_identifier_name': 'str',
        'item_related_identifier_value': 'str',
    }

    attribute_map = {
        'item_related_identifier_name': 'itemRelatedIdentifierName',
        'item_related_identifier_value': 'itemRelatedIdentifierValue',
    }

    def __init__(self, item_related_identifier_name=None, item_related_identifier_value=None, _configuration=None):  # noqa: E501
        """ItemRelatedIdentifier - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._item_related_identifier_name = None
        self._item_related_identifier_value = None
        self.discriminator = None

        if item_related_identifier_name is not None:
            self.item_related_identifier_name = item_related_identifier_name
        if item_related_identifier_value is not None:
            self.item_related_identifier_value = item_related_identifier_value

    @property
    def item_related_identifier_name(self):
        """Gets the item_related_identifier_name of this ItemRelatedIdentifier.  # noqa: E501

        Enumerated set of related item identifier names for the item.  # noqa: E501

        :return: The item_related_identifier_name of this ItemRelatedIdentifier.  # noqa: E501
        :rtype: str
        """
        return self._item_related_identifier_name

    @item_related_identifier_name.setter
    def item_related_identifier_name(self, item_related_identifier_name):
        """Sets the item_related_identifier_name of this ItemRelatedIdentifier.

        Enumerated set of related item identifier names for the item.  # noqa: E501

        :param item_related_identifier_name: The item_related_identifier_name of this ItemRelatedIdentifier.  # noqa: E501
        :type: str
        """
        allowed_values = ["ORDER_ADJUSTMENT_ITEM_ID", "COUPON_ID", "REMOVAL_SHIPMENT_ITEM_ID", "TRANSACTION_ID"]  # noqa: E501
        if (self._configuration.client_side_validation and
                item_related_identifier_name not in allowed_values):
            raise ValueError(
                "Invalid value for `item_related_identifier_name` ({0}), must be one of {1}"  # noqa: E501
                .format(item_related_identifier_name, allowed_values)
            )

        self._item_related_identifier_name = item_related_identifier_name

    @property
    def item_related_identifier_value(self):
        """Gets the item_related_identifier_value of this ItemRelatedIdentifier.  # noqa: E501

        Corresponding value of ItemRelatedIdentifierName  # noqa: E501

        :return: The item_related_identifier_value of this ItemRelatedIdentifier.  # noqa: E501
        :rtype: str
        """
        return self._item_related_identifier_value

    @item_related_identifier_value.setter
    def item_related_identifier_value(self, item_related_identifier_value):
        """Sets the item_related_identifier_value of this ItemRelatedIdentifier.

        Corresponding value of ItemRelatedIdentifierName  # noqa: E501

        :param item_related_identifier_value: The item_related_identifier_value of this ItemRelatedIdentifier.  # noqa: E501
        :type: str
        """

        self._item_related_identifier_value = item_related_identifier_value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ItemRelatedIdentifier, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ItemRelatedIdentifier):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ItemRelatedIdentifier):
            return True

        return self.to_dict() != other.to_dict()
