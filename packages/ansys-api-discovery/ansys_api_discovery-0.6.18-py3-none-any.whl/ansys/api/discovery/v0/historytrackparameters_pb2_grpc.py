# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.dbu.v0 import dbumodels_pb2 as ansys_dot_api_dot_dbu_dot_v0_dot_dbumodels__pb2
from ansys.api.discovery.v0 import discoverymodels_pb2 as ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2
from ansys.api.discovery.v0 import historytrackparameters_pb2 as ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class HistoryTrackParametersStub(object):
    """History track parameters servicer.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/Get',
                request_serializer=ansys_dot_api_dot_dbu_dot_v0_dot_dbumodels__pb2.EntityIdentifier.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.HistoryTrackParameter.FromString,
                )
        self.GetAll = channel.unary_unary(
                '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/GetAll',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.GetAllResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/Update',
                request_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.UpdateRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.HistoryTrackParameter.FromString,
                )
        self.Replay = channel.unary_unary(
                '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/Replay',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.ReplayResponse.FromString,
                )
        self.GetRecordingStatus = channel.unary_unary(
                '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/GetRecordingStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.GetRecordingStatusResponse.FromString,
                )
        self.SetRecordingStatus = channel.unary_unary(
                '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/SetRecordingStatus',
                request_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.SetRecordingStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class HistoryTrackParametersServicer(object):
    """History track parameters servicer.

    """

    def Get(self, request, context):
        """Gets an history track parameter  .
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Lists all history track parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Upates a history track parameter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Replay(self, request, context):
        """Replays the history block parameters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecordingStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordingStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HistoryTrackParametersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=ansys_dot_api_dot_dbu_dot_v0_dot_dbumodels__pb2.EntityIdentifier.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.HistoryTrackParameter.SerializeToString,
            ),
            'GetAll': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.GetAllResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.UpdateRequest.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.HistoryTrackParameter.SerializeToString,
            ),
            'Replay': grpc.unary_unary_rpc_method_handler(
                    servicer.Replay,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.ReplayResponse.SerializeToString,
            ),
            'GetRecordingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecordingStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.GetRecordingStatusResponse.SerializeToString,
            ),
            'SetRecordingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordingStatus,
                    request_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.SetRecordingStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HistoryTrackParameters(object):
    """History track parameters servicer.

    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/Get',
            ansys_dot_api_dot_dbu_dot_v0_dot_dbumodels__pb2.EntityIdentifier.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.HistoryTrackParameter.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/GetAll',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.GetAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/Update',
            ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.UpdateRequest.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.HistoryTrackParameter.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Replay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/Replay',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.ReplayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecordingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/GetRecordingStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.GetRecordingStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.historytrackparameters.HistoryTrackParameters/SetRecordingStatus',
            ansys_dot_api_dot_discovery_dot_v0_dot_historytrackparameters__pb2.SetRecordingStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
