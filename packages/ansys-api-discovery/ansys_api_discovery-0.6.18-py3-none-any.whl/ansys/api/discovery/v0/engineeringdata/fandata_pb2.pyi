"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.dbu.v0.dbumodels_pb2
import ansys.api.discovery.v0.discoverymodels_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _FanSpecification:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _FanSpecificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FanSpecification.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    VOLUMEFLOWRATE: FanSpecification.ValueType = ...  # 0
    CONSTANTPRESSURERISE: FanSpecification.ValueType = ...  # 1
    VELOCITY: FanSpecification.ValueType = ...  # 2
class FanSpecification(_FanSpecification, metaclass=_FanSpecificationEnumTypeWrapper):
    pass

VOLUMEFLOWRATE: FanSpecification.ValueType = ...  # 0
CONSTANTPRESSURERISE: FanSpecification.ValueType = ...  # 1
VELOCITY: FanSpecification.ValueType = ...  # 2
global___FanSpecification = FanSpecification


class FanCreationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FAN_DATA_FIELD_NUMBER: builtins.int
    @property
    def fan_data(self) -> global___FanDataProperties: ...
    def __init__(self,
        *,
        fan_data : typing.Optional[global___FanDataProperties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fan_data",b"fan_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fan_data",b"fan_data"]) -> None: ...
global___FanCreationRequest = FanCreationRequest

class FanCreationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_RESPONSE_FIELD_NUMBER: builtins.int
    ENGINEERING_DATA_FIELD_NUMBER: builtins.int
    @property
    def data_response(self) -> ansys.api.discovery.v0.discoverymodels_pb2.CreationResponse: ...
    @property
    def engineering_data(self) -> global___FanDataDefinition: ...
    def __init__(self,
        *,
        data_response : typing.Optional[ansys.api.discovery.v0.discoverymodels_pb2.CreationResponse] = ...,
        engineering_data : typing.Optional[global___FanDataDefinition] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_response",b"data_response","engineering_data",b"engineering_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_response",b"data_response","engineering_data",b"engineering_data"]) -> None: ...
global___FanCreationResponse = FanCreationResponse

class FanDataProperties(google.protobuf.message.Message):
    """FanData condition definitions"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_ID_FIELD_NUMBER: builtins.int
    FAN_NAME_FIELD_NUMBER: builtins.int
    FAN_SPECIFICATION_FIELD_NUMBER: builtins.int
    CONSTANT_PRESSURE_RISE_FIELD_NUMBER: builtins.int
    VOLUME_FLOW_RATE_VS_PRESSURE_TABLE_FIELD_NUMBER: builtins.int
    VELOCITY_VS_PRESSURE_TABLE_FIELD_NUMBER: builtins.int
    MANUFACTURER_DATA_FIELD_NUMBER: builtins.int
    @property
    def data_id(self) -> ansys.api.dbu.v0.dbumodels_pb2.PhysicsEntityIdentifier: ...
    fan_name: typing.Text = ...
    fan_specification: global___FanSpecification.ValueType = ...
    @property
    def constant_pressure_rise(self) -> ansys.api.discovery.v0.discoverymodels_pb2.Quantity: ...
    @property
    def volume_flow_rate_vs_pressure_table(self) -> ansys.api.discovery.v0.discoverymodels_pb2.QuantityPairTable: ...
    @property
    def velocity_vs_pressure_table(self) -> ansys.api.discovery.v0.discoverymodels_pb2.QuantityPairTable: ...
    @property
    def manufacturer_data(self) -> global___FanManufacturerData: ...
    def __init__(self,
        *,
        data_id : typing.Optional[ansys.api.dbu.v0.dbumodels_pb2.PhysicsEntityIdentifier] = ...,
        fan_name : typing.Text = ...,
        fan_specification : global___FanSpecification.ValueType = ...,
        constant_pressure_rise : typing.Optional[ansys.api.discovery.v0.discoverymodels_pb2.Quantity] = ...,
        volume_flow_rate_vs_pressure_table : typing.Optional[ansys.api.discovery.v0.discoverymodels_pb2.QuantityPairTable] = ...,
        velocity_vs_pressure_table : typing.Optional[ansys.api.discovery.v0.discoverymodels_pb2.QuantityPairTable] = ...,
        manufacturer_data : typing.Optional[global___FanManufacturerData] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["constant_pressure_rise",b"constant_pressure_rise","data_id",b"data_id","manufacturer_data",b"manufacturer_data","velocity_vs_pressure_table",b"velocity_vs_pressure_table","volume_flow_rate_vs_pressure_table",b"volume_flow_rate_vs_pressure_table"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["constant_pressure_rise",b"constant_pressure_rise","data_id",b"data_id","fan_name",b"fan_name","fan_specification",b"fan_specification","manufacturer_data",b"manufacturer_data","velocity_vs_pressure_table",b"velocity_vs_pressure_table","volume_flow_rate_vs_pressure_table",b"volume_flow_rate_vs_pressure_table"]) -> None: ...
global___FanDataProperties = FanDataProperties

class FanManufacturerData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANUFACTURER_FIELD_NUMBER: builtins.int
    MODEL_NUMBER_FIELD_NUMBER: builtins.int
    OUTER_RADIUS_FIELD_NUMBER: builtins.int
    INNER_RADIUS_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    DISCLAIMER_FIELD_NUMBER: builtins.int
    IS_USER_DEFINED_FIELD_NUMBER: builtins.int
    manufacturer: typing.Text = ...
    model_number: typing.Text = ...
    @property
    def outer_radius(self) -> ansys.api.discovery.v0.discoverymodels_pb2.Quantity: ...
    @property
    def inner_radius(self) -> ansys.api.discovery.v0.discoverymodels_pb2.Quantity: ...
    notes: typing.Text = ...
    disclaimer: typing.Text = ...
    is_user_defined: builtins.bool = ...
    def __init__(self,
        *,
        manufacturer : typing.Text = ...,
        model_number : typing.Text = ...,
        outer_radius : typing.Optional[ansys.api.discovery.v0.discoverymodels_pb2.Quantity] = ...,
        inner_radius : typing.Optional[ansys.api.discovery.v0.discoverymodels_pb2.Quantity] = ...,
        notes : typing.Text = ...,
        disclaimer : typing.Text = ...,
        is_user_defined : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["inner_radius",b"inner_radius","outer_radius",b"outer_radius"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["disclaimer",b"disclaimer","inner_radius",b"inner_radius","is_user_defined",b"is_user_defined","manufacturer",b"manufacturer","model_number",b"model_number","notes",b"notes","outer_radius",b"outer_radius"]) -> None: ...
global___FanManufacturerData = FanManufacturerData

class FanDataDefinition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FAN_DATA_FIELD_NUMBER: builtins.int
    @property
    def fan_data(self) -> global___FanDataProperties: ...
    def __init__(self,
        *,
        fan_data : typing.Optional[global___FanDataProperties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fan_data",b"fan_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fan_data",b"fan_data"]) -> None: ...
global___FanDataDefinition = FanDataDefinition
