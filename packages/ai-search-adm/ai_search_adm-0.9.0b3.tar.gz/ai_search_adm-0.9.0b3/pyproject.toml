[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-search-adm"
dynamic = ["version"]
description = "Administration tool for Azure AI Search indexes"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = ["azure", "search", "cli", "administration"]
authors = [
  { name = "domibies" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators", 
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
]
dependencies = [
  "azure-search-documents>=11.4.0",
  "azure-identity>=1.15.0",
  "click>=8.0.0",
  "rich>=13.0.0",
  "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-cov>=4.0.0",
  "black>=25.1.0",
  "ruff>=0.1.0",
  "mypy>=1.0.0",
]

[project.urls]
Documentation = "https://github.com/domibies/ai-search-adm#readme"
Issues = "https://github.com/domibies/ai-search-adm/issues"
Source = "https://github.com/domibies/ai-search-adm"
Homepage = "https://github.com/domibies/ai-search-adm"

[project.scripts]
ai-search-adm = "ai_search_adm.cli:app"

[tool.hatch.version]
path = "src/ai_search_adm/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.11", "3.12", "3.13"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ai_search_adm tests}"

[tool.coverage.run]
source_pkgs = ["ai_search_adm", "tests"]
branch = true
parallel = true
omit = [
  "src/ai_search_adm/__about__.py",
]

[tool.coverage.paths]
ai_search_adm = ["src/ai_search_adm", "*/ai-search-adm/src/ai_search_adm"]
tests = ["tests", "*/ai-search-adm/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
target-version = ["py311", "py312", "py313"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  "FBT001",
  "FBT002",
  "FBT003",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "PLR2004",  # Magic value used in comparison
  "C901",     # Too complex
  "S110",     # try-except-pass (intentional for optional etag attribute)
]
unfixable = [
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["ai_search_adm"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.17.1",
    "pytest>=8.4.2",
    "ruff>=0.12.12",
]
