;####################################################
; DO NOT MODIFY: File created from src/PLC19_M6Bend_CS.psub
;####################################################

;################################################
;; \file
;; For a two axis mirror bender mechanism, define
;; coordinate system axes for ellipticity and curvature paramters
;; without doing any sort of calculation to physical units.
;; Used on J08 M6.
;;
;; Author: Andrew Wilson
;;
;; Defined axes:
;; - X (pmac addr 7) - Curvature in EGUs = average of motor positions
;; - Y (pmac addr 8) - Ellipticity in EGUs = difference between motor positions
;;
;; Macros
;; - COORD = 4  CS number, e.g. 2
;; - PLC = 19  PLC number, should be CS number+15, e.g. 17
;; - J1 = 7  Axisnum for bending actuator 1
;; - J2 = 8  Axisnum for bending actuator 2
;;
;################################################

CLOSE

;################################################
;; \file
;; For a two axis mirror bender mechanism, define
;; coordinate system axes for ellipticity and curvature paramters
;; without doing any sort of calculation to physical units.
;; Used on J08 M6.
;;
;; Author: Andrew Wilson
;;
;; Defined axes:
;; - X (pmac addr 7) - Curvature in EGUs = average of motor positions
;; - Y (pmac addr 8) - Ellipticity in EGUs = difference between motor positions
;;
;; Macros
;; - COORD = 4  CS number, e.g. 2
;; - PLC = 19  PLC number, should be CS number+15, e.g. 17
;; - J1 = 7  Axisnum for bending actuator 1
;; - J2 = 8  Axisnum for bending actuator 2
;;
;################################################

;
; Change to CS4
&4

; These are set by motor_in_cs.template
#define J1MOVE P(4700+7)
#define J1MRES P(4800+7)
#define J1OFF  P(4900+7)
#define J2MOVE P(4700+8)
#define J2MRES P(4800+8)
#define J2OFF  P(4900+8)

; Set relevant axes to use kinematics
#7->I
#8->I

; Calculate ellipticity and curvature from jack positions
#define J1POS (J1MRES*P7+J1OFF)
#define J2POS (J2MRES*P8+J2OFF)
#define SETERROR M(100*4+5082)=1
#define CURVE Q7
#define ELLIP Q8
OPEN FORWARD
CLEAR
    CURVE=(J1POS+J2POS)/2
    ELLIP=J1POS-J2POS
CLOSE

; work out the actuator positions from the ellipticity and curvature
#define BEND1POS Q228
#define BEND2POS Q229
OPEN INVERSE
CLEAR
    ; calc in EGUs
    BEND1POS=CURVE+ELLIP/2
    BEND2POS=CURVE-ELLIP/2
    ; then in cts
    P7=(BEND1POS-J1OFF)/J1MRES
    P8=(BEND2POS-J2OFF)/J2MRES
CLOSE

; A PLC(cs+15) needs to be made to do position reporting
; Readbacks should be in &{axisnum}Q81..89
; As forward kinematic, but with Px = mx62/(Ix08*32)
#define J1POS (J1MRES*m762/(I708*32)+J1OFF)
#define J2POS (J2MRES*m862/(I808*32)+J2OFF)
#define CURVERBV Q87
#define ELLIPRBV Q88
OPEN PLC19
CLEAR
    ADDRESS&4
    ; This is the radius. Has singularity (Inf) at J1POS = -INTERCEPT/SLOPE
    CURVERBV=(J1POS+J2POS)/2
    ELLIPRBV=J1POS-J2POS 
   
    ; If actuator motor record did the last move, set demands = readbacks
    ; This is not really needed as there is only one axis, but we'll put it
    ; in just in case
    if (J1MOVE = 1)
    or (J2MOVE = 1)
        J1MOVE = 0
        J2MOVE = 0
        Q77 = Q87
        Q78 = Q88
    endif
CLOSE
ENABLE PLC19
