"""
# Результат предобработки.
"""
from typing import List, Dict, Optional

from pydantic import BaseModel, Field


class Message(BaseModel):
    """
    # Описание модели Message.
    """

    original_text: str
    """
    Исходное сообщение пользователя: распознанный голос или введенный текст.
    В случае распознанного голоса предоставляется текст запроса без нормализации числительных и другого.
    Таким образом, все числа, например, номера телефонов, будут представлены словами.

    Пример: *"хочу заказать пиццу на девять вечера за пятьсот рублей".*
    """
    normalized_text: Optional[str] = Field(default=None)
    """
    Нормализованный текст, который ввел пользователь.
    Можно использовать для снижения многообразия запросов, например, для аналитики.

    Пример: *хотеть заказать пицца на TIME_TIME_TOKEN за MONEY_TOKEN .*
    """
    entities: Optional[Dict] = Field(default=None)
    """
    Извлеченные из запроса сущности.

    [Подробнее тут.](https://developers.sber.ru/docs/ru/salute/brain/entities/ner)
    """
    asr_normalized_message: Optional[str] = Field(default=None)
    """
    Отображаемый на экране текст запроса / нормализованный на этапе ASR запрос.

    Пример: *"Хочу заказать пиццу на 9 вечера за 500 ₽".*
    """
    tokenized_elements_list: Optional[List[Dict]] = Field(default=None)
    """
    Список токенов в запросе пользователя.
    Содержит грамматический и синтаксический разбор,
    а также привязку к сущностям и их нормализованным значениям для каждого токена.
    """
