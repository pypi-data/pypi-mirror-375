[project]
name = "agex"
version = "0.2.0"
description = "Library-friendly agents that work directly with your existing Python codebase."
readme = "README.md"
license = "MIT"
authors = [
    {name = "ashenfad"},
]
keywords = ["agents", "ai", "llm", "python", "runtime", "sandbox"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"

dependencies = [
    "tiktoken",
    "xxhash", 
    "diskcache",
    "pydantic",
    "pygments",
]

[project.urls]
Homepage = "https://ashenfad.github.io/agex/"
Documentation = "https://ashenfad.github.io/agex/"
Repository = "https://github.com/ashenfad/agex"
Issues = "https://github.com/ashenfad/agex/issues"

[project.optional-dependencies]
dev = [
    "ruff",
    "pre-commit",
    "pytest",
]
test = [
    "pytest",
    "anyio",
    "numpy",
    "pandas",
    "anthropic",
    "google-generativeai",
    "openai",
    "matplotlib"
]
examples = [
    "plotly[express]",
    "kaleido",  # for exporting plotly figures
    "numpy",
    "nbformat",
    "pandas",
    "osmnx>=2.0.0",
    "folium",
]
# LLM provider dependencies
openai = [
    "openai",
]
anthropic = [
    "anthropic",
]
gemini = [
    "google-generativeai",
]
# Convenience group for all providers
all-providers = [
    "agex[openai]",
    "agex[anthropic]",
    "agex[gemini]",
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]
ignore = ["E731"]

[tool.pytest.ini_options]
pythonpath = [
  "."
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = {find = {where = ["./"], exclude = ["tests*", "examples*", "benchmarks*", "build*", "docs*"]}}  # Discover packages, exclude tests/examples

[tool.setuptools.package-data]
agex = ["py.typed"]
