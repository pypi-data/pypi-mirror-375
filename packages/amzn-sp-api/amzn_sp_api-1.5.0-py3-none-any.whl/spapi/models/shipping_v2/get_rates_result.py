# coding: utf-8

"""
    Amazon Shipping API

    The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.

    The version of the OpenAPI document: v2
    Contact: swa-api-core@amazon.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class GetRatesResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'request_token': 'str',
        'rates': 'List[Rate]',
        'ineligible_rates': 'List[IneligibleRate]',
    }

    attribute_map = {
        'request_token': 'requestToken',
        'rates': 'rates',
        'ineligible_rates': 'ineligibleRates',
    }

    def __init__(self, request_token=None, rates=None, ineligible_rates=None, _configuration=None):  # noqa: E501
        """GetRatesResult - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._request_token = None
        self._rates = None
        self._ineligible_rates = None
        self.discriminator = None

        self.request_token = request_token
        self.rates = rates
        if ineligible_rates is not None:
            self.ineligible_rates = ineligible_rates

    @property
    def request_token(self):
        """Gets the request_token of this GetRatesResult.  # noqa: E501

        A unique token generated to identify a getRates operation.  # noqa: E501

        :return: The request_token of this GetRatesResult.  # noqa: E501
        :rtype: str
        """
        return self._request_token

    @request_token.setter
    def request_token(self, request_token):
        """Sets the request_token of this GetRatesResult.

        A unique token generated to identify a getRates operation.  # noqa: E501

        :param request_token: The request_token of this GetRatesResult.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and request_token is None:
            raise ValueError("Invalid value for `request_token`, must not be `None`")  # noqa: E501

        self._request_token = request_token

    @property
    def rates(self):
        """Gets the rates of this GetRatesResult.  # noqa: E501

        A list of eligible shipping service offerings.  # noqa: E501

        :return: The rates of this GetRatesResult.  # noqa: E501
        :rtype: List[Rate]
        """
        return self._rates

    @rates.setter
    def rates(self, rates):
        """Sets the rates of this GetRatesResult.

        A list of eligible shipping service offerings.  # noqa: E501

        :param rates: The rates of this GetRatesResult.  # noqa: E501
        :type: List[Rate]
        """
        if self._configuration.client_side_validation and rates is None:
            raise ValueError("Invalid value for `rates`, must not be `None`")  # noqa: E501

        self._rates = rates

    @property
    def ineligible_rates(self):
        """Gets the ineligible_rates of this GetRatesResult.  # noqa: E501

        A list of ineligible shipping service offerings.  # noqa: E501

        :return: The ineligible_rates of this GetRatesResult.  # noqa: E501
        :rtype: List[IneligibleRate]
        """
        return self._ineligible_rates

    @ineligible_rates.setter
    def ineligible_rates(self, ineligible_rates):
        """Sets the ineligible_rates of this GetRatesResult.

        A list of ineligible shipping service offerings.  # noqa: E501

        :param ineligible_rates: The ineligible_rates of this GetRatesResult.  # noqa: E501
        :type: List[IneligibleRate]
        """

        self._ineligible_rates = ineligible_rates

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetRatesResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetRatesResult):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetRatesResult):
            return True

        return self.to_dict() != other.to_dict()
