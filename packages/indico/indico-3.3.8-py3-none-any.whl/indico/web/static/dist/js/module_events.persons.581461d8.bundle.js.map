{"version":3,"file":"js/module_events.persons.581461d8.bundle.js","mappings":"0NAKA,MAAAA,EAAAC,EAAAA,QAAAC,KAAA,MAAAC,SAAA,wBAAAC,MAAA,EAAAC,KAAA,yBAAAC,WAAA,CAAAC,SAAA,mBAAAC,UAAA,oBAAAC,SAAA,GAAAC,MAAA,EAAAC,KAAA,IAAAC,WAAA,IAAAD,KAAA,IAAAC,WAAA,IAAAD,KAAA,QAAAC,WAAA,IAAAD,KAAA,IAAAC,WAAA,IAAAD,KAAA,WAAAC,WAAA,IAAAD,KAAA,IAAAC,WAAA,IAAAD,KAAA,SAAAC,WAAA,IAAAD,KAAA,IAAAC,WAAA,IAAAD,KAAA,UAAAC,WAAA,IAAAD,KAAA,IAAAC,WAAA,IAAAD,KAAA,YAAAC,WAAA,YAcA,SAASC,GAAgB,QACvBC,EAAO,OACPC,EAAM,0BACNC,EAAyB,wBACzBC,EAAuB,iBACvBC,IAEA,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GA0B3C,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KACEC,UAAU,mBACVC,MAAOC,EAAAA,UAAUC,OAAO,2BACxBC,QAASA,IAAMP,GAAa,KAE7BD,GACCG,EAAAA,cAACM,EAAAA,mBAAkB,CACjBb,OAAQA,EACRC,0BAA2BA,EAC3BC,wBAAyBA,EACzBY,gBAAc,EACdC,QAASA,IAAMV,GAAa,GAC5BW,SAtCaC,MAAOrB,EAAMsB,KAChC,MAAMC,GAAgBC,EAAAA,EAAAA,kBAAiBxB,EAAMsB,GAS7C,IAAIG,EARCpB,EAGMkB,EAAcG,kBACvBH,EAAcI,YAAcJ,EAAcG,gBAAgBE,KAAKC,OAC/DN,EAAcO,cAAgBP,EAAcG,gBAAgBK,UACrDR,EAAcG,wBAJdH,EAAcG,gBAOvB,IACED,QAAaO,EAAAA,YAAYC,MACvB5C,EAAgB,CAACO,SAAUO,EAASN,UAAWO,EAAO2B,MACtDG,EAAAA,EAAAA,aAAYX,GAEhB,CAAE,MAAOY,GACP,OAAOC,EAAAA,EAAAA,mBAAkBD,EAAG,CAACE,iBAAkB,mBACjD,CAEA9B,EAAiBkB,EAAKzB,KAAKsC,YACrB,IAAIC,SAAQ,QAAS,IAsB/B,CAEArC,EAAgBsC,UAAY,CAC1BrC,QAASsC,IAAAA,OAAiBC,WAC1BtC,OAAQqC,IAAAA,OAAiBC,WACzBrC,0BAA2BoC,IAAAA,KAAeC,WAC1CpC,wBAAyBmC,IAAAA,KAAeC,WACxCnC,iBAAkBkC,IAAAA,KAAeC,YAGnCC,OAAOC,qBAAuB,CAC5BzC,EACAC,EACAC,EACAC,KAEA,MAAMuC,EAAYC,SAASC,cAAc,gBAAgB3C,EAAO2B,MAOhEiB,EAAAA,OACErC,EAAAA,cAACT,EAAe,CACdC,QAASA,EACTC,QAAQ6C,EAAAA,EAAAA,cAAa7C,GACrBC,0BAA2BA,EAC3BC,wBAAyBA,EACzBC,iBAZqB+B,IACvBU,EAAAA,uBAAgCH,GAEhCK,EAAE,WAAW9C,EAAO2B,MAAMO,KAAKA,EAAK,IAWpCO,EACD,C","sources":["webpack:///indico/modules/events/persons/client/js/EditEventPerson.jsx"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport updatePersonURL from 'indico-url:persons.update_person';\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {PersonDetailsModal} from 'indico/react/components';\nimport {getChangedValues, handleSubmitError} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios} from 'indico/utils/axios';\nimport {camelizeKeys, snakifyKeys} from 'indico/utils/case';\n\nfunction EditEventPerson({\n  eventId,\n  person,\n  hasPredefinedAffiliations,\n  allowCustomAffiliations,\n  replacePersonRow,\n}) {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleSubmit = async (data, form) => {\n    const changedValues = getChangedValues(data, form);\n    if (!hasPredefinedAffiliations) {\n      // changedValues.affiliation is already there and used\n      delete changedValues.affiliationData;\n    } else if (changedValues.affiliationData) {\n      changedValues.affiliation = changedValues.affiliationData.text.trim();\n      changedValues.affiliationId = changedValues.affiliationData.id;\n      delete changedValues.affiliationData;\n    }\n    let resp;\n    try {\n      resp = await indicoAxios.patch(\n        updatePersonURL({event_id: eventId, person_id: person.id}),\n        snakifyKeys(changedValues)\n      );\n    } catch (e) {\n      return handleSubmitError(e, {affiliation_data: 'affiliationData'});\n    }\n\n    replacePersonRow(resp.data.html);\n    await new Promise(() => {});\n  };\n\n  return (\n    <>\n      <a\n        className=\"i-link icon-edit\"\n        title={Translate.string('Edit person information')}\n        onClick={() => setModalOpen(true)}\n      />\n      {modalOpen && (\n        <PersonDetailsModal\n          person={person}\n          hasPredefinedAffiliations={hasPredefinedAffiliations}\n          allowCustomAffiliations={allowCustomAffiliations}\n          hideEmailField\n          onClose={() => setModalOpen(false)}\n          onSubmit={handleSubmit}\n        />\n      )}\n    </>\n  );\n}\n\nEditEventPerson.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  person: PropTypes.object.isRequired,\n  hasPredefinedAffiliations: PropTypes.bool.isRequired,\n  allowCustomAffiliations: PropTypes.bool.isRequired,\n  replacePersonRow: PropTypes.func.isRequired,\n};\n\nwindow.setupEditEventPerson = (\n  eventId,\n  person,\n  hasPredefinedAffiliations,\n  allowCustomAffiliations\n) => {\n  const container = document.querySelector(`#edit-person-${person.id}`);\n  const replacePersonRow = html => {\n    ReactDOM.unmountComponentAtNode(container);\n    // sorry for using jquery here, but it's the most convenient way to execute inline JS..\n    $(`#person-${person.id}`).html(html);\n  };\n\n  ReactDOM.render(\n    <EditEventPerson\n      eventId={eventId}\n      person={camelizeKeys(person)}\n      hasPredefinedAffiliations={hasPredefinedAffiliations}\n      allowCustomAffiliations={allowCustomAffiliations}\n      replacePersonRow={replacePersonRow}\n    />,\n    container\n  );\n};\n"],"names":["updatePersonURL","_buildFlaskURL","bind","endpoint","rules","args","converters","event_id","person_id","defaults","trace","data","isDynamic","EditEventPerson","eventId","person","hasPredefinedAffiliations","allowCustomAffiliations","replacePersonRow","modalOpen","setModalOpen","useState","React","className","title","Translate","string","onClick","PersonDetailsModal","hideEmailField","onClose","onSubmit","async","form","changedValues","getChangedValues","resp","affiliationData","affiliation","text","trim","affiliationId","id","indicoAxios","patch","snakifyKeys","e","handleSubmitError","affiliation_data","html","Promise","propTypes","PropTypes","isRequired","window","setupEditEventPerson","container","document","querySelector","ReactDOM","camelizeKeys","$"],"sourceRoot":""}