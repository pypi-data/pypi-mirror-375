# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import ModelService_pb2 as ModelService__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in ModelService_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ModelServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNumberOfActiveSoilProperties = channel.unary_unary(
                '/grpc_model.ModelService/GetNumberOfActiveSoilProperties',
                request_serializer=ModelService__pb2.GetNumberOfActiveSoilPropertiesRequest.SerializeToString,
                response_deserializer=ModelService__pb2.GetNumberOfActiveSoilPropertiesResponse.FromString,
                _registered_method=True)
        self.GetSoilProperty = channel.unary_unary(
                '/grpc_model.ModelService/GetSoilProperty',
                request_serializer=ModelService__pb2.GetSoilPropertyRequest.SerializeToString,
                response_deserializer=ModelService__pb2.GetSoilPropertyResponse.FromString,
                _registered_method=True)
        self.GetNumberOfActivePileProperties = channel.unary_unary(
                '/grpc_model.ModelService/GetNumberOfActivePileProperties',
                request_serializer=ModelService__pb2.GetNumberOfActivePilePropertiesRequest.SerializeToString,
                response_deserializer=ModelService__pb2.GetNumberOfActivePilePropertiesResponse.FromString,
                _registered_method=True)
        self.GetPileProperty = channel.unary_unary(
                '/grpc_model.ModelService/GetPileProperty',
                request_serializer=ModelService__pb2.GetPilePropertyRequest.SerializeToString,
                response_deserializer=ModelService__pb2.GetPilePropertyResponse.FromString,
                _registered_method=True)
        self.GetNumberOfActivePileTypes = channel.unary_unary(
                '/grpc_model.ModelService/GetNumberOfActivePileTypes',
                request_serializer=ModelService__pb2.GetNumberOfActivePileTypesRequest.SerializeToString,
                response_deserializer=ModelService__pb2.GetNumberOfActivePileTypesResponse.FromString,
                _registered_method=True)
        self.GetPileType = channel.unary_unary(
                '/grpc_model.ModelService/GetPileType',
                request_serializer=ModelService__pb2.GetPileTypeRequest.SerializeToString,
                response_deserializer=ModelService__pb2.GetPileTypeResponse.FromString,
                _registered_method=True)
        self.Compute = channel.unary_unary(
                '/grpc_model.ModelService/Compute',
                request_serializer=ModelService__pb2.ComputeRequest.SerializeToString,
                response_deserializer=ModelService__pb2.ComputeResponse.FromString,
                _registered_method=True)
        self.GetPileResultsTables = channel.unary_unary(
                '/grpc_model.ModelService/GetPileResultsTables',
                request_serializer=ModelService__pb2.GetPileResultsTablesRequest.SerializeToString,
                response_deserializer=ModelService__pb2.GetPileResultsTablesResponse.FromString,
                _registered_method=True)
        self.Save = channel.unary_unary(
                '/grpc_model.ModelService/Save',
                request_serializer=ModelService__pb2.SaveRequest.SerializeToString,
                response_deserializer=ModelService__pb2.SaveResponse.FromString,
                _registered_method=True)
        self.Close = channel.unary_unary(
                '/grpc_model.ModelService/Close',
                request_serializer=ModelService__pb2.CloseRequest.SerializeToString,
                response_deserializer=ModelService__pb2.CloseResponse.FromString,
                _registered_method=True)


class ModelServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNumberOfActiveSoilProperties(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSoilProperty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNumberOfActivePileProperties(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPileProperty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNumberOfActivePileTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPileType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Compute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPileResultsTables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Save(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNumberOfActiveSoilProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNumberOfActiveSoilProperties,
                    request_deserializer=ModelService__pb2.GetNumberOfActiveSoilPropertiesRequest.FromString,
                    response_serializer=ModelService__pb2.GetNumberOfActiveSoilPropertiesResponse.SerializeToString,
            ),
            'GetSoilProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSoilProperty,
                    request_deserializer=ModelService__pb2.GetSoilPropertyRequest.FromString,
                    response_serializer=ModelService__pb2.GetSoilPropertyResponse.SerializeToString,
            ),
            'GetNumberOfActivePileProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNumberOfActivePileProperties,
                    request_deserializer=ModelService__pb2.GetNumberOfActivePilePropertiesRequest.FromString,
                    response_serializer=ModelService__pb2.GetNumberOfActivePilePropertiesResponse.SerializeToString,
            ),
            'GetPileProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPileProperty,
                    request_deserializer=ModelService__pb2.GetPilePropertyRequest.FromString,
                    response_serializer=ModelService__pb2.GetPilePropertyResponse.SerializeToString,
            ),
            'GetNumberOfActivePileTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNumberOfActivePileTypes,
                    request_deserializer=ModelService__pb2.GetNumberOfActivePileTypesRequest.FromString,
                    response_serializer=ModelService__pb2.GetNumberOfActivePileTypesResponse.SerializeToString,
            ),
            'GetPileType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPileType,
                    request_deserializer=ModelService__pb2.GetPileTypeRequest.FromString,
                    response_serializer=ModelService__pb2.GetPileTypeResponse.SerializeToString,
            ),
            'Compute': grpc.unary_unary_rpc_method_handler(
                    servicer.Compute,
                    request_deserializer=ModelService__pb2.ComputeRequest.FromString,
                    response_serializer=ModelService__pb2.ComputeResponse.SerializeToString,
            ),
            'GetPileResultsTables': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPileResultsTables,
                    request_deserializer=ModelService__pb2.GetPileResultsTablesRequest.FromString,
                    response_serializer=ModelService__pb2.GetPileResultsTablesResponse.SerializeToString,
            ),
            'Save': grpc.unary_unary_rpc_method_handler(
                    servicer.Save,
                    request_deserializer=ModelService__pb2.SaveRequest.FromString,
                    response_serializer=ModelService__pb2.SaveResponse.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=ModelService__pb2.CloseRequest.FromString,
                    response_serializer=ModelService__pb2.CloseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc_model.ModelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpc_model.ModelService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ModelService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNumberOfActiveSoilProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/GetNumberOfActiveSoilProperties',
            ModelService__pb2.GetNumberOfActiveSoilPropertiesRequest.SerializeToString,
            ModelService__pb2.GetNumberOfActiveSoilPropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSoilProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/GetSoilProperty',
            ModelService__pb2.GetSoilPropertyRequest.SerializeToString,
            ModelService__pb2.GetSoilPropertyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNumberOfActivePileProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/GetNumberOfActivePileProperties',
            ModelService__pb2.GetNumberOfActivePilePropertiesRequest.SerializeToString,
            ModelService__pb2.GetNumberOfActivePilePropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPileProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/GetPileProperty',
            ModelService__pb2.GetPilePropertyRequest.SerializeToString,
            ModelService__pb2.GetPilePropertyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNumberOfActivePileTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/GetNumberOfActivePileTypes',
            ModelService__pb2.GetNumberOfActivePileTypesRequest.SerializeToString,
            ModelService__pb2.GetNumberOfActivePileTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPileType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/GetPileType',
            ModelService__pb2.GetPileTypeRequest.SerializeToString,
            ModelService__pb2.GetPileTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Compute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/Compute',
            ModelService__pb2.ComputeRequest.SerializeToString,
            ModelService__pb2.ComputeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPileResultsTables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/GetPileResultsTables',
            ModelService__pb2.GetPileResultsTablesRequest.SerializeToString,
            ModelService__pb2.GetPileResultsTablesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Save(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/Save',
            ModelService__pb2.SaveRequest.SerializeToString,
            ModelService__pb2.SaveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_model.ModelService/Close',
            ModelService__pb2.CloseRequest.SerializeToString,
            ModelService__pb2.CloseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
