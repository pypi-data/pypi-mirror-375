[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "superset-claudette"
dynamic = ["version"]
description = "Superset multi-environment workflow manager using git worktrees"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["superset", "development", "workflow", "git", "worktree"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control :: Git",
]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.7.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "gitpython>=3.1.0",
    "uv>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
]

[project.scripts]
claudette = "claudette.cli:app"
clo = "claudette.cli:app"

[project.urls]
Homepage = "https://github.com/yourusername/claudette"
Repository = "https://github.com/yourusername/claudette"
Issues = "https://github.com/yourusername/claudette/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/claudette"]

[tool.hatch.build.targets.wheel.force-include]
"src/claudette/templates/CLAUDE.local.md" = "claudette/templates/CLAUDE.local.md"
"src/claudette/templates/claude_rc_central" = "claudette/templates/claude_rc_central"
"src/claudette/templates/claude_rc_template" = "claudette/templates/claude_rc_template"
"src/claudette/templates/gitignore_additions" = "claudette/templates/gitignore_additions"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.sdist.force-include]
"src/claudette/templates/CLAUDE.local.md" = "src/claudette/templates/CLAUDE.local.md"
"src/claudette/templates/claude_rc_central" = "src/claudette/templates/claude_rc_central"
"src/claudette/templates/claude_rc_template" = "src/claudette/templates/claude_rc_template"
"src/claudette/templates/gitignore_additions" = "src/claudette/templates/gitignore_additions"

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused import

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "--cov=claudette",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src/claudette"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
]

[tool.hatch.version]
path = "src/claudette/__init__.py"
