# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v4_workflows_get200_response_workflows_inner import V4WorkflowsGet200ResponseWorkflowsInner

class TestV4WorkflowsGet200ResponseWorkflowsInner(unittest.TestCase):
    """V4WorkflowsGet200ResponseWorkflowsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V4WorkflowsGet200ResponseWorkflowsInner:
        """Test V4WorkflowsGet200ResponseWorkflowsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V4WorkflowsGet200ResponseWorkflowsInner`
        """
        model = V4WorkflowsGet200ResponseWorkflowsInner()
        if include_optional:
            return V4WorkflowsGet200ResponseWorkflowsInner(
                id = '',
                name = '',
                description = '',
                state = 'ACTIVE',
                display_state = 'ACTIVE',
                user_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tags = [
                    ''
                    ],
                limit = 56,
                finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                protocol = '',
                job_id = '',
                data_key = '',
                location = openapi_client.models._v4_workflows_get_200_response_workflows_inner_location._v4_workflows_get_200_response_workflows_inner_location(
                    type = 'auto', 
                    iso_code = 'DE', ),
                run_costs = 1.337,
                run_state = '',
                total_records = 56,
                url = '',
                urls = [
                    ''
                    ],
                var_schema = [
                    openapi_client.models._v4_workflows_get_200_response_workflows_inner_schema_inner._v4_workflows_get_200_response_workflows_inner_schema_inner(
                        name = '', 
                        description = '', 
                        example = '', 
                        data_type = 'STRING', 
                        is_primary_key = True, 
                        is_required = True, 
                        is_unique = True, )
                    ],
                schema_type = 'DETAIL',
                template_name = '',
                template_id = '',
                is_schema_editable = True,
                data_validation = openapi_client.models._v4_workflows_get_200_response_workflows_inner_data_validation._v4_workflows_get_200_response_workflows_inner_dataValidation(
                    enabled = True, ),
                validation_statistics = openapi_client.models._v4_workflows_get_200_response_workflows_inner_validation_statistics._v4_workflows_get_200_response_workflows_inner_validationStatistics(
                    total = openapi_client.models._v4_workflows_get_200_response_workflows_inner_validation_statistics_total._v4_workflows_get_200_response_workflows_inner_validationStatistics_total(
                        count = 1.337, 
                        change = 1.337, ), 
                    by_rule = openapi_client.models._v4_workflows_get_200_response_workflows_inner_validation_statistics_by_rule._v4_workflows_get_200_response_workflows_inner_validationStatistics_byRule(
                        rule_name = '', 
                        count = 1.337, ), ),
                monitoring = True,
                notification_config = openapi_client.models._v4_workflows_get_200_response_workflows_inner_notification_config._v4_workflows_get_200_response_workflows_inner_notificationConfig(
                    enabled = True, 
                    fields = [
                        openapi_client.models._v4_workflows_get_200_response_workflows_inner_notification_config_fields_inner._v4_workflows_get_200_response_workflows_inner_notificationConfig_fields_inner(
                            field_name = '', 
                            operator = 'changed', )
                        ], )
            )
        else:
            return V4WorkflowsGet200ResponseWorkflowsInner(
        )
        """

    def testV4WorkflowsGet200ResponseWorkflowsInner(self):
        """Test V4WorkflowsGet200ResponseWorkflowsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
