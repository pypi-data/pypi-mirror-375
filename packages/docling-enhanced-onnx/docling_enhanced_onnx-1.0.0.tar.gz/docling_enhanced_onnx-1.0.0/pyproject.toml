[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docling-enhanced-onnx"
version = "1.0.0"
description = "Enhanced Docling Models with ONNX Auto-Detection and Air-Gapped Support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Asep Muhamad", email = "asepmuhamad@gmail.com"},
]
maintainers = [
    {name = "Asep Muhamad", email = "asepmuhamad@gmail.com"},
]
keywords = [
    "docling",
    "onnx",
    "document-processing",
    "table-extraction",
    "layout-analysis",
    "air-gapped",
    "machine-learning",
    "ai"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
]
requires-python = ">=3.10"
dependencies = [
    "docling>=2.0.0",
    "onnxruntime>=1.15.0",
    "numpy>=1.21.0",
    "pillow>=8.3.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

gpu = [
    "onnxruntime-gpu>=1.15.0",
]

onnx = [
    "docling-onnx-models>=1.0.0",
]

full = [
    "docling-onnx-models>=1.0.0",
    "onnxruntime-gpu>=1.15.0",
]

[project.urls]
Homepage = "https://github.com/asmud/docling"
Documentation = "https://github.com/asmud/docling#readme"
Repository = "https://github.com/asmud/docling.git"
Issues = "https://github.com/asmud/docling/issues"
Changelog = "https://github.com/asmud/docling/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["docling_enhanced*"]

[tool.setuptools.package-data]
docling_enhanced = ["py.typed"]

# Version is hardcoded above

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "dist", "build", "*.egg-info"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "docling.*",
    "docling_ibm_models.*",
    "onnxruntime.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=docling_enhanced",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]