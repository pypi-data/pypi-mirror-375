{"version":3,"file":"js/module_events.layout.3ef3affd.bundle.js","mappings":"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","sources":["webpack:///indico/modules/events/client/js/layout.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global handleAjaxError, ajaxDialog, initMenuSortable */\n\nimport {$T} from 'indico/utils/i18n';\n\n(function(global) {\n  global.initMenuSortable = function initMenuSortable() {\n    // ui.sender seems broken (returns null) so we keep track of the sortable who sent the item manually...\n    let _sender = null;\n    /*\n     *.sortable('cancel') is also broken thus we need to keep track of the validity of an update manually as well.\n     * See 'beforeStop' for a more detailed explanation.\n     */\n    let _invalidUpdate = false;\n\n    function _canDrop(evt, ui) {\n      if (_sender[0] === ui.placeholder.parent()[0]) {\n        // entry moved within the same list\n        return true;\n      }\n      if (!ui.item.hasClass('nestable')) {\n        return false;\n      }\n\n      const parent = ui.placeholder.closest('.menu-entry').parent();\n      // valid cross-list drag if the target list is the root one or if the target list can have nested entries\n      return parent[0] === undefined || parent.hasClass('allow-nested');\n    }\n\n    // delete existing sortable before recreating them\n    $('.menu-entries.ui-sortable').sortable('destroy');\n\n    $('.menu-entries').sortable({\n      handle: '.drag-handle',\n      placeholder: 'menu-entry-placeholder',\n      axis: 'y',\n      connectWith: '.connect-menu',\n      start(evt, ui) {\n        _sender = $(this);\n        if (ui.item.hasClass('nestable')) {\n          // The list only has the placeholder and the entry being dragged. It should look like an empty list.\n          if (_sender.children().not('.menu-entry-placeholder').length === 1) {\n            _sender.addClass('empty');\n          }\n          // Show empty children list which accept children\n          $('.menu-entries > .allow-nested > .menu-entry > .menu-entries.empty')\n            .addClass('expand')\n            .parent('.menu-entry')\n            .addClass('with-children');\n          ui.item\n            .find('> .menu-entry > .menu-entries.empty')\n            .removeClass('expand')\n            .parent('.menu-entry')\n            .removeClass('with-children');\n        }\n        ui.placeholder.height(ui.helper.outerHeight());\n      },\n      beforeStop(evt, ui) {\n        /*\n         * In the case of an invalid update we need to cancel the move. But .sortable('cancel') fails internally\n         * when called from here so we keep track of whether the move is valid, check in 'update' if can update\n         * and then cancel the move in 'stop' if needed.\n         */\n        _invalidUpdate = !_canDrop(evt, ui);\n      },\n      stop(evt, ui) {\n        // mandatory clean-up\n        $('.menu-entries').removeClass('hide-placeholder');\n        if (ui.item.hasClass('nestable')) {\n          $('.menu-entries > .allow-nested > .menu-entry > .menu-entries.empty')\n            .removeClass('expand')\n            .parent('.menu-entry')\n            .removeClass('with-children');\n        }\n\n        // Check if move is valid\n        if (_invalidUpdate) {\n          // This can only happen if a nested user-submitted entry is dropped on an invalid target list, which\n          // shouldn't happen as internal nested list are not connected with the other lists.\n          $(this).sortable('cancel');\n        } else if (ui.item.hasClass('nestable')) {\n          // remove .empty from parent list and .nestable from parent entry\n          ui.item\n            .closest('.menu-entries')\n            .removeClass('empty')\n            .parent('.menu-entry')\n            .addClass('with-children')\n            .parent()\n            .removeClass('nestable');\n\n          const isRoot = ui.item.closest('.menu-entry')[0] === undefined;\n          // disallow adding child elements\n          if (!isRoot) {\n            ui.item.removeClass('allow-nested');\n          }\n          // allow adding children to root entries which have a list of children\n          if (isRoot && ui.item.find('> .menu-entry > .menu-entries')) {\n            ui.item.addClass('allow-nested');\n          }\n\n          // add empty class to sender list of children if the last entry was moved out\n          if (!_sender.children().length) {\n            _sender.addClass('empty').closest('.menu-entry').parent().addClass('nestable');\n          }\n        }\n        _sender = null;\n      },\n      over(evt, ui) {\n        // hide place-holder of list which are invalid targets\n        if (!_canDrop(evt, ui)) {\n          ui.placeholder.closest('.menu-entries').addClass('hide-placeholder');\n        }\n      },\n      update(evt, ui) {\n        // Prevent update from nested list which does not contain the element any more.\n        if (this !== ui.item.parent()[0]) {\n          return;\n        }\n        // Don't update an invalid move.\n        if (_invalidUpdate) {\n          return;\n        }\n\n        evt.stopPropagation();\n        const data = {};\n\n        const position = ui.item.prev().children('.menu-entry').data('position');\n        if (position !== null) {\n          data.position = position;\n        }\n\n        const parentId = ui.item.closest('.menu-entry').data('entry-id');\n        if (parentId !== null) {\n          data.parent_id = parentId; // snake case to follow PEP8 on the back-end\n        }\n\n        $.ajax({\n          url: ui.item.children('.menu-entry').data('position-url'),\n          method: 'POST',\n          dataType: 'json',\n          data,\n          complete: IndicoUI.Dialogs.Util.progress(),\n          error: handleAjaxError,\n        });\n      },\n    });\n  };\n\n  $(document)\n    .on('click', '.menu-entry > .i-label > .actions > .edit-entry', function(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      ajaxDialog({\n        trigger: this,\n        url: $(this).data('href'),\n        title: $T.gettext('Menu Entry Settings'),\n        onClose(data) {\n          if (data) {\n            $(this.trigger).closest('.menu-entry').replaceWith(data.entry);\n          }\n        },\n      });\n    })\n    .on('indico:confirmed', '.menu-entry .enabled, .menu-entry .not-enabled', function(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      const $this = $(this);\n      $.ajax({\n        url: $this.data('href'),\n        method: $this.data('method'),\n        complete: IndicoUI.Dialogs.Util.progress(),\n        error: handleAjaxError,\n        success(data) {\n          const isEnabled = data.is_enabled;\n          $this\n            .toggleClass('enabled', isEnabled)\n            .toggleClass('not-enabled', !isEnabled)\n            .parent('.actions')\n            .parent('.i-label')\n            .toggleClass('striped', !isEnabled);\n        },\n      });\n    })\n    .on('indico:confirmed', '.menu-entry .default, .menu-entry .not-default', function(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      const $this = $(this);\n      $.ajax({\n        url: $this.data('href'),\n        method: $this.data('method'),\n        complete: IndicoUI.Dialogs.Util.progress(),\n        error: handleAjaxError,\n        success(data) {\n          const isDefault = data.is_default;\n          $('.menu-entry .default').removeClass('default').addClass('not-default');\n          $this.toggleClass('default', isDefault).toggleClass('not-default', !isDefault);\n        },\n      });\n    })\n    .on('indico:confirmed', '.menu-entry .delete-entry', function(evt) {\n      evt.preventDefault();\n\n      const $this = $(this);\n      $.ajax({\n        url: $this.data('href'),\n        method: $this.data('method'),\n        complete: IndicoUI.Dialogs.Util.progress(),\n        error: handleAjaxError,\n        success(data) {\n          if (data) {\n            $('#menu-entries > .menu-entries').replaceWith(data.menu);\n            initMenuSortable();\n          }\n        },\n      });\n    });\n})(window);\n"],"names":["window","initMenuSortable","_sender","_invalidUpdate","_canDrop","evt","ui","placeholder","parent","item","hasClass","closest","undefined","$","sortable","handle","axis","connectWith","start","this","children","not","length","addClass","find","removeClass","height","helper","outerHeight","beforeStop","stop","isRoot","over","update","stopPropagation","data","position","prev","parentId","parent_id","ajax","url","method","dataType","complete","IndicoUI","Dialogs","Util","progress","error","handleAjaxError","document","on","preventDefault","ajaxDialog","trigger","title","$T","gettext","onClose","replaceWith","entry","$this","success","isEnabled","is_enabled","toggleClass","isDefault","is_default","menu"],"sourceRoot":""}