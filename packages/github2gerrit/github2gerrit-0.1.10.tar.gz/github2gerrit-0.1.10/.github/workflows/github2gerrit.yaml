---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

name: "GitHub2Gerrit [R]"

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      SUBMIT_SINGLE_COMMITS:
        description: "Submit one commit at a time to the Gerrit repository"
        required: false
        default: false
        type: boolean
      USE_PR_AS_COMMIT:
        description: "Use PR body and title as commit message"
        required: false
        default: false
        type: boolean
      FETCH_DEPTH:
        description: "fetch-depth for the clone. (Default: 10)"
        required: false
        default: "10"
        type: string
      GERRIT_KNOWN_HOSTS:
        description: "known hosts"
        required: false
        type: string
      GERRIT_SERVER:
        description: "Gerrit hostname ex: git.opendaylight.org"
        required: false
        default: ""
        type: string
      GERRIT_SERVER_PORT:
        description: "Gerrit port. (Default: 29418)"
        required: false
        default: "29418"
        type: string
      GERRIT_PROJECT:
        description: "Gerrit project name. ex: releng/builder"
        required: false
        default: ""
        type: string
      GERRIT_SSH_USER_G2G:
        description: "Gerrit user-id for SSH"
        required: false
        type: string
      GERRIT_SSH_USER_G2G_EMAIL:
        description: "Email of the SSH user"
        required: false
        type: string
      ORGANIZATION:
        description: "Organization name, e.g. opendaylight"
        required: false
        type: string
        default: ${{ github.repository_owner }}
      REVIEWERS_EMAIL:
        description: "Committer emails (comma separated) to notify reviewers"
        required: false
        default: ""
        type: string
      ALLOW_GHE_URLS:
        description: "Allow GitHub Enterprise URLs in direct URL mode"
        required: false
        default: false
        type: boolean
      PRESERVE_GITHUB_PRS:
        description: "Do not close GitHub PRs after pushing to Gerrit"
        required: false
        default: false
        type: boolean
      DRY_RUN:
        description: "Validate settings and PR metadata; do not write to Gerrit"
        required: false
        default: false
        type: boolean
      GERRIT_HTTP_BASE_PATH:
        description: "Optional HTTP base path for Gerrit REST (e.g. /r)"
        required: false
        default: ""
        type: string
      GERRIT_HTTP_USER:
        description: "Optional Gerrit HTTP user for REST checks"
        required: false
        default: ""
        type: string
      GERRIT_HTTP_PASSWORD:
        description: "Optional Gerrit HTTP password/token for REST checks"
        required: false
        default: ""
        type: string
      ISSUE_ID:
        description: "Issue ID to include (e.g., ABC-123)"
        required: false
        default: ""
        type: string
      ALLOW_DUPLICATES:
        description: "Allow submitting duplicate changes without error"
        required: false
        default: false
        type: boolean
    secrets:
      GERRIT_SSH_PRIVKEY_G2G:
        description: "SSH Private key"
        required: true
  workflow_dispatch:
    inputs:
      PR_NUMBER:
        description: "Pull request number to process, use 0 to process all open"
        required: false
        default: "0"
        type: string
      SUBMIT_SINGLE_COMMITS:
        description: "Submit one commit at a time to the Gerrit repository"
        required: false
        default: false
        type: boolean
      USE_PR_AS_COMMIT:
        description: "Use PR body and title as commit message"
        required: false
        default: false
        type: boolean

      GERRIT_KNOWN_HOSTS:
        description: "known hosts"
        required: false
        type: string
      GERRIT_SSH_USER_G2G:
        description: "Gerrit user-id for SSH"
        required: false
        type: string
      GERRIT_SSH_USER_G2G_EMAIL:
        description: "Email of the SSH user"
        required: false
        type: string

      PRESERVE_GITHUB_PRS:
        description: "Do not close GitHub PRs after pushing to Gerrit"
        required: false
        default: false
        type: boolean
      DRY_RUN:
        description: "Validate settings and PR metadata; do not write to Gerrit"
        required: false
        default: false
        type: boolean
      ISSUE_ID:
        description: "Issue ID to include (e.g., ABC-123)"
        required: false
        default: ""
        type: string
      ALLOW_DUPLICATES:
        description: "Allow submitting duplicate changes without error"
        required: false
        default: false
        type: boolean

concurrency:
  group: reusable-${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: true

jobs:
  manual-dispatch:
    # Manual run: allow optional PR_NUMBER (0 => process all PRs)
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      # yamllint disable rule:line-length
      # PR_NUMBER normalization is handled by the composite action

      - name: Run github2gerrit composite action
        uses: ./
        with:
          SUBMIT_SINGLE_COMMITS: ${{ inputs.SUBMIT_SINGLE_COMMITS }}
          USE_PR_AS_COMMIT: ${{ inputs.USE_PR_AS_COMMIT }}

          GERRIT_KNOWN_HOSTS: ${{ inputs.GERRIT_KNOWN_HOSTS }}
          GERRIT_SSH_PRIVKEY_G2G: ${{ secrets.GERRIT_SSH_PRIVKEY_G2G }}
          GERRIT_SSH_USER_G2G: ${{ inputs.GERRIT_SSH_USER_G2G }}
          GERRIT_SSH_USER_G2G_EMAIL: ${{ inputs.GERRIT_SSH_USER_G2G_EMAIL }}
          ALLOW_DUPLICATES: ${{ inputs.ALLOW_DUPLICATES }}
          PRESERVE_GITHUB_PRS: ${{ inputs.PRESERVE_GITHUB_PRS }}
          DRY_RUN: ${{ inputs.DRY_RUN }}
          ISSUE_ID: ${{ inputs.ISSUE_ID }}
          PR_NUMBER: ${{ inputs.PR_NUMBER }}

  github2gerrit:
    # Only run if we have a proper pull request context
    if: ${{ github.event.pull_request.number || github.event.issue.number }}
    runs-on: ubuntu-latest
    timeout-minutes: 12
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Run github2gerrit composite action
        uses: ./
        with:
          SUBMIT_SINGLE_COMMITS: ${{ inputs.SUBMIT_SINGLE_COMMITS }}
          USE_PR_AS_COMMIT: ${{ inputs.USE_PR_AS_COMMIT }}
          FETCH_DEPTH: ${{ inputs.FETCH_DEPTH }}
          GERRIT_KNOWN_HOSTS: ${{ inputs.GERRIT_KNOWN_HOSTS }}
          GERRIT_SSH_PRIVKEY_G2G: ${{ secrets.GERRIT_SSH_PRIVKEY_G2G }}
          GERRIT_SSH_USER_G2G: ${{ inputs.GERRIT_SSH_USER_G2G }}
          GERRIT_SSH_USER_G2G_EMAIL: ${{ inputs.GERRIT_SSH_USER_G2G_EMAIL }}

          REVIEWERS_EMAIL: ${{ inputs.REVIEWERS_EMAIL }}
          ALLOW_GHE_URLS: ${{ inputs.ALLOW_GHE_URLS }}
          PRESERVE_GITHUB_PRS: ${{ inputs.PRESERVE_GITHUB_PRS }}
          DRY_RUN: ${{ inputs.DRY_RUN }}
          ALLOW_DUPLICATES: ${{ inputs.ALLOW_DUPLICATES }}
          ISSUE_ID: ${{ inputs.ISSUE_ID }}
          GERRIT_SERVER: ${{ inputs.GERRIT_SERVER }}
          GERRIT_SERVER_PORT: ${{ inputs.GERRIT_SERVER_PORT }}
          GERRIT_PROJECT: ${{ inputs.GERRIT_PROJECT }}
          GERRIT_HTTP_BASE_PATH: ${{ inputs.GERRIT_HTTP_BASE_PATH }}
          GERRIT_HTTP_USER: ${{ inputs.GERRIT_HTTP_USER }}
          GERRIT_HTTP_PASSWORD: ${{ inputs.GERRIT_HTTP_PASSWORD }}
