[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.0",
    "wheel",
]

[project]
name = "mseep-kreuzberg"
version = "3.13.5"
description = "Document intelligence framework for Python - Extract text, metadata, and structured data from diverse file formats"
keywords = [
    "async",
    "document-analysis",
    "document-classification",
    "document-intelligence",
    "document-processing",
    "extensible",
    "information-extraction",
    "mcp",
    "metadata-extraction",
    "model-context-protocol",
    "ocr",
    "pandoc",
    "pdf-extraction",
    "pdfium",
    "plugin-architecture",
    "rag",
    "retrieval-augmented-generation",
    "structured-data",
    "table-extraction",
    "tesseract",
    "text-extraction",
]
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Multimedia :: Graphics :: Capture :: Scanners",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Typing :: Typed",
]
dependencies = [
    "anyio>=4.10.0",
    "chardetng-py>=0.3.5",
    "exceptiongroup>=1.2.2; python_version<'3.11'",
    "html-to-markdown[lxml]>=1.9.1",
    "mcp>=1.13.0",
    "msgspec>=0.18.0",
    "numpy>=1.24.0",
    "playa-pdf>=0.7.0",
    "polars>=1.33.0",
    "psutil>=7.0.0",
    "pypdfium2==4.30.0",
    "python-calamine>=0.5.2",
    "python-pptx>=1.0.2",
    "typing-extensions>=4.15.0; python_version<'3.12'",
]

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[project.license]
text = "MIT"

[project.optional-dependencies]
additional-extensions = [
    "mailparse>=1.0.15",
    "tomli>=2.0.0; python_version<'3.11'",
]
all = [
    "kreuzberg[additional-extensions,api,chunking,cli,crypto,document-classification,easyocr,entity-extraction,gmft,langdetect,paddleocr]",
]
api = [
    "litestar[standard,structlog,opentelemetry]>=2.17.0",
]
chunking = [
    "semantic-text-splitter>=0.27.0",
]
cli = [
    "click>=8.2.1",
    "rich>=14.1.0",
    "tomli>=2.0.0; python_version<'3.11'",
]
crypto = [
    "playa-pdf[crypto]>=0.7.0",
]
document-classification = [
    "deep-translator>=1.11.4",
]
easyocr = [
    "easyocr>=1.7.2",
]
entity-extraction = [
    "keybert>=0.9.0",
    "spacy>=3.8.7",
]
gmft = [
    "gmft>=0.4.2",
]
langdetect = [
    "fast-langdetect>=0.3.2",
]
paddleocr = [
    "paddleocr>=3.2.0",
    "paddlepaddle>=3.1.1",
    "setuptools>=80.9.0",
]

[project.urls]
documentation = "https://kreuzberg.dev"
homepage = "https://github.com/Goldziher/kreuzberg"

[project.scripts]
kreuzberg = "kreuzberg.cli:cli"
kreuzberg-mcp = "kreuzberg._mcp.server:main"

[dependency-groups]
dev = [
    "covdefaults>=2.3.0",
    "mypy>=1.16.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.0",
    "pytest-rerunfailures>=16.0.1",
    "pytest-timeout>=2.4.0",
    "rich>=14.1.0",
    "ruff>=0.12.11",
    "tabulate>=0.9.0",
    "trio>=0.30.0",
    "uv-bump",
]
doc = [
    "mkdocs>=1.6.1",
    "mkdocs-git-revision-date-localized-plugin>=1.4.5",
    "mkdocs-material[imaging]>=9.6.9",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocstrings[python]>=0.29.0",
]

[tool.setuptools]
packages = [
    "kreuzberg",
]

[tool.setuptools.package-data]
kreuzberg = [
    "py.typed",
]

[tool.ruff]
target-version = "py310"
line-length = 120
src = [
    "kreuzberg",
    "tests",
]

[tool.ruff.format]
docstring-code-line-length = 120
docstring-code-format = true

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "ANN401",
    "COM812",
    "D100",
    "D104",
    "D107",
    "D205",
    "E501",
    "EM",
    "FBT",
    "FIX",
    "ISC001",
    "PLR2004",
    "PLW0603",
    "S110",
    "S603",
    "TD",
    "TRY",
]

[tool.ruff.lint.per-file-ignores]
"benchmarks/**/*.*" = [
    "BLE001",
    "C901",
    "PLR0912",
    "PLR0915",
    "S112",
    "T201",
]
"python-text-extraction-libs-benchmarks/**/*.*" = [
    "BLE001",
    "C901",
    "PLR0912",
    "PLR0915",
    "S112",
    "T201",
]
"tests/**/*.*" = [
    "A005",
    "ANN",
    "ARG001",
    "ARG002",
    "BLE001",
    "D",
    "N806",
    "N815",
    "PD",
    "PGH003",
    "PLC",
    "PLR0915",
    "PLR2004",
    "PT006",
    "PT007",
    "PT013",
    "PT017",
    "PT031",
    "RUF012",
    "S",
    "SIM117",
    "SLF001",
]
"tests/e2e/*_test.py" = [
    "T201",
]

[tool.ruff.lint.isort]
known-first-party = [
    "kreuzberg",
    "tests",
]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 15
max-returns = 10

[tool.codespell]
ignore-words-list = "inh,te,tha,vie"

[tool.pyproject-fmt]
keep_full_version = true
max_supported_python = "3.13"

[tool.pytest.ini_options]
timeout = 300
testpaths = [
    "tests",
]
norecursedirs = [
    "benchmarks",
    "python-text-extraction-libs-benchmarks",
    "dist",
    "build",
    "*.egg",
]
filterwarnings = [
    "ignore:Exception ignored in:pytest.PytestUnraisableExceptionWarning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    "ignore:ast.Num is deprecated and will be removed in Python 3.14:DeprecationWarning",
    "ignore:datetime.datetime.utcfromtimestamp() is deprecated:DeprecationWarning",
    "ignore:Deprecated call to `pkg_resources.declare_namespace('google')`:DeprecationWarning",
]

[tool.coverage.run]
branch = true
omit = [
    "tests/*",
    "scripts/*",
    "benchmarks/*",
    "python-text-extraction-libs-benchmarks/*",
]
plugins = [
    "covdefaults",
]
source = [
    "kreuzberg",
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
    "pragma: no cover",
    "if sys.version_info",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "def __repr__",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 85

[tool.mypy]
packages = [
    "kreuzberg",
    "tests",
    "benchmarks.src.kreuzberg_benchmarks",
]
python_version = "3.10"
disable_error_code = "import-untyped"
implicit_reexport = false
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = "tests.e2e.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "rich.*",
    "typer.*",
    "matplotlib.*",
    "memory_profiler.*",
    "py_spy.*",
    "litestar.*",
    "structlog.*",
    "opentelemetry.*",
    "fast_langdetect.*",
    "numpy.*",
    "torch.*",
    "easyocr.*",
    "paddleocr.*",
    "gmft.*",
    "semantic_text_splitter.*",
    "spacy.*",
    "keybert.*",
    "mailparse.*",
    "deep_translator.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "benchmarks.src.kreuzberg_benchmarks.*"
disable_error_code = [
    "misc",
]

[[tool.mypy.overrides]]
module = "kreuzberg.docker.main"
disable_error_code = [
    "misc",
]

[[tool.mypy.overrides]]
module = [
    "kreuzberg._gmft",
]
disable_error_code = [
    "unused-ignore",
]

[[tool.mypy.overrides]]
module = "kreuzberg._api.main"
disable_error_code = [
    "misc",
]

[tool.uv.sources.uv-bump]
git = "https://github.com/Goldziher/uv-bump"

[tool.uv.sources.kreuzberg-benchmarks]
workspace = true

[tool.uv.workspace]
members = [
    ".",
    "benchmarks",
]
