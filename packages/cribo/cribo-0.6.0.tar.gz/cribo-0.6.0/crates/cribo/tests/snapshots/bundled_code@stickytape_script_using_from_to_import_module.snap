---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/stickytape_script_using_from_to_import_module/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
greetings_config = _cribo.types.SimpleNamespace(__name__='greetings.config')
greetings = _cribo.types.SimpleNamespace(__name__='greetings', __initializing__=False, __initialized__=False)
greetings.config = greetings_config
DEFAULT_NAME = "User"
greetings_config.DEFAULT_NAME = DEFAULT_NAME
greetings_greeting = _cribo.types.SimpleNamespace(__name__='greetings.greeting')
greetings.greeting = greetings_greeting
config = greetings_config
message = "Hello"
def get_default_greeting():
    return f"{message}, {config.DEFAULT_NAME}!"
greetings_greeting.get_default_greeting = get_default_greeting
greetings_greeting.message = message
greeting = greetings_greeting
print(greeting.message)
print(greeting.get_default_greeting())
