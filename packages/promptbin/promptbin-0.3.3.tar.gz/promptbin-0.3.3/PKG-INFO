Metadata-Version: 2.4
Name: promptbin
Version: 0.3.3
Summary: Easy-to-use MCP server for prompt management with web interface and secure sharing
Project-URL: Homepage, https://github.com/ianphil/promptbin
Project-URL: Repository, https://github.com/ianphil/promptbin
Project-URL: Issues, https://github.com/ianphil/promptbin/issues
Project-URL: Documentation, https://github.com/ianphil/promptbin#readme
Author-email: PromptBin Contributors <noreply@promptbin.dev>
Maintainer-email: PromptBin Contributors <noreply@promptbin.dev>
License-File: LICENSE
Keywords: ai,chatgpt,claude,mcp,model-context-protocol,prompt-management,prompts
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Flask
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.11
Requires-Dist: flask<4.0.0,>=3.0.0
Requires-Dist: markdown<4.0.0,>=3.5.0
Requires-Dist: mcp[cli]<2.0.0,>=1.0.0
Requires-Dist: psutil<6.0.0,>=5.9.0
Requires-Dist: python-dotenv<2.0.0,>=1.0.0
Requires-Dist: requests<3.0.0,>=2.31.0
Description-Content-Type: text/markdown

# PromptBin - MCP Server Example

**The easiest way to run a Model Context Protocol (MCP) server with full prompt management.**

## Quick Start

```bash
# Install from PyPI
uv add promptbin

# Run PromptBin (MCP server + web interface)
uv run promptbin
```

That's it! PromptBin is now running with both MCP server and web interface at `http://localhost:5001`.

## Add to AI Tools

### Claude Desktop (Mac/Windows)
Open Settings ‚Üí Developer ‚Üí Edit Config and add:

```json
{
  "mcpServers": {
    "promptbin": {
      "command": "promptbin"
    }
  }
}
```

### ChatGPT Desktop (Mac/Windows)
- Open Settings ‚Üí Developer ‚Üí Model Context Protocol
- Click "Add Server"
- Name: `promptbin`
- Command: `promptbin`

*Note: These configs assume global installation with `pip install promptbin`. For development, use `uv run promptbin`.*

## Key Features
- **üöÄ Easy setup**: One command to get started
- **üîó MCP integration**: Full Model Context Protocol support
- **üåê Web interface**: Auto-launching prompt management UI
- **üîí Secure sharing**: Share prompts via Dev Tunnels with rate limiting
- **üìÅ Local-first**: Your data stays private, stored locally
- **‚öôÔ∏è Production-ready**: Comprehensive logging and error handling

## Usage Options

```bash
# Default: Run both MCP server and web interface
promptbin

# Run only MCP server (for AI tools)
promptbin --mcp

# Run only web interface (standalone)
promptbin --web

# Custom port and options
promptbin --port 8080 --data-dir ~/my-prompts
```

### Development Mode
For development or customization:
```bash
git clone https://github.com/ianphil/promptbin
cd promptbin
uv sync
uv run promptbin
```

## What You Get

- ‚úÖ **Complete MCP server** - Full Model Context Protocol implementation
- ‚úÖ **Auto-launching web UI** - Prompt management interface at localhost:5000
- ‚úÖ **AI tool integration** - Works with Claude Desktop, ChatGPT Desktop
- ‚úÖ **Secure sharing** - Share prompts publicly via Dev Tunnels
- ‚úÖ **File-based storage** - No database required, organized by category
- ‚úÖ **Cross-platform** - Windows, macOS, Linux support
- ‚úÖ **Production-ready** - Rate limiting, logging, graceful shutdown

## Advanced Features

### Secure Public Sharing (Optional)
PromptBin includes Microsoft Dev Tunnels integration for sharing prompts publicly:

```bash
# Install Dev Tunnels CLI
uv run promptbin-install-tunnel

# Authenticate (one-time setup)
devtunnel user login -g

# Start PromptBin, then click "Start Tunnel" in the footer
```

Now your shared prompts get public URLs that work from anywhere. Includes automatic rate limiting and security protections.

For detailed setup instructions, see [TUNNELS.md](TUNNELS.md).

### System Validation
```bash
# Check if your system is ready
uv run promptbin-setup
```

## Add MCP Server to ChatGPT & Claude (Desktop)

Prereq: install deps first (`uv sync`). The apps will launch the MCP server themselves.

ChatGPT Desktop (Mac/Windows):
- Open Settings ‚Üí Developer ‚Üí Model Context Protocol.
- Click ‚ÄúAdd Server‚Äù.
- Name: PromptBin
- Command: `uv`
- Args: `run python mcp_server.py`
- Working directory: path to this repo.

Claude Desktop (Mac/Windows):
- Open Settings ‚Üí Developer ‚Üí Edit Config

```json
"PromptBin": {
            "command": "/Users/ianphil/.local/bin/uv",
            "args": [
                "run",
                "/Users/ianphil/src/promptbin/.venv/bin/python",
                "/Users/ianphil/src/promptbin/mcp_server.py"
            ],
            "workingDirectory": "/Users/ianphil/src/promptbin"
        }
```

Notes:
- After adding, you can list/search prompts via the PromptBin MCP tools. The MCP server also starts the local web UI on `http://127.0.0.1:<port>`.
- If `uv` is not on PATH, replace `uv` with the full path or use your Python venv: `python mcp_server.py`.
