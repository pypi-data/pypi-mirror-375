"""Authentication handler for {{ toolkit_name }}."""

from langchain_tool_server import Auth

# Create an authentication instance
auth = Auth()

# No authentication required - all requests are allowed
# To add authentication, uncomment and customize the example below:

# @auth.authenticate
# async def authenticate(headers: dict, authorization: str = None) -> dict:
#     """Custom authentication handler.
#     
#     Args:
#         headers: Request headers
#         authorization: Authorization header value
#         
#     Returns:
#         dict: User information with 'identity' and optional 'permissions'
#         
#     Raises:
#         auth.exceptions.HTTPException: If authentication fails
#     """
#     if not authorization or not authorization.startswith("Bearer "):
#         raise auth.exceptions.HTTPException(
#             status_code=401,
#             detail="Missing or invalid authorization header"
#         )
#     
#     # Validate token here (JWT, API key, etc.)
#     token = authorization.replace("Bearer ", "")
#     
#     # Return user info if valid
#     return {
#         "identity": "user_id",
#         "permissions": ["read", "write"]
#     }