CLOSE

;####################################################
; Autogenerated Homing PLC for PMAC, DO NOT MODIFY
; Group 2:
;  Axis 1: htype = HSW_HLIM, jdist = -500, post = None
; Group 3:
;  Axis 2: htype = HSW_HLIM, jdist = -500, post = None
; Group 4:
;  Axis 3: htype = HSW_HLIM, jdist = -500, post = None
; Group 5:
;  Axis 4: htype = HSW_HLIM, jdist = -500, post = None
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(17&30)*50+17%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1700
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1701
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1702
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1703
HomingBackupGroup = 0

OPEN PLC17 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1704=i113 P1705=i213 P1706=i313 P1707=i413
;Save the low soft limits to P variables px20..x35
P1720=i114 P1721=i214 P1722=i314 P1723=i414
;Save the home capture flags to P variables px36..x51
MSR0,i912,P1736 MSR1,i912,P1737 MSR4,i912,P1738 MSR5,i912,P1739
;If any are zero then there is probably a macro error
if (P1736=0 or P1737=0 or P1738=0 or P1739=0)
	HomingStatus=StatusInvalid
endif
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1752=P1736^$C P1753=P1737^$C P1754=P1738^$C P1755=P1739^$C
;Save the limit flags to P variables px68..x83
P1768=i124 P1769=i224 P1770=i324 P1771=i424
;Save the current position to P variables px84..x99
P1784=M162 P1785=M262 P1786=M362 P1787=M462
;Clear the soft limits
i113=0 i213=0 i313=0 i413=0
i114=0 i214=0 i314=0 i414=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m145=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		m172=100000000*(i123/ABS(i123))
		cmd "#1J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m140=0) ; At least one motor should not be In Position
		and (m142 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m130=1)
			m172=100000000*(-i123/ABS(i123))
			cmd "#1J^*^-500"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m140=0) ; At least one motor should not be In Position
		and (m142 = 0) ; Following error check
		and (m130=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m130=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
		m172=100000000*(i123/ABS(i123))
		cmd "#1J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m140=0) ; At least one motor should not be In Position
		and (m142 = 0) ; Following error check
		and (m130 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m130 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1784=(P1784-M162)/(I108*32)+-500-(i126/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW0,i912,P1752 m172=100000000*(-i123/ABS(i123))
		cmd "#1J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m140=0) ; At least one motor should not be In Position
		and (m142 = 0) ; Following error check
		and (m130 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m130 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW0,i912,P1736
		cmd "#1hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m140=0) ; At least one motor should not be In Position
		and (m142 = 0) ; Following error check
		and (m130 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m130 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m145=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m245=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		m272=100000000*(i223/ABS(i223))
		cmd "#2J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240=0) ; At least one motor should not be In Position
		and (m242 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m230=1)
			m272=100000000*(-i223/ABS(i223))
			cmd "#2J^*^-500"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240=0) ; At least one motor should not be In Position
		and (m242 = 0) ; Following error check
		and (m230=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
		m272=100000000*(i223/ABS(i223))
		cmd "#2J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240=0) ; At least one motor should not be In Position
		and (m242 = 0) ; Following error check
		and (m230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1785=(P1785-M262)/(I208*32)+-500-(i226/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW1,i912,P1753 m272=100000000*(-i223/ABS(i223))
		cmd "#2J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240=0) ; At least one motor should not be In Position
		and (m242 = 0) ; Following error check
		and (m230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW1,i912,P1737
		cmd "#2hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240=0) ; At least one motor should not be In Position
		and (m242 = 0) ; Following error check
		and (m230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m245=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 4)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=4

	;Clear home flags
	m345=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		m372=100000000*(i323/ABS(i323))
		cmd "#3J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m340=0) ; At least one motor should not be In Position
		and (m342 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m330=1)
			m372=100000000*(-i323/ABS(i323))
			cmd "#3J^*^-500"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m340=0) ; At least one motor should not be In Position
		and (m342 = 0) ; Following error check
		and (m330=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m330=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
		m372=100000000*(i323/ABS(i323))
		cmd "#3J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m340=0) ; At least one motor should not be In Position
		and (m342 = 0) ; Following error check
		and (m330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1786=(P1786-M362)/(I308*32)+-500-(i326/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW4,i912,P1754 m372=100000000*(-i323/ABS(i323))
		cmd "#3J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m340=0) ; At least one motor should not be In Position
		and (m342 = 0) ; Following error check
		and (m330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW4,i912,P1738
		cmd "#3hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m340=0) ; At least one motor should not be In Position
		and (m342 = 0) ; Following error check
		and (m330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m345=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 5)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=5

	;Clear home flags
	m445=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		m472=100000000*(i423/ABS(i423))
		cmd "#4J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440=0) ; At least one motor should not be In Position
		and (m442 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m430=1)
			m472=100000000*(-i423/ABS(i423))
			cmd "#4J^*^-500"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440=0) ; At least one motor should not be In Position
		and (m442 = 0) ; Following error check
		and (m430=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
		m472=100000000*(i423/ABS(i423))
		cmd "#4J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440=0) ; At least one motor should not be In Position
		and (m442 = 0) ; Following error check
		and (m430 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1787=(P1787-M462)/(I408*32)+-500-(i426/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW5,i912,P1755 m472=100000000*(-i423/ABS(i423))
		cmd "#4J^*^-500"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440=0) ; At least one motor should not be In Position
		and (m442 = 0) ; Following error check
		and (m430 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW5,i912,P1739
		cmd "#4hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440=0) ; At least one motor should not be In Position
		and (m442 = 0) ; Following error check
		and (m430 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m445=0)
		HomingStatus=StatusIncomplete
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m142=0)
	cmd "#1J/"
endif
if (m242=0)
	cmd "#2J/"
endif
if (m342=0)
	cmd "#3J/"
endif
if (m442=0)
	cmd "#4J/"
endif
;Restore the high soft limits from P variables px04..x19
i113=P1704 i213=P1705 i313=P1706 i413=P1707
;Restore the low soft limits from P variables px20..x35
i114=P1720 i214=P1721 i314=P1722 i414=P1723
;Restore the home capture flags from P variables px36..x51
MSW0,i912,P1736 MSW1,i912,P1737 MSW4,i912,P1738 MSW5,i912,P1739
;Restore the limit flags to P variables px68..x83
i124=P1768 i224=P1769 i324=P1770 i424=P1771

DISABLE PLC17
CLOSE
