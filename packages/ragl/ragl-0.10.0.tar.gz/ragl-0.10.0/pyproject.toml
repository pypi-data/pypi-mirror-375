[tool.coverage.run]
source = ["ragl"]

[tool.mypy]
files = ["ragl/"]
show_error_codes = true

[tool.ruff]
extend-exclude = ["tests/", "work/"]
#output-format = "json"
line-length = 80

[tool.ruff.lint]
ignore = ["D203", "D212", "D413", "S101"]
extend-select = ["W", "E", "D", "F", "S", "C4", "T20", "RET", "ERA", "PTH"]

[tool.ruff.lint.per-file-ignores]
"ragl/protocols.py" = ["D102"]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools.packages.find]
exclude = ["tests", "work"]

[project]
name = "ragl"
version = "0.10.0"
dependencies = [
    "bleach",
    "numpy",
    "tiktoken",
]
requires-python = ">=3.11"
authors = [
    {name = "Andrew Schenck", email = "aschenck@gmail.com"},
]
description= "ragl: retrieval-augmented generation (RAG) for text."
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
keywords = [
    "ai",
    "artificial-intelligence",
    "embeddings",
    "information-retrieval",
    "llm",
    "large-language-models",
    "machine-learning",
    "nlp",
    "natural-language-processing",
    "rag",
    "retrieval-augmented-generation",
    "text-embedding",
    "semantic-similarity",
    "semantic-search",
    "redis",
    "vector-database",
    "vector-index",
    "vector-search",
    "vector-store",
]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
redis = [
    "redis",
    "redisvl",
]
transformers = [
    "psutil",
    "sentence-transformers",
]
all = [
    "ragl[redis]",
    "ragl[transformers]",
]
test = [
    "ragl[all]",
    "coverage",
    "mypy",
    "pytest",
    "pytest-cov",
    "ruff",
    "types-bleach",
    "types-psutil",
]
