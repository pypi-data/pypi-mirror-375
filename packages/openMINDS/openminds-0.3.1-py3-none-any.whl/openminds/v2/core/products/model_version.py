"""
Structured information on a computational model (version level).
"""

# this file was auto-generated!

from datetime import date

from openminds.base import LinkedMetadata
from openminds.properties import Property


class ModelVersion(LinkedMetadata):
    """
    Structured information on a computational model (version level).
    """

    type_ = "https://openminds.ebrains.eu/core/ModelVersion"
    context = {"@vocab": "https://openminds.ebrains.eu/vocab/"}
    schema_version = "v2.0"

    properties = [
        Property(
            "accessibility",
            "openminds.v2.controlled_terms.ProductAccessibility",
            "accessibility",
            required=True,
            description="Level to which something is accessible to the model version.",
            instructions="Add the accessibility of the data for this research product version.",
        ),
        Property(
            "copyright",
            "openminds.v2.core.Copyright",
            "copyright",
            description="Exclusive and assignable legal right of an originator to reproduce, publish, sell, or distribute the matter and form of a creative work for a defined time period.",
            instructions="Add the copyright information of this research product version.",
        ),
        Property(
            "custodians",
            ["openminds.v2.core.Organization", "openminds.v2.core.Person"],
            "custodian",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="The 'custodian' is a legal person who is responsible for the content and quality of the data, metadata, and/or code of a research product.",
            instructions="Add one or several custodians (person or organization) that are responsible for this research product version.",
        ),
        Property(
            "description",
            str,
            "description",
            formatting="text/markdown",
            multiline=True,
            description="Longer statement or account giving the characteristics of the model version.",
            instructions="If necessary, enter a version specific description (abstract) for this research product version (max. 2000 characters, incl. spaces; no references). If left blank, the research product version will inherit the 'description' of it's corresponding research product.",
        ),
        Property(
            "developers",
            ["openminds.v2.core.Organization", "openminds.v2.core.Person"],
            "developer",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Legal person that creates or improves products or services (e.g., software, applications, etc.).",
            instructions="If necessary, add one or several developers (person or organization) that contributed to the code implementation of this model version. Note that these developers will overwrite the once provided in the model product this version belongs to.",
        ),
        Property(
            "digital_identifier",
            ["openminds.v2.core.DOI", "openminds.v2.core.SWHID"],
            "digitalIdentifier",
            description="Digital handle to identify objects or legal persons.",
            instructions="Add the globally unique and persistent digital identifier of this research product version.",
        ),
        Property(
            "format",
            "openminds.v2.core.ContentType",
            "format",
            required=True,
            description="Method of digitally organizing and structuring data or information.",
            instructions="Add the used content type of this model version.",
        ),
        Property(
            "full_documentation",
            ["openminds.v2.core.DOI", "openminds.v2.core.File", "openminds.v2.core.URL"],
            "fullDocumentation",
            required=True,
            description="Non-abridged instructions, comments, and information for using a particular product.",
            instructions="Add the DOI, file or URL that points to a full documentation of this research product version.",
        ),
        Property(
            "full_name",
            str,
            "fullName",
            formatting="text/plain",
            description="Whole, non-abbreviated name of the model version.",
            instructions="If necessary, enter a version specific descriptive full name (title) for this research product version. If left blank, the research product version will inherit the 'fullName' of it's corresponding research product.",
        ),
        Property(
            "funding",
            "openminds.v2.core.Funding",
            "funding",
            multiple=True,
            unique_items=True,
            min_items=1,
            required=True,
            description="Money provided by a legal person for a particular purpose.",
            instructions="Add all funding information of this research product version.",
        ),
        Property(
            "homepage",
            "openminds.v2.core.URL",
            "homepage",
            description="Main website of the model version.",
            instructions="Add the uniform resource locator (URL) to the homepage of this research product version.",
        ),
        Property(
            "how_to_cite",
            str,
            "howToCite",
            formatting="text/markdown",
            multiline=True,
            description="Preferred format for citing a particular object or legal person.",
            instructions="Enter the preferred citation text for this research product version. Leave blank if citation text can be extracted from the assigned digital identifier.",
        ),
        Property(
            "input_data",
            ["openminds.v2.core.DOI", "openminds.v2.core.File", "openminds.v2.core.FileBundle"],
            "inputData",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Data that is put into a process or machine.",
            instructions="Add the data that was used as input for this model version.",
        ),
        Property(
            "is_alternative_version_of",
            "openminds.v2.core.ModelVersion",
            "isAlternativeVersionOf",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Reference to an original form where the essence was preserved, but presented in an alternative form.",
            instructions="Add all model versions that can be used alternatively to this model version.",
        ),
        Property(
            "is_new_version_of",
            "openminds.v2.core.ModelVersion",
            "isNewVersionOf",
            description="Reference to a previous (potentially outdated) particular form of something.",
            instructions="Add the model version preceding this model version.",
        ),
        Property(
            "keywords",
            str,
            "keyword",
            multiple=True,
            unique_items=True,
            min_items=1,
            max_items=5,
            formatting="text/plain",
            description="Significant word or concept that are representative of the model version.",
            instructions="Enter custom keywords to this research product version.",
        ),
        Property(
            "licenses",
            "openminds.v2.core.License",
            "license",
            multiple=True,
            unique_items=True,
            min_items=1,
            required=True,
            description="Grant by a party to another party as an element of an agreement between those parties that permits to do, use, or own something.",
            instructions="Add at least one license for this model version.",
        ),
        Property(
            "other_contributions",
            "openminds.v2.core.Contribution",
            "otherContribution",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Giving or supplying of something (such as money or time) as a part or share other than what is covered elsewhere.",
            instructions="Add the contributions for each involved person or organization going beyond being an author, custodian or developer of this research product version.",
        ),
        Property(
            "output_data",
            ["openminds.v2.core.DOI", "openminds.v2.core.File", "openminds.v2.core.FileBundle"],
            "outputData",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Data that comes out of, is delivered or produced by a process or machine.",
            instructions="Add the data that was generated as output of this model version.",
        ),
        Property(
            "related_publications",
            ["openminds.v2.core.DOI", "openminds.v2.core.ISBN"],
            "relatedPublication",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Reference to something that was made available for the general public to see or buy.",
            instructions="Add further publications besides the documentation (e.g. an original research article) providing the original context for the production of this research product version.",
        ),
        Property(
            "release_date",
            date,
            "releaseDate",
            required=True,
            description="Fixed date on which a product is due to become or was made available for the general public to see or buy",
            instructions="Enter the date (actual or intended) of the first broadcast/publication of this research product version.",
        ),
        Property(
            "repository",
            "openminds.v2.core.FileRepository",
            "repository",
            description="Place, room, or container where something is deposited or stored.",
            instructions="Add the file repository of this research product version.",
        ),
        Property(
            "short_name",
            str,
            "shortName",
            formatting="text/plain",
            required=True,
            description="Shortened or fully abbreviated name of the model version.",
            instructions="Enter a short name (alias) for this research product version (max. 30 characters, no space).",
        ),
        Property(
            "support_channels",
            str,
            "supportChannel",
            multiple=True,
            unique_items=True,
            min_items=1,
            formatting="text/plain",
            description="Way of communication used to interact with users or customers.",
            instructions="Enter all channels through which a user can receive support for handling this research product.",
        ),
        Property(
            "version_identifier",
            str,
            "versionIdentifier",
            formatting="text/plain",
            required=True,
            description="Term or code used to identify the version of something.",
            instructions="Enter the version identifier of this research product version.",
        ),
        Property(
            "version_innovation",
            str,
            "versionInnovation",
            formatting="text/markdown",
            multiline=True,
            required=True,
            description="Documentation on what changed in comparison to a previously published form of something.",
            instructions="Enter a summary/description of the novelties/peculiarities of this research product version in comparison to other versions of it's research product. If this research product version is the first released version, you can enter the following disclaimer 'This is the first version of this research product.'",
        ),
    ]

    def __init__(
        self,
        id=None,
        accessibility=None,
        copyright=None,
        custodians=None,
        description=None,
        developers=None,
        digital_identifier=None,
        format=None,
        full_documentation=None,
        full_name=None,
        funding=None,
        homepage=None,
        how_to_cite=None,
        input_data=None,
        is_alternative_version_of=None,
        is_new_version_of=None,
        keywords=None,
        licenses=None,
        other_contributions=None,
        output_data=None,
        related_publications=None,
        release_date=None,
        repository=None,
        short_name=None,
        support_channels=None,
        version_identifier=None,
        version_innovation=None,
    ):
        return super().__init__(
            id=id,
            accessibility=accessibility,
            copyright=copyright,
            custodians=custodians,
            description=description,
            developers=developers,
            digital_identifier=digital_identifier,
            format=format,
            full_documentation=full_documentation,
            full_name=full_name,
            funding=funding,
            homepage=homepage,
            how_to_cite=how_to_cite,
            input_data=input_data,
            is_alternative_version_of=is_alternative_version_of,
            is_new_version_of=is_new_version_of,
            keywords=keywords,
            licenses=licenses,
            other_contributions=other_contributions,
            output_data=output_data,
            related_publications=related_publications,
            release_date=release_date,
            repository=repository,
            short_name=short_name,
            support_channels=support_channels,
            version_identifier=version_identifier,
            version_innovation=version_innovation,
        )
