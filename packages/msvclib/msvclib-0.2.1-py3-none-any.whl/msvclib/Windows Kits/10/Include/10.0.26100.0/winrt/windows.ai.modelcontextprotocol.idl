//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        runtimeclass Package;
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct WindowId WindowId;
    }
}
namespace Windows
{
    namespace AI
    {
        namespace ModelContextProtocol
        {
            apicontract ModelContextProtocolContract;

            interface IModelContextProtocolClientContext;

            interface IModelContextProtocolClientContextFactory;

            interface IModelContextProtocolServer;

            interface IModelContextProtocolServerCatalog;

            interface IModelContextProtocolServerCatalogFactory;

            interface IModelContextProtocolServerInfo;

            interface IModelContextProtocolServerInfoFactory;

            runtimeclass ModelContextProtocolClientContext;

            runtimeclass ModelContextProtocolServerCatalog;

            runtimeclass ModelContextProtocolServerInfo;
        }
    }
}

// Generic instantiations

// Type definition
namespace Windows
{
    namespace AI
    {
        namespace ModelContextProtocol
        {
            [contractversion(1.0)]
            apicontract ModelContextProtocolContract
            {
            }

            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [exclusiveto(Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext)]
            [experimental]
            [uuid(5BD93F10-C0AA-4963-B4C5-AC4A69BDBB33)]
            interface IModelContextProtocolClientContext : IInspectable
            {
                [propput] HRESULT OwnerWindowId([in] Windows.UI.WindowId value);
                [propget] HRESULT OwnerWindowId([out] [retval] Windows.UI.WindowId* value);
            }

            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [exclusiveto(Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext)]
            [experimental]
            [uuid(EFB2BA31-148C-5AD7-AB8F-4F0E6154FEDB)]
            interface IModelContextProtocolClientContextFactory : IInspectable
            {
            }

            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [experimental]
            [uuid(9D78431D-533F-55DD-9692-DC1462F0BB39)]
            interface IModelContextProtocolServer : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [propget] HRESULT Command([out] [retval] HSTRING* value);
                HRESULT GetCommandArguments([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] HSTRING** result);
                [propget] HRESULT Info([out] [retval] Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo** value);
            }

            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [exclusiveto(Windows.AI.ModelContextProtocol.ModelContextProtocolServerCatalog)]
            [experimental]
            [uuid(062B8A5E-B124-4490-A1BA-4692875DF83E)]
            interface IModelContextProtocolServerCatalog : IInspectable
            {
                HRESULT GetServerInfos([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo*** result);
                HRESULT ActivateServer([in] GUID serverId, [in] Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext* client, [out] [retval] Windows.AI.ModelContextProtocol.IModelContextProtocolServer** result);
                HRESULT CreateClientContext([out] [retval] Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext** result);
            }

            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [exclusiveto(Windows.AI.ModelContextProtocol.ModelContextProtocolServerCatalog)]
            [experimental]
            [uuid(6E5D0E8F-77E1-5A9D-B980-0779B3B128BA)]
            interface IModelContextProtocolServerCatalogFactory : IInspectable
            {
            }

            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [exclusiveto(Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo)]
            [experimental]
            [uuid(503102BA-831B-47E5-B97B-E7B06209DD8B)]
            interface IModelContextProtocolServerInfo : IInspectable
            {
                [propget] HRESULT Id([out] [retval] GUID* value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                HRESULT GetPackage([out] [retval] Windows.ApplicationModel.Package** result);
            }

            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [exclusiveto(Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo)]
            [experimental]
            [uuid(C93EE14E-E477-5A65-BD80-2A7860DE7EAD)]
            interface IModelContextProtocolServerInfoFactory : IInspectable
            {
            }

            [composable(Windows.AI.ModelContextProtocol.IModelContextProtocolClientContextFactory, public, Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ModelContextProtocolClientContext
            {
                [default] [experimental] interface Windows.AI.ModelContextProtocol.IModelContextProtocolClientContext;
            }

            [composable(Windows.AI.ModelContextProtocol.IModelContextProtocolServerCatalogFactory, public, Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ModelContextProtocolServerCatalog
            {
                [default] [experimental] interface Windows.AI.ModelContextProtocol.IModelContextProtocolServerCatalog;
            }

            [composable(Windows.AI.ModelContextProtocol.IModelContextProtocolServerInfoFactory, public, Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [contract(Windows.AI.ModelContextProtocol.ModelContextProtocolContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ModelContextProtocolServerInfo
            {
                [default] [experimental] interface Windows.AI.ModelContextProtocol.IModelContextProtocolServerInfo;
            }
        }
    }
}
