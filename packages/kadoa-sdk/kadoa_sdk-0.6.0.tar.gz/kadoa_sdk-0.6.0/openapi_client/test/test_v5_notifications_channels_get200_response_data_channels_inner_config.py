# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v5_notifications_channels_get200_response_data_channels_inner_config import V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig

class TestV5NotificationsChannelsGet200ResponseDataChannelsInnerConfig(unittest.TestCase):
    """V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig:
        """Test V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig`
        """
        model = V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig()
        if include_optional:
            return V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig(
                recipients = [user@example.com, admin@company.com],
                var_from = 'notifications@kadoa.com',
                webhook_url = 'https://api.example.com/webhook',
                slack_channel_id = 'C1234567890',
                slack_channel_name = 'general',
                http_method = 'POST',
                auth = openapi_client.models.webhook_channel_config_auth.WebhookChannelConfig_auth(
                    type = 'bearer', 
                    token = '', 
                    username = '', 
                    password = '', 
                    headers = {
                        'key' : ''
                        }, ),
                connection_id = 'conn_123456789',
                endpoint = 'wss://example.com/ws'
            )
        else:
            return V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig(
                recipients = [user@example.com, admin@company.com],
                webhook_url = 'https://api.example.com/webhook',
                slack_channel_id = 'C1234567890',
                slack_channel_name = 'general',
                http_method = 'POST',
        )
        """

    def testV5NotificationsChannelsGet200ResponseDataChannelsInnerConfig(self):
        """Test V5NotificationsChannelsGet200ResponseDataChannelsInnerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
