{  
  "docker": {
    "checking_environment": "🔍 Vérification de l'environnement Docker...",  
    "docker_installed": "✅ Docker est installé",  
    "docker_not_installed": "❌ Docker n'est pas installé",  
    "docker_not_in_path": "❌ Docker n'est pas installé ou n'est pas dans le PATH",  
    "docker_running": "✅ Le service Docker fonctionne",  
    "docker_not_running": "❌ Le service Docker ne fonctionne pas, veuillez démarrer Docker Desktop",  
    "cannot_connect_docker": "❌ Impossible de se connecter au service Docker",  
    "docker_compose_available": "✅ Docker Compose est disponible",  
    "docker_compose_not_available": "❌ Docker Compose n'est pas disponible",  
    "docker_compose_not_installed": "❌ Docker Compose n'est pas installé",  
    "compose_file_exists": "✅ docker-compose.yml existe",  
    "compose_file_not_exists": "❌ docker-compose.yml n'existe pas",  
    "dev_compose_file_exists": "✅ docker-compose.dev.yml existe",  
    "dev_compose_file_not_exists": "ℹ️ docker-compose.dev.yml n'existe pas (mode développement non disponible)",  
    "aiforge_image_exists": "✅ L'image AIForge existe",  
    "aiforge_image_not_exists": "ℹ️ L'image AIForge n'existe pas, doit être construite",  
    "cannot_check_image_status": "⚠️ Impossible de vérifier le statut de l'image AIForge",  
    "building_images": "🔨 Vérification et construction des images nécessaires...",  
    "image_exists_skip_build": "✅ L'image AIForge existe, construction ignorée",  
    "start_building": "📦 Début de la construction de l'image AIForge...",  
    "build_time_notice": "ℹ️ La première construction peut prendre 5-10 minutes, veuillez patienter...",  
    "build_progress": "📦 Progression de la construction :",  
    "build_success": "✅ Construction de l'image réussie",  
    "build_failed": "❌ Échec de la construction de l'image",  
    "build_exception": "❌ Exception dans le processus de construction : {error}",  
    "starting_services": "🚀 Démarrage intégré d'AIForge Docker...",  
    "docker_not_installed_help": "💡 Télécharger : https://www.docker.com/products/docker-desktop",  
    "docker_not_running_help": "💡 Veuillez démarrer Docker Desktop et attendre qu'il démarre complètement",  
    "docker_compose_not_available_msg": "❌ Docker Compose n'est pas disponible",  
    "compose_file_not_exists_msg": "❌ Le fichier docker-compose.yml n'existe pas",  
    "dev_mode_fallback": "💡 Le mode production sera utilisé pour le démarrage",  
    "cleaning_old_containers": "🧹 Nettoyage des anciens conteneurs...",  
    "dev_mode_start": "🔧 Démarrage en mode développement (rechargement à chaud du code)",  
    "production_mode_start": "🔨 Démarrage en mode production",  
    "searxng_enabled": "🔍 Service de recherche SearXNG activé",  
    "searxng_not_enabled": "⚠️ Service de recherche SearXNG non activé",  
    "service_start_success": "✅ Services Docker démarrés avec succès",  
    "waiting_services": "⏳ Attente du démarrage complet des services...",  
    "startup_complete": "🎉 Démarrage intégré d'AIForge Docker terminé !",  
    "ready_to_use": "💡 Vous pouvez maintenant commencer à utiliser AIForge",  
    "service_start_failed": "❌ Échec du démarrage du service Docker : {error}",  
    "startup_exception": "❌ Exception dans le processus de démarrage : {error}",  
    "stopping_services": "🛑 Arrêt des services AIForge Docker...",  
    "stop_success": "✅ Services Docker arrêtés avec succès",  
    "stop_failed": "❌ Échec de l'arrêt du service Docker : {error}",  
    "service_status": "📊 Statut du service AIForge Docker :",  
    "cannot_get_status": "❌ Impossible d'obtenir le statut du service",  
    "cleaning_resources": "🧹 Nettoyage des ressources AIForge Docker...",  
    "cleanup_success": "✅ Nettoyage des ressources Docker terminé",  
    "cleanup_failed": "❌ Échec du nettoyage : {error}",  
    "deep_cleanup_start": "🔥 Exécution du nettoyage en profondeur d'AIForge...",  
    "deep_cleanup_warning": "⚠️ Ceci supprimera les ressources Docker liées à AIForge mais préservera les images de base Python, SearXNG, Nginx",  
    "stopping_all_services": "🛑 Arrêt de tous les services...",  
    "cleaning_built_images": "🗑️ Nettoyage des images construites d'AIForge...",  
    "cleaning_build_cache": "🧹 Nettoyage du cache de construction...",  
    "cleaning_dangling_resources": "🌐 Nettoyage des ressources pendantes...",  
    "deep_cleanup_success": "✅ Nettoyage en profondeur terminé, images de base préservées",  
    "deep_cleanup_failed": "❌ Échec du nettoyage en profondeur : {error}",  
    "removed_images": "✅ {count} images construites d'AIForge supprimées",  
    "no_images_to_remove": "ℹ️ Aucune image construite d'AIForge trouvée à nettoyer",  
    "cleanup_images_error": "⚠️ Erreur lors du nettoyage des images construites : {error}",  
    "health_check": "🏥 Vérification de l'état du service :",  
    "service_running": "✅ {service} : Fonctionne normalement",  
    "service_not_running": "❌ {service} : {status}",  
    "service_status_unknown": "⚠️ {service} : Statut inconnu",  
    "service_urls": "🌐 URLs d'accès au service :",  
    "aiforge_web_url": "- AIForge Web : http://localhost:8000",  
    "searxng_url": "- SearXNG : http://localhost:55510",  
    "admin_panel_url": "- Panneau d'administration : http://localhost:8000/admin",  
    "pyyaml_not_installed": "⚠️ PyYAML non installé, mise à jour de la configuration SearXNG ignorée",  
    "searxng_config_not_exists": "ℹ️ Le fichier de configuration SearXNG n'existe pas, mise à jour du format ignorée",  
    "searxng_config_updated": "✅ Configuration SearXNG mise à jour pour supporter plusieurs formats de sortie",  
    "searxng_config_latest": "✅ La configuration SearXNG est à jour",  
    "searxng_config_update_failed": "⚠️ Échec de la mise à jour de la configuration SearXNG : {error}",  
    "user_interrupted": "⚠️ L'utilisateur a interrompu l'opération",  
    "execution_exception": "❌ Exception d'exécution : {error}",  
    "cli": {  
      "description": "Gestion Intégrée des Services AIForge Docker",  
      "action_help": "Type d'action",  
      "dev_help": "Démarrage en mode développement (rechargement à chaud du code)",  
      "searxng_help": "Activer le service de recherche SearXNG",  
      "epilog": "Exemples d'Utilisation Intégrée:\n    # Démarrage en mode production en un clic (sans SearXNG)\n    aiforge-docker start\n\n    # Démarrage en mode production en un clic (avec SearXNG)\n    aiforge-docker start --searxng\n\n    # Démarrage en mode développement en un clic (rechargement à chaud du code, avec SearXNG)\n    aiforge-docker start --dev --searxng\n\n    # Arrêter tous les services\n    aiforge-docker stop\n\n    # Voir l'état du service\n    aiforge-docker status\n\n    # Nettoyer les ressources Docker\n    aiforge-docker cleanup\n\n    # Nettoyage en profondeur des ressources\n    aiforge-docker deep-cleanup\n\nExemples d'Utilisation de la Version de Développement:\n    # Utiliser le script de démarrage (recommandé)\n    ./aiforge-docker.sh start --dev\n    ./aiforge-docker.sh deep-cleanup\n\nParamètres de Langue:\n    # Spécifier la langue dynamiquement via les variables d'environnement\n    AIFORGE_LOCALE=en ./aiforge-docker.sh start\n    AIFORGE_LOCALE=ja ./aiforge-docker.sh status\n    \n    # Windows PowerShell\n    $env:AIFORGE_LOCALE=\"en\"; ./aiforge-docker.bat start\n\nFonctionnalités:\n    ✅ Détection automatique de l'environnement Docker\n    ✅ Construction intelligente d'images (éviter les constructions en double)\n    ✅ Progression de construction en temps réel\n    ✅ Activation optionnelle de SearXNG\n    ✅ Vérifications de santé des services\n    ✅ Nettoyage des ressources en un clic\n    ✅ Support multilingue (zh|en|ar|de|es|fr|hi|ja|ko|pt|ru|vi)"  
    }  
  }
}