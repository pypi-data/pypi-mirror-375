# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v4_workflows_setup_post_request import V4WorkflowsSetupPostRequest

class TestV4WorkflowsSetupPostRequest(unittest.TestCase):
    """V4WorkflowsSetupPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V4WorkflowsSetupPostRequest:
        """Test V4WorkflowsSetupPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V4WorkflowsSetupPostRequest`
        """
        model = V4WorkflowsSetupPostRequest()
        if include_optional:
            return V4WorkflowsSetupPostRequest(
                link = 'https://example.com',
                entity = 'data',
                job_id = '12345',
                interval = 'daily',
                tags = ["tag1","tag2"],
                schedules = ["2023-10-01T10:00:00.000Z"],
                location = openapi_client.models._v4_workflows_setup_post_request_location._v4_workflows_setup_post_request_location(
                    type = 'auto', 
                    iso_code = 'DE', ),
                monitoring = openapi_client.models._v4_workflows_setup_post_request_monitoring._v4_workflows_setup_post_request_monitoring(
                    enabled = True, ),
                limit = 100
            )
        else:
            return V4WorkflowsSetupPostRequest(
        )
        """

    def testV4WorkflowsSetupPostRequest(self):
        """Test V4WorkflowsSetupPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
