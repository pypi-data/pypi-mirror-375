[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "decontx-python"
version = "0.2.0"
description = "Python implementation of DecontX for removing ambient RNA contamination from single-cell RNA-seq data"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"

authors = [
    {name = "Nicolas Ruffini", email = "nicolas.ruffini@posteo.de"},
]

maintainers = [
    {name = "Nicolas Ruffini", email = "nicolas.ruffini@posteo.de"},
]

keywords = [
    "single-cell",
    "RNA-seq", 
    "decontamination",
    "ambient-RNA",
    "scanpy",
    "bioinformatics",
    "bayesian",
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]

dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0", 
    "scikit-learn>=1.0.0",
    "scanpy>=1.8.0",
    "anndata>=0.8.0",
    "numba>=0.55.0",
    "tqdm>=4.60.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=0.991",
    "pre-commit>=2.20",
]

plotting = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]

test = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
]

docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]

all = [
    "decontx-python[dev,plotting,test,docs]"
]

[project.urls]
Homepage = "https://github.com/NiRuff/decontx-python"
Documentation = "https://github.com/NiRuff/decontx-python"
Repository = "https://github.com/NiRuff/decontx-python"
"Bug Tracker" = "https://github.com/NiRuff/decontx-python/issues"
Changelog = "https://github.com/NiRuff/decontx-python/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["decontx"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/tests",
    "/.gitignore",
    "/.pre-commit-config.yaml",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--cov=decontx",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["decontx"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]