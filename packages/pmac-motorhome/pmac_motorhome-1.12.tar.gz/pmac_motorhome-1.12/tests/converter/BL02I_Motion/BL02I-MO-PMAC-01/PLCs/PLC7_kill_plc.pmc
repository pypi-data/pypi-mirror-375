;####################################################
; DO NOT MODIFY: File created from src/PLC7_kill_plc.psub
;####################################################

CLOSE

;###########################################################
; kill_when_idle.pmc
; Original Author: Pete Leicester
;
; NB On a VME PMAC make sure you load PLC3_micromech_enable.pmc otherwise the
; amplifiers will not be powered down (this is not required for geobricks).
;
; PLC to kill a motor after a defined period of inactivity. 
; Macros:
; NAXIS
;   The number of axis on the controller 1..32 (8 for a typical geobrick, 32 for a full PMAC)
;   This defines the highest numbered axis that may be powered down.  
; TM1..TM32
;   Define timeout period in milliseconds after which the axis will be powered 
;   down provided it has been idle for the whole period (note clock resolution below).
;   Set to zero to leave the amp powered continously. 
;   Set to one for (almost) immediate power down on motor stop.
;   Set to number of milliseconds for delayed power down after motor stops.
;
; copied from pmacUtil and modified in mxMasterConfig
; to include running_program_bit in the verifications
;###########################################################


; Define timeout period in milliseconds 
P701 = 0
P702 = 0
P703 = 0
P704 = 0
P705 = 0
P706 = 0
P707 = 0
P708 = 1
P709 = 1
P710 = 1
P711 = 0
P712 = 0
P713 = 0
P714 = 0
P715 = 0
P716 = 0
P717 = 10
P718 = 10
P719 = 10
P720 = 0
P721 = 0
P722 = 0
P723 = 0
P724 = 0
P725 = 10
P726 = 10
P727 = 10
P728 = 0
P729 = 1
P730 = 1
P731 = 1
P732 = 1

; used for storing current axis number
#define axis_number           P700

; defines timeout period in milliseconds (note clock resolution below)
; use axis_number to calculate the P variable to look in to get timeout period.
#define timeout_period        P(axis_number + 700)

; zero velocity bit Mxx33
#define zero_velocity_bit     M(axis_number*100 + 33)

; running program bit Mxx37
#define running_program_bit   M(axis_number*100 + 37)

; amplifier enabled bit Mxx39
#define amplifier_enabled     M(axis_number*100 + 39)

; in position bit Mxx40
#define in_position_bit       M(axis_number*100 + 40)

; time counters on P765-P796, one per axis
#define time_counter          P(axis_number + 764)

; timer
#define timer i(5111+(7&30)*50+7%2)
#define millisec_conversion   8388608/i10

#define kill_axis             &COMMAND"K"

; define clock resolution in milliseconds
#define clock_tick              500

open plc 7
clear

if (timer < 0)
    timer = clock_tick * millisec_conversion
     
    ; Loop through all axis
    axis_number = 1
    WHILE(axis_number !> 32)
        if (timeout_period>0)
            if (in_position_bit = 1 And running_program_bit = 0 And zero_velocity_bit = 1 And amplifier_enabled = 1)
                ; motor is stationary with amp on
                time_counter = time_counter + clock_tick
                if (time_counter !< timeout_period)
                    ; motor was stationary and enabled for whole timeout period so kill the motor
                    ADDRESS#axis_number
                    kill_axis
                    time_counter=0
                endif
            else
                ; motor not stationary or amp is off so reset the time counter
                time_counter=0
            endif
        endif
        axis_number=axis_number+1
    ENDWHILE
endif

CLOSE

ENABLE PLC 7
