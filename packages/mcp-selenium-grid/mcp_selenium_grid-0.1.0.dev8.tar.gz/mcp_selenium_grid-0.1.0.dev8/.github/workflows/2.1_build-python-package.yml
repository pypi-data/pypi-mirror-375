name: Build Python Package

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        type: string
      publish:
        description: 'Whether to publish the package (true/false)'
        required: false
        default: false
        type: boolean
      upload-github-release:
        description: 'Whether to upload the built package to a GitHub Release (true/false)'
        required: false
        default: false
        type: boolean
    outputs:
      version:
        description: 'Extracted version from pyproject.toml'
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: pypi-publishing
    permissions:
      id-token: write  # Required for trusted publishing to PyPI
      contents: read    # Required by actions/checkout and pypa publisher
    env:
      UV_SYSTEM_PYTHON: 1
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Version from pyproject.toml
        uses: ./.github/actions/get-version
        id: get_version

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml
            uv.lock

      - name: Build package
        run: uv build

      - name: Publish package to PyPI (trusted publishing)
        if: ${{ inputs.publish == true }}
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true  # Optional, logs more info

      - name: Upload Python package to GitHub Release
        if: ${{ inputs.upload-github-release == true }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
