# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_validation_request_body import DataValidationRequestBody

class TestDataValidationRequestBody(unittest.TestCase):
    """DataValidationRequestBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataValidationRequestBody:
        """Test DataValidationRequestBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataValidationRequestBody`
        """
        model = DataValidationRequestBody()
        if include_optional:
            return DataValidationRequestBody(
                custom_rules = [
                    openapi_client.models.dynamic_rule_config.DynamicRuleConfig(
                        name = '', 
                        description = '', 
                        rule_type = 'custom_sql', 
                        target_columns = [
                            ''
                            ], 
                        parameters = openapi_client.models.dynamic_rule_config_parameters.DynamicRuleConfig_parameters(
                            pattern = '', 
                            flags = '', 
                            sql = '', 
                            prompt = '', 
                            params = [
                                null
                                ], ), )
                    ],
                used_prompt = '',
                skip_library_rules = True,
                dry_run = True,
                strategy = 'ISOLATED',
                is_workflow_triggered = True
            )
        else:
            return DataValidationRequestBody(
        )
        """

    def testDataValidationRequestBody(self):
        """Test DataValidationRequestBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
