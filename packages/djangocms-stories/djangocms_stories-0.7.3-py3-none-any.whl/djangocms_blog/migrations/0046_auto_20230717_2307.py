# Generated by Django 3.2.19 on 2023-07-17 23:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("filer", "0015_alter_file_owner_alter_file_polymorphic_ctype_and_more"),
        ("djangocms_blog", "0045_auto_20230314_0747"),
    ]

    operations = [
        migrations.AddField(
            model_name="blogconfig",
            name="default_image_full",
            field=models.ForeignKey(
                help_text="If left empty the image size will have to be set for every newly created post.",
                null=True,
                blank=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_images_full",
                to="filer.thumbnailoption",
                verbose_name="Default size of full images",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="default_image_thumbnail",
            field=models.ForeignKey(
                help_text="If left empty the thumbnail image size will have to be set for every newly created post.",
                null=True,
                blank=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_images_thumbnail",
                to="filer.thumbnailoption",
                verbose_name="Default size of thumbnail images",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="gplus_author",
            field=models.CharField(
                blank=True, default="get_author_schemaorg", max_length=200, verbose_name="Schema.org author name"
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="gplus_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("Article", "Article"),
                    ("Blog", "Blog"),
                    ("WebPage", "Page"),
                    ("WebSite", "WebSite"),
                    ("Event", "Event"),
                    ("Product", "Product"),
                    ("Place", "Place"),
                    ("Person", "Person"),
                    ("Book", "Book"),
                    ("LocalBusiness", "LocalBusiness"),
                    ("Organization", "Organization"),
                    ("Review", "Review"),
                ],
                default="Blog",
                max_length=200,
                verbose_name="Schema.org type",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="menu_empty_categories",
            field=models.BooleanField(
                default=True,
                help_text="Show categories with no post attached in the menu",
                verbose_name="Show empty categories in menu",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="menu_structure",
            field=models.CharField(
                choices=[
                    ("complete", "Categories and posts"),
                    ("categories", "Categories only"),
                    ("posts", "Posts only"),
                    ("none", "None"),
                ],
                default="complete",
                help_text="Structure of the django CMS menu",
                max_length=200,
                verbose_name="Menu structure",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="object_type",
            field=models.CharField(
                blank=True,
                choices=[("Article", "Article"), ("Website", "Website")],
                default="Article",
                max_length=200,
                verbose_name="Object type",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="og_app_id",
            field=models.CharField(blank=True, default="", max_length=200, verbose_name="Facebook application ID"),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="og_author",
            field=models.CharField(
                blank=True, default="get_author_name", max_length=200, verbose_name="Facebook author"
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="og_author_url",
            field=models.CharField(
                blank=True, default="get_author_url", max_length=200, verbose_name="Facebook author URL"
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="og_profile_id",
            field=models.CharField(blank=True, default="", max_length=200, verbose_name="Facebook profile ID"),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="og_publisher",
            field=models.CharField(blank=True, default="", max_length=200, verbose_name="Facebook page URL"),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="og_type",
            field=models.CharField(
                blank=True,
                choices=[("Article", "Article"), ("Website", "Website")],
                default="Article",
                max_length=200,
                verbose_name="Facebook type",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="paginate_by",
            field=models.SmallIntegerField(
                default=10,
                help_text="When paginating list views, how many articles per page?",
                null=True,
                verbose_name="Paginate size",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="send_knock_create",
            field=models.BooleanField(
                default=False,
                help_text="Emits a desktop notification -if enabled- when publishing a new post",
                verbose_name="Send notifications on post publish",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="send_knock_update",
            field=models.BooleanField(
                default=False,
                help_text="Emits a desktop notification -if enabled- when editing a published post",
                verbose_name="Send notifications on post update",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="set_author",
            field=models.BooleanField(default=True, verbose_name="Set author by default"),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="sitemap_changefreq",
            field=models.CharField(
                choices=[
                    ("always", "always"),
                    ("hourly", "hourly"),
                    ("daily", "daily"),
                    ("weekly", "weekly"),
                    ("monthly", "monthly"),
                    ("yearly", "yearly"),
                    ("never", "never"),
                ],
                default="monthly",
                help_text="Changefreq attribute for sitemap items",
                max_length=12,
                verbose_name="Sitemap changefreq",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="sitemap_priority",
            field=models.DecimalField(
                decimal_places=3,
                default="0.5",
                help_text="Priority attribute for sitemap items",
                max_digits=5,
                verbose_name="Sitemap priority",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="template_prefix",
            field=models.CharField(
                default="",
                help_text="Alternative directory to load the blog templates from",
                max_length=200,
                blank=True,
                verbose_name="Template prefix",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="twitter_author",
            field=models.CharField(
                blank=True, default="get_author_twitter", max_length=200, verbose_name="Twitter author handle"
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="twitter_site",
            field=models.CharField(blank=True, default="", max_length=200, verbose_name="Twitter site handle"),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="twitter_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("summary", "Summary Card"),
                    ("summary_large_image", "Summary Card with Large Image"),
                    ("product", "Product"),
                    ("photo", "Photo"),
                    ("player", "Player"),
                    ("app", "App"),
                ],
                default="summary",
                max_length=200,
                verbose_name="Twitter type",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="url_patterns",
            field=models.CharField(
                blank=True,
                choices=[
                    ("full_date", "Full date"),
                    ("short_date", "Year /  Month"),
                    ("category", "Category"),
                    ("slug", "Just slug"),
                ],
                default="full_date",
                max_length=12,
                verbose_name="Permalink structure",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="urlconf",
            field=models.CharField(
                choices=[
                    ("djangocms_blog.urls", "Blog: Blog list at root url of blog"),
                    ("djangocms_blog.urls_hub", "Content hub: Category list at root url of blog"),
                ],
                default="djangocms_blog.urls",
                max_length=200,
                verbose_name="URL config",
            ),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="use_abstract",
            field=models.BooleanField(default=True, verbose_name="Use abstract field"),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="use_placeholder",
            field=models.BooleanField(default=True, verbose_name="Use placeholder and plugins for article body"),
        ),
        migrations.AddField(
            model_name="blogconfig",
            name="use_related",
            field=models.SmallIntegerField(
                choices=[(0, "No"), (1, "Yes, from this blog config"), (2, "Yes, from this site")],
                default=1,
                verbose_name="Enable related posts",
            ),
        ),
        migrations.AlterField(
            model_name="authorentriesplugin",
            name="app_config",
            field=models.ForeignKey(
                help_text="When selecting a value, the form is reloaded to get the updated default",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="djangocms_blog.blogconfig",
                verbose_name="app. config",
            ),
        ),
        migrations.AlterField(
            model_name="blogcategory",
            name="app_config",
            field=models.ForeignKey(
                help_text="When selecting a value, the form is reloaded to get the updated default",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="djangocms_blog.blogconfig",
                verbose_name="app. config",
            ),
        ),
        migrations.AlterField(
            model_name="blogconfig",
            name="app_data",
            field=models.JSONField(default={}),
        ),
        migrations.AlterField(
            model_name="blogconfigtranslation",
            name="app_title",
            field=models.CharField(default="Blog", max_length=200, verbose_name="application title"),
        ),
        migrations.AlterField(
            model_name="blogconfigtranslation",
            name="object_name",
            field=models.CharField(default="Article", max_length=200, verbose_name="object name"),
        ),
        migrations.AlterField(
            model_name="genericblogplugin",
            name="app_config",
            field=models.ForeignKey(
                help_text="When selecting a value, the form is reloaded to get the updated default",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="djangocms_blog.blogconfig",
                verbose_name="app. config",
            ),
        ),
        migrations.AlterField(
            model_name="latestpostsplugin",
            name="app_config",
            field=models.ForeignKey(
                help_text="When selecting a value, the form is reloaded to get the updated default",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="djangocms_blog.blogconfig",
                verbose_name="app. config",
            ),
        ),
        migrations.AlterField(
            model_name="post",
            name="app_config",
            field=models.ForeignKey(
                help_text="When selecting a value, the form is reloaded to get the updated default",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="djangocms_blog.blogconfig",
                verbose_name="app. config",
            ),
        ),
    ]
