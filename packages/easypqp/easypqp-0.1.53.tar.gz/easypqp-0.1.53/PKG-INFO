Metadata-Version: 2.4
Name: easypqp
Version: 0.1.53
Summary: EasyPQP: Simple library generation for OpenSWATH
Home-page: https://github.com/grosenberger/easypqp
Author: George Rosenberger
Author-email: gr2578@cumc.columbia.edu
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Chemistry
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numba
Requires-Dist: Click>=8.0.0
Requires-Dist: numpy==1.26.4
Requires-Dist: scipy
Requires-Dist: scikit-learn
Requires-Dist: statsmodels
Requires-Dist: pandas>=1.5.0
Requires-Dist: biopython
Requires-Dist: pyopenms>=3.3.0
Requires-Dist: matplotlib>=3.5.1
Requires-Dist: seaborn
Requires-Dist: tqdm
Provides-Extra: pyprophet
Requires-Dist: pyprophet; extra == "pyprophet"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: summary

EasyPQP: Simple library generation for OpenSWATH
================================================

EasyPQP is a Python package that provides simplified and fast peptide query parameter generation for OpenSWATH. It can process input from MSFragger or other database search engines in pepXML format. Statistical validation can be conducted either using PyProphet or PeptideProphet/iProphet. Retention times are calibrated using an internal or external standard. In addition to a cumulative library, run-specific libraries are generated for non-linear RT alignment in OpenSWATH. For generation of PTM specific libraries that utilizes a unimod.xml database, you can further restrict the unimod.xml database file for modifications and site-specificities of interest.

Installation
============

We strongly advice to install EasyPQP in a Python [*virtualenv*](https://virtualenv.pypa.io/en/stable/). EasyPQP is compatible with Python 3.

Install the development version of *easypqp* from GitHub:

````
    $ pip install git+https://github.com/grosenberger/easypqp.git@master
````

Running EasyPQP
===============

*EasyPQP* is not only a Python package, but also a command line tool:

````
   $ easypqp --help
````

or:

````
   $ easypqp convert --help
   $ easypqp library --help
   $ easypqp reduce --help
   $ easypqp filter-unimod --help
````

Docker
======

EasyPQP is also available from Docker (automated builds):

Pull the development version of *easypqp* from DockerHub (synced with GitHub):

````
    $ docker pull grosenberger/easypqp:latest
````
