name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox nox-uv
    - name: Run tests
      run: nox -s tests


  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox nox-uv
    - name: Run linting
      run: nox -s lint

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox nox-uv
    - name: Run type checking
      run: nox -s type_check

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox nox-uv
    - name: Build documentation
      run: nox -s docs-3.10
    - name: Upload docs artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./site
  
  deploy-gh-pages:
    runs-on: ubuntu-latest
    needs: docs
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment
