# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.account_view import AccountView
from .raw_client import AsyncRawAccountsClient, RawAccountsClient


class AccountsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawAccountsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawAccountsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawAccountsClient
        """
        return self._raw_client

    def get_account_me(self, *, request_options: typing.Optional[RequestOptions] = None) -> AccountView:
        """
        Get authenticated account information including credit balances and account details.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AccountView
            Successful Response

        Examples
        --------
        from browser_use_sdk import BrowserUse

        client = BrowserUse(
            api_key="YOUR_API_KEY",
        )
        client.accounts.get_account_me()
        """
        _response = self._raw_client.get_account_me(request_options=request_options)
        return _response.data


class AsyncAccountsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawAccountsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawAccountsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawAccountsClient
        """
        return self._raw_client

    async def get_account_me(self, *, request_options: typing.Optional[RequestOptions] = None) -> AccountView:
        """
        Get authenticated account information including credit balances and account details.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AccountView
            Successful Response

        Examples
        --------
        import asyncio

        from browser_use_sdk import AsyncBrowserUse

        client = AsyncBrowserUse(
            api_key="YOUR_API_KEY",
        )


        async def main() -> None:
            await client.accounts.get_account_me()


        asyncio.run(main())
        """
        _response = await self._raw_client.get_account_me(request_options=request_options)
        return _response.data
