CLOSE

;####################################################
; Autogenerated Homing PLC for PMAC, DO NOT MODIFY
; Group 2:
;  Axis 11: htype = HSW_HLIM, jdist = -1000, post = i
;  Axis 9: htype = HSW_HLIM, jdist = -1000, post = i
; Group 3:
;  Axis 12: htype = HSW_HLIM, jdist = -1000, post = i
;  Axis 10: htype = RLIM, jdist = 0, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(11&30)*50+11%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1100
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1101
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1102
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1103
HomingBackupGroup = 0

OPEN PLC11 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1104=i1113 P1105=i913 P1106=i1213 P1107=i1013
;Save the low soft limits to P variables px20..x35
P1120=i1114 P1121=i914 P1122=i1214 P1123=i1014
;Save the home capture flags to P variables px36..x51
MSR20,i912,P1136 MSR16,i912,P1137 MSR21,i912,P1138 MSR17,i912,P1139
;If any are zero then there is probably a macro error
if (P1136=0 or P1137=0 or P1138=0 or P1139=0)
	HomingStatus=StatusInvalid
endif
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1152=P1136^$C P1153=P1137^$C P1154=P1138^$C P1155=P1139^$C
;Save the limit flags to P variables px68..x83
P1168=i1124 P1169=i924 P1170=i1224 P1171=i1024
;Save the current position to P variables px84..x99
P1184=M1162 P1185=M962 P1186=M1262 P1187=M1062
;Clear the soft limits
i1113=0 i913=0 i1213=0 i1013=0
i1114=0 i914=0 i1214=0 i1014=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m1145=0 m945=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m1172=100000000*(i1123/ABS(i1123)) 		m972=100000000*(i923/ABS(i923))
		cmd "#11J^*^-1000 #9J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1140&m940=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m1130=1)
			m1172=100000000*(-i1123/ABS(i1123))
			cmd "#11J^*^-1000"
		endif
		if (m930=1)
			m972=100000000*(-i923/ABS(i923))
			cmd "#9J^*^-1000"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1140&m940=0) ; At least one motor should not be In Position
		and (m1130|m930=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1130|m930=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m1172=100000000*(i1123/ABS(i1123)) 		m972=100000000*(i923/ABS(i923))
		cmd "#11J^*^-1000 #9J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1140&m940=0) ; At least one motor should not be In Position
		and (m1142|m942 = 0) ; Following error check
		and (m1130|m930 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1142|m942 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1130|m930 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1184=(P1184-M1162)/(I1108*32)+-1000-(i1126/16)
		P1185=(P1185-M962)/(I908*32)+-1000-(i926/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW20,i912,P1152 MSW16,i912,P1153 		m1172=100000000*(-i1123/ABS(i1123)) 		m972=100000000*(-i923/ABS(i923))
		cmd "#11J^*^-1000 #9J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1140&m940=0) ; At least one motor should not be In Position
		and (m1142|m942 = 0) ; Following error check
		and (m1130|m930 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1142|m942 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1130|m930 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW20,i912,P1136 MSW16,i912,P1137
		cmd "#11hm #9hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1140&m940=0) ; At least one motor should not be In Position
		and (m1142|m942 = 0) ; Following error check
		and (m1130|m930 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1142|m942 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1130|m930 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m1145&m945=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m1172=P1184 m972=P1185
		cmd "#11J=* #9J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1140&m940=0) ; At least one motor should not be In Position
		and (m1142|m942 = 0) ; Following error check
		and (m1130|m930 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1142|m942 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1130|m930 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m1245=0 m1045=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m1072=100000000*(-i1023/ABS(i1023)) 		m1272=100000000*(i1223/ABS(i1223))
		cmd "#10J^* #12J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1240&m1040=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if HSW_HLIM missed home mark and hit a limit ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		; Execute the move commands if on a limit
		if (m1230=1)
			m1272=100000000*(-i1223/ABS(i1223))
			cmd "#12J^*^-1000"
		endif
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1240&m1040=0) ; At least one motor should not be In Position
		and (m1230=0) ; Should not stop on position limit for selected motors
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1230=1) ; If a motor hit a limit
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m1272=100000000*(i1223/ABS(i1223)) 		m1072=100000000*(i1023/ABS(i1023))
		cmd "#12J^*^-1000 #10J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1240&m1040=0) ; At least one motor should not be In Position
		and (m1242|m1042 = 0) ; Following error check
		and (m1230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1242|m1042 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1186=(P1186-M1262)/(I1208*32)+-1000-(i1226/16)
		P1187=(P1187-M1062)/(I1008*32)+0-(i1026/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW21,i912,P1154 MSW17,i912,P1155 		m1272=100000000*(-i1223/ABS(i1223)) 		m1072=100000000*(-i1023/ABS(i1023))
		cmd "#12J^*^-1000 #10J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1240&m1040=0) ; At least one motor should not be In Position
		and (m1242|m1042 = 0) ; Following error check
		and (m1230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1242|m1042 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW21,i912,P1138 MSW17,i912,P1139
		cmd "#12hm #10hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1240&m1040=0) ; At least one motor should not be In Position
		and (m1242|m1042 = 0) ; Following error check
		and (m1230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1242|m1042 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m1245&m1045=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m1272=P1186 m1072=P1187
		cmd "#12J=* #10J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1240&m1040=0) ; At least one motor should not be In Position
		and (m1242|m1042 = 0) ; Following error check
		and (m1230|m1030 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1242|m1042 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1230|m1030 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m1142=0)
	cmd "#11J/"
endif
if (m942=0)
	cmd "#9J/"
endif
if (m1242=0)
	cmd "#12J/"
endif
if (m1042=0)
	cmd "#10J/"
endif
;Restore the high soft limits from P variables px04..x19
i1113=P1104 i913=P1105 i1213=P1106 i1013=P1107
;Restore the low soft limits from P variables px20..x35
i1114=P1120 i914=P1121 i1214=P1122 i1014=P1123
;Restore the home capture flags from P variables px36..x51
MSW20,i912,P1136 MSW16,i912,P1137 MSW21,i912,P1138 MSW17,i912,P1139
;Restore the limit flags to P variables px68..x83
i1124=P1168 i924=P1169 i1224=P1170 i1024=P1171

DISABLE PLC11
CLOSE
