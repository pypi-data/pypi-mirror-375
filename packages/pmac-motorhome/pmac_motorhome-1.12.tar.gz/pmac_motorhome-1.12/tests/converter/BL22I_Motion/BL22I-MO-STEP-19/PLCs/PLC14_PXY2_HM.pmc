CLOSE

;####################################################
; Autogenerated Homing PLC for GeoBrick, DO NOT MODIFY
; Group 2:
;  Axis 7: htype = RLIM, jdist = -1000, post = i
; Group 3:
;  Axis 8: htype = RLIM, jdist = -1000, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(14&30)*50+14%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1400
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1401
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1402
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1403
HomingBackupGroup = 0

OPEN PLC14 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1404=i713 P1405=i813
;Save the low soft limits to P variables px20..x35
P1420=i714 P1421=i814
;Save the home capture flags to P variables px36..x51
P1436=i7132 P1437=i7142
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1452=P1436^$C P1453=P1437^$C
;Save the limit flags to P variables px68..x83
P1468=i724 P1469=i824
;Save the current position to P variables px84..x99
P1484=M762 P1485=M862
;Clear the soft limits
i713=0 i813=0
i714=0 i814=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m745=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m772=100000000*(-i723/ABS(i723))
		cmd "#7J^*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m772=100000000*(i723/ABS(i723))
		cmd "#7J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740=0) ; At least one motor should not be In Position
		and (m742 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m742 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1484=(P1484-M762)/(I708*32)+-1000-(i726/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		i7132=P1452 		m772=100000000*(-i723/ABS(i723))
		cmd "#7J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740=0) ; At least one motor should not be In Position
		and (m742 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m742 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7132=P1436
		cmd "#7hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740=0) ; At least one motor should not be In Position
		and (m742 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m742 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m745=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m772=P1484
		cmd "#7J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740=0) ; At least one motor should not be In Position
		and (m742 = 0) ; Following error check
		and (m730 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m742 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m730 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m845=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m872=100000000*(-i823/ABS(i823))
		cmd "#8J^*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m840=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m872=100000000*(i823/ABS(i823))
		cmd "#8J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m840=0) ; At least one motor should not be In Position
		and (m842 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1485=(P1485-M862)/(I808*32)+-1000-(i826/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		i7142=P1453 		m872=100000000*(-i823/ABS(i823))
		cmd "#8J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m840=0) ; At least one motor should not be In Position
		and (m842 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7142=P1437
		cmd "#8hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m840=0) ; At least one motor should not be In Position
		and (m842 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m845=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m872=P1485
		cmd "#8J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m840=0) ; At least one motor should not be In Position
		and (m842 = 0) ; Following error check
		and (m830 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m830 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m742=0)
	cmd "#7J/"
endif
if (m842=0)
	cmd "#8J/"
endif
;Restore the high soft limits from P variables px04..x19
i713=P1404 i813=P1405
;Restore the low soft limits from P variables px20..x35
i714=P1420 i814=P1421
;Restore the home capture flags from P variables px36..x51
i7132=P1436 i7142=P1437
;Restore the limit flags to P variables px68..x83
i724=P1468 i824=P1469

DISABLE PLC14
CLOSE
