/**
 * Copyright 2025 Huawei Technologies Co., Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "pynative/pynative_utils.h"
#include "pybind11/pybind11.h"

namespace py = pybind11;
namespace mindspore::pynative {
//pyboost op api
py::object PYNATIVE_EXPORT Pyboost_InplaceScatterValueReduce_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ScalarPtr& value, const Int64ImmPtr& reduce);
py::object PYNATIVE_EXPORT Pyboost_DiagonalView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& offset, const int64_t& dim1, const int64_t& dim2);
py::object PYNATIVE_EXPORT Pyboost_BinaryCrossEntropyWithLogitsBackward_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValuePtr& target, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& posWeight, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_Reshape_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& shape);
py::object PYNATIVE_EXPORT Pyboost_InplaceThreshold_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& threshold, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_Minimum_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_InplaceDivMod_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const std::optional<Int64ImmPtr>& rounding_mode);
py::object PYNATIVE_EXPORT Pyboost_Kthvalue_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& k, const Int64ImmPtr& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_AtanExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_DistCommGather_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& gather_list, const Int64ImmPtr& rank_size, const Int64ImmPtr& dst, const Int64ImmPtr& rank_id, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_ExpandAs_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_SoftplusGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& x, const ScalarPtr& beta, const ScalarPtr& threshold);
py::object PYNATIVE_EXPORT Pyboost_InplaceScatterAdd_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& src);
py::object PYNATIVE_EXPORT Pyboost_UpsampleTrilinear3DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValueTuplePtr& input_size, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_Gcd_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_Clone_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Transpose_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& input_perm);
py::object PYNATIVE_EXPORT Pyboost_BitwiseAndTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_TransposeView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& input_perm);
py::object PYNATIVE_EXPORT Pyboost_Neg_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_DistCommIsend_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dst, const StringImmPtr& group, const Int64ImmPtr& tag);
py::object PYNATIVE_EXPORT Pyboost_AvgPool2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& kernel_size, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const BoolImmPtr& ceil_mode, const BoolImmPtr& count_include_pad, const std::optional<Int64ImmPtr>& divisor_override);
py::object PYNATIVE_EXPORT Pyboost_InplaceScatterSrcReduce_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& src, const Int64ImmPtr& reduce);
py::object PYNATIVE_EXPORT Pyboost_Frac_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_FillTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& size, const ValuePtr& fill_value, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_InplaceFillScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_MaskedSelect_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mask);
py::object PYNATIVE_EXPORT Pyboost_ReplicationPad1DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_BatchNormStats_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& eps);
py::object PYNATIVE_EXPORT Pyboost_InplaceScatterValue_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_DivMods_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other, const std::optional<Int64ImmPtr>& rounding_mode);
py::object PYNATIVE_EXPORT Pyboost_UniqueConsecutive_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const BoolImmPtr& return_inverse, const BoolImmPtr& return_counts, const std::optional<Int64ImmPtr>& dim);
py::object PYNATIVE_EXPORT Pyboost_GridSampler3D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input_x, const ValuePtr& grid, const Int64ImmPtr& interpolation_mode, const Int64ImmPtr& padding_mode, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_FlashAttentionScore_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& key, const ValuePtr& value, const std::optional<ValuePtr>& real_shift, const std::optional<ValuePtr>& drop_mask, const std::optional<ValuePtr>& padding_mask, const std::optional<ValuePtr>& attn_mask, const std::optional<ValueTuplePtr>& prefix, const std::optional<ValueTuplePtr>& actual_seq_qlen, const std::optional<ValueTuplePtr>& actual_seq_kvlen, const Int64ImmPtr& head_num, const FP32ImmPtr& keep_prob, const FP32ImmPtr& scale_value, const Int64ImmPtr& pre_tokens, const Int64ImmPtr& next_tokens, const Int64ImmPtr& inner_precise, const Int64ImmPtr& input_layout, const Int64ImmPtr& sparse_mode);
py::object PYNATIVE_EXPORT Pyboost_PagedAttention_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& key_cache, const std::optional<ValuePtr>& value_cache, const std::optional<ValuePtr>& block_tables, const std::optional<ValuePtr>& context_lens, const std::optional<ValuePtr>& antiquant_scale, const std::optional<ValuePtr>& antiquant_offset, const std::optional<ValuePtr>& attn_mask, const std::optional<ValuePtr>& q_seq_lens, const std::optional<ValuePtr>& alibi_mask, const Int64ImmPtr& head_num, const FP32ImmPtr& scale_value, const Int64ImmPtr& kv_head_num, const Int64ImmPtr& kv_cache_quant_mode, const Int64ImmPtr& mask_mode, const Int64ImmPtr& mla_v_dim);
py::object PYNATIVE_EXPORT Pyboost_InplaceMul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_BroadcastTo_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& shape);
py::object PYNATIVE_EXPORT Pyboost_SliceExtView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim, const int64_t& start, const int64_t& end, const int64_t& step);
py::object PYNATIVE_EXPORT Pyboost_InplaceSiLU_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_DropoutGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mask, const FP32ImmPtr& p);
py::object PYNATIVE_EXPORT Pyboost_Concat_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& tensors, const Int64ImmPtr& axis);
py::object PYNATIVE_EXPORT Pyboost_Tile_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& dims);
py::object PYNATIVE_EXPORT Pyboost_Slice_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& begin, const std::vector<int64_t>& size);
py::object PYNATIVE_EXPORT Pyboost_AsinExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_ReflectionPad2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_XLogYScalarOther_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_ExpandDims_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input_x, const int64_t& axis);
py::object PYNATIVE_EXPORT Pyboost_SoftMarginLoss_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_Swiglu_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_AllGatherMatmul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& x2, const StringImmPtr& group, const Int64ImmPtr& world_size, const std::optional<ValuePtr>& bias, const Int64ImmPtr& gather_index, const BoolImmPtr& gather_output, const Int64ImmPtr& comm_turn, const BoolImmPtr& trans_input, const BoolImmPtr& trans_x2);
py::object PYNATIVE_EXPORT Pyboost_RepeatInterleaveInt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& repeats, const std::optional<Int64ImmPtr>& dim, const std::optional<Int64ImmPtr>& output_size);
py::object PYNATIVE_EXPORT Pyboost_MedianDim_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_AvgPool1D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& stride, const ValueTuplePtr& padding, const BoolImmPtr& ceil_mode, const BoolImmPtr& count_include_pad);
py::object PYNATIVE_EXPORT Pyboost_InnerInplaceIndexPut_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& indices, const ValuePtr& values, const BoolImmPtr& accumulate);
py::object PYNATIVE_EXPORT Pyboost_CumsumExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_DistCommAllGatherIntoTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValuePtr& input, const Int64ImmPtr& rank_size, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_InplaceBernoulliScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& p, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_InplaceSubExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_LogSoftmaxGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& logits, const ValuePtr& grad, const Int64ImmPtr& axis);
py::object PYNATIVE_EXPORT Pyboost_Im2ColExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& kernel_size, const ValueTuplePtr& dilation, const ValueTuplePtr& padding, const ValueTuplePtr& stride);
py::object PYNATIVE_EXPORT Pyboost_HSwish_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_AvgPool3DGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad, const ValuePtr& input, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& stride, const ValueTuplePtr& padding, const BoolImmPtr& ceil_mode, const BoolImmPtr& count_include_pad, const std::optional<Int64ImmPtr>& divisor_override);
py::object PYNATIVE_EXPORT Pyboost_Sin_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_NormalTensorTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& mean, const ValuePtr& std, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_Conv2DExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const ValueTuplePtr& dilation, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_InplaceExp_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_SoftmaxBackward_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& out, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_InplaceAddsExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_InplaceRemainderTensorScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_EmptyLike_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<Int64ImmPtr>& dtype, const std::optional<Int64ImmPtr>& device);
py::object PYNATIVE_EXPORT Pyboost_Tanh_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_AsinhExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Eye_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const Int64ImmPtr& n, const Int64ImmPtr& m, const Int64ImmPtr& dtype);
py::object PYNATIVE_EXPORT Pyboost_IndexFillScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_InplaceReLU_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_AddcmulExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& tensor1, const ValuePtr& tensor2, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_Equal_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_ArgMinExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<Int64ImmPtr>& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_Cosh_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_ClampTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValuePtr>& min, const std::optional<ValuePtr>& max);
py::object PYNATIVE_EXPORT Pyboost_NewEmpty_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& size, const std::optional<Int64ImmPtr>& dtype, const std::optional<Int64ImmPtr>& device);
py::object PYNATIVE_EXPORT Pyboost_DistCommAllReduce_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const StringImmPtr& op_type, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_RemainderTensorTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_ReflectionPad2DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_RandExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& shape, const ValuePtr& seed, const ValuePtr& offset, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_Threshold_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& threshold, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_LogSoftmaxExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<Int64ImmPtr>& dim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_ArgMinWithValue_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& axis, const BoolImmPtr& keep_dims);
py::object PYNATIVE_EXPORT Pyboost_Addmv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mat, const ValuePtr& vec, const ScalarPtr& beta, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_ConvolutionGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const ValueTuplePtr& dilation, const BoolImmPtr& transposed, const ValueTuplePtr& output_padding, const Int64ImmPtr& groups, const ValueTuplePtr& output_mask);
py::object PYNATIVE_EXPORT Pyboost_Ones_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& shape, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_Polar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& abs, const ValuePtr& angle);
py::object PYNATIVE_EXPORT Pyboost_InplaceFillTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& value);
py::object PYNATIVE_EXPORT Pyboost_MatrixInverseExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_DistCommBarrier_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_NotEqual_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_InplaceIndexPut_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& indices, const ValuePtr& values, const BoolImmPtr& accumulate);
py::object PYNATIVE_EXPORT Pyboost_Cast_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dtype);
py::object PYNATIVE_EXPORT Pyboost_ReplicationPad2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_Muls_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_GatherDGradV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& dout);
py::object PYNATIVE_EXPORT Pyboost_InnerCommAllToAllV_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const StringImmPtr& group, const ValueTuplePtr& send_numel_list, const ValueTuplePtr& recv_numel_list, const Int64ImmPtr& rank_size, const BoolImmPtr& split_sizes_empty);
py::object PYNATIVE_EXPORT Pyboost_Reciprocal_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Cos_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_AdaptiveAvgPool3DGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input_grad, const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_SelectExtView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim, const int64_t& index);
py::object PYNATIVE_EXPORT Pyboost_AdaptiveMaxPool1D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& output_size);
py::object PYNATIVE_EXPORT Pyboost_HistcExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& bins, const ScalarPtr& min, const ScalarPtr& max);
py::object PYNATIVE_EXPORT Pyboost_BitwiseNot_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InnerMoeTokenUnpermute_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& permuted_tokens, const ValuePtr& sorted_indices, const std::optional<ValuePtr>& probs, const BoolImmPtr& padded_mode, const std::optional<ValueTuplePtr>& restore_shape);
py::object PYNATIVE_EXPORT Pyboost_SwigluGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_GroupNorm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& num_groups, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& bias, const FP32ImmPtr& eps);
py::object PYNATIVE_EXPORT Pyboost_Floor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Unique2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const BoolImmPtr& sorted, const BoolImmPtr& return_inverse, const BoolImmPtr& return_counts);
py::object PYNATIVE_EXPORT Pyboost_BatchNormGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& input, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& running_mean, const std::optional<ValuePtr>& running_var, const std::optional<ValuePtr>& saved_mean, const std::optional<ValuePtr>& saved_rstd, const BoolImmPtr& training, const FP32ImmPtr& eps, const ValueTuplePtr& output_mask);
py::object PYNATIVE_EXPORT Pyboost_AcoshExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_SplitTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& split_size, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_InplaceZero_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_DistCommAllGatherIntoTensorUneven_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValuePtr& input, const ValueTuplePtr& output_split_sizes, const Int64ImmPtr& rank_size, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_Log_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_AsStrided_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& size, const std::vector<int64_t>& stride, const int64_t& storage_offset);
py::object PYNATIVE_EXPORT Pyboost_Split_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input_x, const int64_t& axis, const int64_t& output_num);
py::object PYNATIVE_EXPORT Pyboost_SubExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_BatchNormElemtGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& input, const ValuePtr& mean, const ValuePtr& invstd, const ValuePtr& weight, const ValuePtr& sumd_dy, const ValuePtr& sum_dy_xmu, const ValuePtr& count);
py::object PYNATIVE_EXPORT Pyboost_Conv1DPadding_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const Int64ImmPtr& padding, const ValueTuplePtr& dilation, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_Conv1DExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const ValueTuplePtr& dilation, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_AllFinite_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& tensors);
py::object PYNATIVE_EXPORT Pyboost_TrilExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& diagonal);
py::object PYNATIVE_EXPORT Pyboost_ArgSort_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const BoolImmPtr& descending, const BoolImmPtr& stable);
py::object PYNATIVE_EXPORT Pyboost_PowTensorScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& exponent);
py::object PYNATIVE_EXPORT Pyboost_InplaceStopGradient_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InplaceTanh_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Chunk_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& chunks, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_InplaceDivMods_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other, const std::optional<Int64ImmPtr>& rounding_mode);
py::object PYNATIVE_EXPORT Pyboost_Col2ImGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& kernel_size, const ValueTuplePtr& dilation, const ValueTuplePtr& padding, const ValueTuplePtr& stride);
py::object PYNATIVE_EXPORT Pyboost_AcosExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_SpeedFusionAttention_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& key, const ValuePtr& value, const Int64ImmPtr& head_num, const Int64ImmPtr& input_layout, const ValuePtr& seed, const ValuePtr& offset, const std::optional<ValuePtr>& pse, const std::optional<ValuePtr>& padding_mask, const std::optional<ValuePtr>& atten_mask, const FP32ImmPtr& scale, const FP32ImmPtr& keep_prob, const Int64ImmPtr& pre_tokens, const Int64ImmPtr& next_tokens, const Int64ImmPtr& inner_precise, const std::optional<ValueTuplePtr>& prefix, const std::optional<ValueTuplePtr>& actual_seq_qlen, const std::optional<ValueTuplePtr>& actual_seq_kvlen, const Int64ImmPtr& sparse_mode, const BoolImmPtr& gen_mask_parallel, const BoolImmPtr& sync, const Int64ImmPtr& pse_type, const std::optional<ValueTuplePtr>& q_start_idx, const std::optional<ValueTuplePtr>& kv_start_idx);
py::object PYNATIVE_EXPORT Pyboost_Exp2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Mm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mat2);
py::object PYNATIVE_EXPORT Pyboost_Round_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& decimals);
py::object PYNATIVE_EXPORT Pyboost_NLLLoss_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& logits, const ValuePtr& labels, const ValuePtr& weight, const Int64ImmPtr& reduction, const Int64ImmPtr& ignore_index);
py::object PYNATIVE_EXPORT Pyboost_ReduceMax_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValueTuplePtr& axis, const BoolImmPtr& keep_dims);
py::object PYNATIVE_EXPORT Pyboost_Randn_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& shape, const ValuePtr& seed, const ValuePtr& offset, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_AvgPool2DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad, const ValuePtr& image, const ValueTuplePtr& kernel_size, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const BoolImmPtr& ceil_mode, const BoolImmPtr& count_include_pad, const std::optional<Int64ImmPtr>& divisor_override);
py::object PYNATIVE_EXPORT Pyboost_GridSampler3DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad, const ValuePtr& input_x, const ValuePtr& grid, const Int64ImmPtr& interpolation_mode, const Int64ImmPtr& padding_mode, const BoolImmPtr& align_corners, const ValueTuplePtr& output_mask);
py::object PYNATIVE_EXPORT Pyboost_NewZeros_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& size, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_AdaptiveMaxPool2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& output_size);
py::object PYNATIVE_EXPORT Pyboost_UnstackExtView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_LogSigmoidGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& input, const ValuePtr& buffer);
py::object PYNATIVE_EXPORT Pyboost_BatchNormElemt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& bias, const std::optional<ValuePtr>& mean, const std::optional<ValuePtr>& invstd, const FP32ImmPtr& eps);
py::object PYNATIVE_EXPORT Pyboost_IsFinite_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_ReduceAll_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& axis, const BoolImmPtr& keep_dims);
py::object PYNATIVE_EXPORT Pyboost_Embedding_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<Int64ImmPtr>& padding_idx, const std::optional<FP32ImmPtr>& max_norm, const FP32ImmPtr& norm_type, const BoolImmPtr& scale_grad_by_freq);
py::object PYNATIVE_EXPORT Pyboost_InplaceMaskedFillTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mask, const ValuePtr& value);
py::object PYNATIVE_EXPORT Pyboost_BatchNormExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& bias, const std::optional<ValuePtr>& running_mean, const std::optional<ValuePtr>& runnning_var, const BoolImmPtr& training, const FP32ImmPtr& momentum, const FP32ImmPtr& epsilon);
py::object PYNATIVE_EXPORT Pyboost_AvgPool3DExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& stride, const ValueTuplePtr& padding, const BoolImmPtr& ceil_mode, const BoolImmPtr& count_include_pad, const std::optional<Int64ImmPtr>& divisor_override);
py::object PYNATIVE_EXPORT Pyboost_DistCommReduce_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const StringImmPtr& op_type, const Int64ImmPtr& dst, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_SearchSorted_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& sorted_sequence, const ValuePtr& values, const std::optional<ValuePtr>& sorter, const Int64ImmPtr& dtype, const BoolImmPtr& right);
py::object PYNATIVE_EXPORT Pyboost_MoeTokenPermute_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& tokens, const ValuePtr& indices, const std::optional<Int64ImmPtr>& num_out_tokens, const BoolImmPtr& padded_mode);
py::object PYNATIVE_EXPORT Pyboost_Softmax_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& axis);
py::object PYNATIVE_EXPORT Pyboost_SoftMarginLossGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& predict, const ValuePtr& label, const ValuePtr& dout, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_InnerNonZero_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_ReplicationPad3D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_GLU_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const Int64ImmPtr& axis);
py::object PYNATIVE_EXPORT Pyboost_HShrink_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& lambd);
py::object PYNATIVE_EXPORT Pyboost_Max_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_GatherD_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const Int64ImmPtr& dim, const ValuePtr& index);
py::object PYNATIVE_EXPORT Pyboost_CountNonZero_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim);
py::object PYNATIVE_EXPORT Pyboost_GridSampler2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input_x, const ValuePtr& grid, const Int64ImmPtr& interpolation_mode, const Int64ImmPtr& padding_mode, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_MatMul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mat2, const BoolImmPtr& transpose_a, const BoolImmPtr& transpose_b);
py::object PYNATIVE_EXPORT Pyboost_Cummax_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& axis);
py::object PYNATIVE_EXPORT Pyboost_BitwiseXorTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_UpsampleLinear1D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_DistCommAllGather_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& tensor_list, const ValuePtr& input, const Int64ImmPtr& rank_size, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_Log2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_SoftplusExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& beta, const ScalarPtr& threshold);
py::object PYNATIVE_EXPORT Pyboost_AddScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_MoeTokenUnpermuteGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& permuted_tokens, const ValuePtr& unpermuted_tokens_grad, const ValuePtr& sorted_indices, const std::optional<ValuePtr>& probs, const BoolImmPtr& padded_mode, const std::optional<ValueTuplePtr>& restore_shape);
py::object PYNATIVE_EXPORT Pyboost_RepeatInterleaveTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& repeats, const std::optional<Int64ImmPtr>& dim, const std::optional<Int64ImmPtr>& output_size);
py::object PYNATIVE_EXPORT Pyboost_PReLUGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& x, const ValuePtr& weight);
py::object PYNATIVE_EXPORT Pyboost_RingAttentionUpdate_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& prev_attn_out, const ValuePtr& prev_softmax_max, const ValuePtr& prev_softmax_sum, const ValuePtr& cur_attn_out, const ValuePtr& cur_softmax_max, const ValuePtr& cur_softmax_sum, const std::optional<ValuePtr>& actual_seq_qlen, const Int64ImmPtr& layout);
py::object PYNATIVE_EXPORT Pyboost_MedianExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_GeLU_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_IsClose_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const FP32ImmPtr& rtol, const FP32ImmPtr& atol, const BoolImmPtr& equal_nan);
py::object PYNATIVE_EXPORT Pyboost_Arange_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ScalarPtr& start, const ScalarPtr& end, const ScalarPtr& step, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_ReflectionPad3DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_SeluGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& gradient, const ValuePtr& result);
py::object PYNATIVE_EXPORT Pyboost_NanToNum_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<FP32ImmPtr>& nan, const std::optional<FP32ImmPtr>& posinf, const std::optional<FP32ImmPtr>& neginf);
py::object PYNATIVE_EXPORT Pyboost_SumExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim, const BoolImmPtr& keepdim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_Greater_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_HSigmoidGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grads, const ValuePtr& input_x);
py::object PYNATIVE_EXPORT Pyboost_InplaceIndexAddExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& source, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_MaxPoolGradWithIndices_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& grad, const ValuePtr& argmax, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& strides, const ValueTuplePtr& pads, const ValueTuplePtr& dilation, const BoolImmPtr& ceil_mode, const Int64ImmPtr& argmax_type);
py::object PYNATIVE_EXPORT Pyboost_MaxDim_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_LogSigmoid_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_DivMod_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const std::optional<Int64ImmPtr>& rounding_mode);
py::object PYNATIVE_EXPORT Pyboost_SmoothL1LossGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& prediction, const ValuePtr& target, const ValuePtr& dout, const FP32ImmPtr& beta, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_MatMulExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_CrossEntropyLoss_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const std::optional<ValuePtr>& weight, const Int64ImmPtr& reduction, const Int64ImmPtr& ignore_index, const FP32ImmPtr& label_smoothing, const FP32ImmPtr& lse_square_scale_for_zloss, const BoolImmPtr& return_zloss);
py::object PYNATIVE_EXPORT Pyboost_InplaceClampTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValuePtr>& min, const std::optional<ValuePtr>& max);
py::object PYNATIVE_EXPORT Pyboost_LogicalOr_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& y);
py::object PYNATIVE_EXPORT Pyboost_GreaterEqualScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_FmodTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_MaskedScatter_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mask, const ValuePtr& source);
py::object PYNATIVE_EXPORT Pyboost_Atanh_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_OnesLikeExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_Add_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_BatchMatMulExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mat2);
py::object PYNATIVE_EXPORT Pyboost_HardtanhGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& input, const ScalarPtr& min_val, const ScalarPtr& max_val);
py::object PYNATIVE_EXPORT Pyboost_Norm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& p, const std::optional<ValueTuplePtr>& dim, const BoolImmPtr& keepdim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_BatchNormGatherStatsWithCounts_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mean, const ValuePtr& invstd, const std::optional<ValuePtr>& running_mean, const std::optional<ValuePtr>& running_var, const FP32ImmPtr& momentum, const FP32ImmPtr& eps, const std::optional<ValuePtr>& counts);
py::object PYNATIVE_EXPORT Pyboost_SplitWithSizeView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& split_size, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_InplaceFloorDivides_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_HSigmoid_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InnerCommIsend_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dst, const StringImmPtr& group, const Int64ImmPtr& tag);
py::object PYNATIVE_EXPORT Pyboost_Erf_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_BinaryCrossEntropyGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const ValuePtr& grad_output, const std::optional<ValuePtr>& weight, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_ScatterValue_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ScalarPtr& src, const Int64ImmPtr& reduce);
py::object PYNATIVE_EXPORT Pyboost_Meshgrid_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& inputs, const int64_t& indexing);
py::object PYNATIVE_EXPORT Pyboost_MinDim_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_AdaptiveAvgPool1D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& output_size);
py::object PYNATIVE_EXPORT Pyboost_DistCommReduceScatterTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValuePtr& input, const Int64ImmPtr& rank_size, const StringImmPtr& op_type, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_Copy_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_StackExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& tensors, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_NormalFloatFloat_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ScalarPtr& mean, const ScalarPtr& std, const ValueTuplePtr& size, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_Mla_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& q_rope, const ValuePtr& kv_cache, const ValuePtr& k_rope, const ValuePtr& block_tables, const std::optional<ValuePtr>& attn_mask, const std::optional<ValuePtr>& deq_scale_qk, const std::optional<ValuePtr>& deq_scale_pv, const std::optional<ValuePtr>& q_seq_lens, const std::optional<ValuePtr>& context_lens, const Int64ImmPtr& head_num, const FP32ImmPtr& scale_value, const Int64ImmPtr& kv_head_num, const Int64ImmPtr& mask_mode, const Int64ImmPtr& is_ring);
py::object PYNATIVE_EXPORT Pyboost_MultiScaleDeformableAttnGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& value, const ValuePtr& shape, const ValuePtr& offset, const ValuePtr& locations_trans, const ValuePtr& weight, const ValuePtr& grad_output);
py::object PYNATIVE_EXPORT Pyboost_UpsampleNearest2DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValueTuplePtr& input_size, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales);
py::object PYNATIVE_EXPORT Pyboost_MaxPoolWithMask_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& strides, const ValueTuplePtr& pads, const ValueTuplePtr& dilation, const BoolImmPtr& ceil_mode, const Int64ImmPtr& argmax_type);
py::object PYNATIVE_EXPORT Pyboost_ReplicationPad1D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_Lerp_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& end, const ValuePtr& weight);
py::object PYNATIVE_EXPORT Pyboost_Zeros_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& size, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_NormalTensorFloat_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& mean, const ScalarPtr& std, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_BatchMatMul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& y, const BoolImmPtr& transpose_a, const BoolImmPtr& transpose_b);
py::object PYNATIVE_EXPORT Pyboost_Contiguous_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_MSELossGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& x, const ValuePtr& target, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_BatchNormReduceGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& input, const ValuePtr& mean, const ValuePtr& invstd, const ValuePtr& weight, const BoolImmPtr& input_g, const BoolImmPtr& weight_g, const BoolImmPtr& bias_g);
py::object PYNATIVE_EXPORT Pyboost_Xlogy_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_Sqrt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x);
py::object PYNATIVE_EXPORT Pyboost_UpsampleNearest1D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales);
py::object PYNATIVE_EXPORT Pyboost_UpsampleBicubic2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_IsNegInf_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_UpsampleNearest2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales);
py::object PYNATIVE_EXPORT Pyboost_InplaceMaskedFillScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mask, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_RepeatInterleaveGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& repeats, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_LogicalAnd_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& y);
py::object PYNATIVE_EXPORT Pyboost_ReplicationPad2DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_LogicalXor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_ConvolutionStrGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const Int64ImmPtr& padding, const ValueTuplePtr& dilation, const BoolImmPtr& transposed, const ValueTuplePtr& output_padding, const Int64ImmPtr& groups, const ValueTuplePtr& output_mask);
py::object PYNATIVE_EXPORT Pyboost_SubScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_Squeeze_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& axis);
py::object PYNATIVE_EXPORT Pyboost_Repeat_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& repeats);
py::object PYNATIVE_EXPORT Pyboost_InplaceFloorDivide_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_InplaceClampScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ScalarPtr>& min, const std::optional<ScalarPtr>& max);
py::object PYNATIVE_EXPORT Pyboost_MaxUnpool2DExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& indices, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& stride, const ValueTuplePtr& padding, const std::optional<ValueTuplePtr>& output_size);
py::object PYNATIVE_EXPORT Pyboost_AddExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_ProdExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<Int64ImmPtr>& dim, const BoolImmPtr& keepdim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_LogSumExp_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_Dense_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias);
py::object PYNATIVE_EXPORT Pyboost_RotaryPositionEmbedding_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& cos, const ValuePtr& sin, const Int64ImmPtr& mode);
py::object PYNATIVE_EXPORT Pyboost_NeScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_DistCommIrecv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& tag, const Int64ImmPtr& src, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_SigmoidGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& y, const ValuePtr& dy);
py::object PYNATIVE_EXPORT Pyboost_LogSoftmax_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& logits, const Int64ImmPtr& axis);
py::object PYNATIVE_EXPORT Pyboost_RandLikeExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& tensor, const ValuePtr& seed, const ValuePtr& offset, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_GeLUGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& x, const ValuePtr& y);
py::object PYNATIVE_EXPORT Pyboost_AddLayerNormV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x1, const ValuePtr& x2, const ValuePtr& gamma, const ValuePtr& beta, const FP32ImmPtr& epsilon, const BoolImmPtr& additionalOut);
py::object PYNATIVE_EXPORT Pyboost_ConvTranspose2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const ValueTuplePtr& output_padding, const Int64ImmPtr& groups, const ValueTuplePtr& dilation);
py::object PYNATIVE_EXPORT Pyboost_LinalgQr_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& A, const Int64ImmPtr& mode);
py::object PYNATIVE_EXPORT Pyboost_AdamW_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& var, const ValuePtr& m, const ValuePtr& v, const ValuePtr& max_v, const ValuePtr& gradient, const ValuePtr& step, const FP32ImmPtr& lr, const FP32ImmPtr& beta1, const FP32ImmPtr& beta2, const FP32ImmPtr& decay, const FP32ImmPtr& eps, const BoolImmPtr& amsgrad, const BoolImmPtr& maximize);
py::object PYNATIVE_EXPORT Pyboost_ScatterAddExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& src);
py::object PYNATIVE_EXPORT Pyboost_NLLLoss2dGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& loss_grad, const ValuePtr& input, const ValuePtr& target, const ValuePtr& weight, const Int64ImmPtr& reduction, const Int64ImmPtr& ignore_index, const ValuePtr& total_weight);
py::object PYNATIVE_EXPORT Pyboost_DistCommAllToAllV_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& other, const ValuePtr& input, const StringImmPtr& group, const ValueTuplePtr& send_numel_list, const ValueTuplePtr& recv_numel_list, const Int64ImmPtr& rank_size);
py::object PYNATIVE_EXPORT Pyboost_RandnLike_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& seed, const ValuePtr& offset, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_ReflectionPad1DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_InplaceFloor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_FFNExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& weight1, const ValuePtr& weight2, const std::optional<ValueTuplePtr>& expertTokens, const std::optional<ValuePtr>& bias1, const std::optional<ValuePtr>& bias2, const std::optional<ValuePtr>& scale, const std::optional<ValuePtr>& offset, const std::optional<ValuePtr>& deqScale1, const std::optional<ValuePtr>& deqScale2, const std::optional<ValuePtr>& antiquant_scale1, const std::optional<ValuePtr>& antiquant_scale2, const std::optional<ValuePtr>& antiquant_offset1, const std::optional<ValuePtr>& antiquant_offset2, const Int64ImmPtr& activation, const Int64ImmPtr& inner_precise);
py::object PYNATIVE_EXPORT Pyboost_AdaptiveAvgPool2DExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& output_size);
py::object PYNATIVE_EXPORT Pyboost_EqualExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_IsInf_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_MishGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& x);
py::object PYNATIVE_EXPORT Pyboost_Sinc_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InplaceNormal_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& mean, const ScalarPtr& std, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_SoftShrink_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& lambd);
py::object PYNATIVE_EXPORT Pyboost_Index_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& indices);
py::object PYNATIVE_EXPORT Pyboost_DiagExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& diagonal);
py::object PYNATIVE_EXPORT Pyboost_Scatter_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& src, const Int64ImmPtr& reduce);
py::object PYNATIVE_EXPORT Pyboost_SplitTensorView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& split_size, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_GeluGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad, const ValuePtr& input, const Int64ImmPtr& approximate);
py::object PYNATIVE_EXPORT Pyboost_BCEWithLogitsLoss_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& posWeight, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_ReLU_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Sigmoid_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_TanhGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& y, const ValuePtr& dy);
py::object PYNATIVE_EXPORT Pyboost_Dot_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_DistCommAllToAllVSingle_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValuePtr& input, const StringImmPtr& group, const ValueTuplePtr& send_numel_list, const ValueTuplePtr& recv_numel_list, const Int64ImmPtr& rank_size, const BoolImmPtr& split_sizes_empty);
py::object PYNATIVE_EXPORT Pyboost_Exp_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_ReplicationPad3DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_Expm1_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InplaceGroupedMatmulAdd_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& weight, const ValuePtr& group_list, const ValuePtr& out);
py::object PYNATIVE_EXPORT Pyboost_SplitWithSize_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& split_size, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_LessEqual_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_AdaptiveAvgPool3DExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& output_size);
py::object PYNATIVE_EXPORT Pyboost_NLLLossGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& logits, const ValuePtr& loss_grad, const ValuePtr& labels, const ValuePtr& weight, const ValuePtr& total_weight, const Int64ImmPtr& reduction, const Int64ImmPtr& ignore_index);
py::object PYNATIVE_EXPORT Pyboost_ZerosLikeExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_UpsampleTrilinear3D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_UniformExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& tensor, const ScalarPtr& a, const ScalarPtr& b, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_GroupNormGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& x, const ValuePtr& mean, const ValuePtr& rstd, const ValuePtr& gamma_opt, const Int64ImmPtr& num_groups, const BoolImmPtr& dx_is_require, const BoolImmPtr& dgamma_is_require, const BoolImmPtr& dbeta_is_require);
py::object PYNATIVE_EXPORT Pyboost_ReshapeAndCache_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& key, const std::optional<ValuePtr>& value, const std::optional<ValuePtr>& key_cache, const std::optional<ValuePtr>& value_cache, const std::optional<ValuePtr>& slot_mapping);
py::object PYNATIVE_EXPORT Pyboost_MaskedSelectGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mask, const ValuePtr& grad);
py::object PYNATIVE_EXPORT Pyboost_GluGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grads, const ValuePtr& x, const Int64ImmPtr& axis);
py::object PYNATIVE_EXPORT Pyboost_MeanExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim, const BoolImmPtr& keepdim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_ReflectionPad3D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_DistCommGatherIntoTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValuePtr& input, const Int64ImmPtr& rank_size, const Int64ImmPtr& dst, const Int64ImmPtr& rank_id, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_Mv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& vec);
py::object PYNATIVE_EXPORT Pyboost_BroadcastToView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::vector<int64_t>& shape);
py::object PYNATIVE_EXPORT Pyboost_IndexSelect_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index);
py::object PYNATIVE_EXPORT Pyboost_UpsampleBicubic2DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValueTuplePtr& input_size, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_InplaceUniform_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& from_, const ScalarPtr& to, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_Log1p_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Conv3DPadding_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const Int64ImmPtr& padding, const ValueTuplePtr& dilation, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_UpsampleBilinear2DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValueTuplePtr& input_size, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_EmbeddingDenseBackward_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad, const ValuePtr& indices, const Int64ImmPtr& num_weights, const std::optional<Int64ImmPtr>& padding_idx, const BoolImmPtr& scale_grad_by_freq);
py::object PYNATIVE_EXPORT Pyboost_InplaceSubScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_MultinomialExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& num_samples, const BoolImmPtr& replacement, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_BitwiseXorScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_BitwiseOrTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_SeLUExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_TopkExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& k, const Int64ImmPtr& dim, const BoolImmPtr& largest, const BoolImmPtr& sorted);
py::object PYNATIVE_EXPORT Pyboost_SliceExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim, const int64_t& start, const int64_t& end, const int64_t& step);
py::object PYNATIVE_EXPORT Pyboost_ViewAs_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_InplaceErfinv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Outer_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& vec2);
py::object PYNATIVE_EXPORT Pyboost_UpsampleNearest3DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValueTuplePtr& input_size, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales);
py::object PYNATIVE_EXPORT Pyboost_PowScalarTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ScalarPtr& input, const ValuePtr& exponent);
py::object PYNATIVE_EXPORT Pyboost_LogAddExp2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_FloorDivScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_MaxPoolWithIndices_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& strides, const ValueTuplePtr& pads, const ValueTuplePtr& dilation, const BoolImmPtr& ceil_mode, const Int64ImmPtr& argmax_type);
py::object PYNATIVE_EXPORT Pyboost_LayerNormExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& normalized_shape, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& bias, const FP32ImmPtr& eps);
py::object PYNATIVE_EXPORT Pyboost_Erfinv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_KLDiv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const Int64ImmPtr& reduction, const BoolImmPtr& log_target);
py::object PYNATIVE_EXPORT Pyboost_LinalgVectorNorm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const FP32ImmPtr& ord, const std::optional<ValueTuplePtr>& dim, const BoolImmPtr& keepdim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_OneHotExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& tensor, const Int64ImmPtr& num_classes, const ValuePtr& on_value, const ValuePtr& off_value, const Int64ImmPtr& axis);
py::object PYNATIVE_EXPORT Pyboost_LogAddExp_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_Sub_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_TraceExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Convolution_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const ValueTuplePtr& dilation, const BoolImmPtr& transposed, const ValueTuplePtr& output_padding, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_InplaceFillDiagonal_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& fill_value, const BoolImmPtr& wrap);
py::object PYNATIVE_EXPORT Pyboost_RmsNorm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& gamma, const FP32ImmPtr& epsilon);
py::object PYNATIVE_EXPORT Pyboost_ReflectionPad1D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& padding);
py::object PYNATIVE_EXPORT Pyboost_InplaceMuls_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_TriangularSolve_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& b, const ValuePtr& A, const BoolImmPtr& upper, const BoolImmPtr& transpose, const BoolImmPtr& unitriangular);
py::object PYNATIVE_EXPORT Pyboost_MaxPoolGradWithMask_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& grad, const ValuePtr& mask, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& strides, const ValueTuplePtr& pads, const ValueTuplePtr& dilation, const BoolImmPtr& ceil_mode, const Int64ImmPtr& argmax_type);
py::object PYNATIVE_EXPORT Pyboost_InplacePut_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& index, const ValuePtr& source, const BoolImmPtr& accumulate);
py::object PYNATIVE_EXPORT Pyboost_Triu_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& diagonal);
py::object PYNATIVE_EXPORT Pyboost_XLogYScalarSelf_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ScalarPtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_InnerCommReduceScatter_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& rank_size, const StringImmPtr& op_type, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_MultiScaleDeformableAttn_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& value, const ValuePtr& shape, const ValuePtr& offset, const ValuePtr& locations, const ValuePtr& weight);
py::object PYNATIVE_EXPORT Pyboost_Select_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& condition, const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_DropoutExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& p, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_Cross_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_DistCommScatter_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValueTuplePtr& scatter_list, const Int64ImmPtr& rank_size, const Int64ImmPtr& src, const Int64ImmPtr& rank_id, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_MatmulReduceScatter_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& x2, const StringImmPtr& group, const Int64ImmPtr& world_size, const Int64ImmPtr& reduce_op, const std::optional<ValuePtr>& bias, const Int64ImmPtr& comm_turn, const BoolImmPtr& trans_input, const BoolImmPtr& trans_x2);
py::object PYNATIVE_EXPORT Pyboost_AddcdivExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& tensor1, const ValuePtr& tensor2, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_Abs_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_TExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_AddRmsNorm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x1, const ValuePtr& x2, const ValuePtr& gamma, const FP32ImmPtr& epsilon);
py::object PYNATIVE_EXPORT Pyboost_AdaptiveAvgPool2DGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& x);
py::object PYNATIVE_EXPORT Pyboost_Conv3DExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const ValueTuplePtr& padding, const ValueTuplePtr& dilation, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_LeakyReLUGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& input, const ScalarPtr& negative_slope, const BoolImmPtr& is_result);
py::object PYNATIVE_EXPORT Pyboost_IndexFillTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& value);
py::object PYNATIVE_EXPORT Pyboost_Generator_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const Int64ImmPtr& cmd, const ValueTuplePtr& inputs);
py::object PYNATIVE_EXPORT Pyboost_Trunc_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_FloorDiv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_GridSampler2DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad, const ValuePtr& input_x, const ValuePtr& grid, const Int64ImmPtr& interpolation_mode, const Int64ImmPtr& padding_mode, const BoolImmPtr& align_corners, const ValueTuplePtr& output_mask);
py::object PYNATIVE_EXPORT Pyboost_Mul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_SoftShrinkGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input_grad, const ValuePtr& input_x, const FP32ImmPtr& lambd);
py::object PYNATIVE_EXPORT Pyboost_GreaterEqual_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_BitwiseOrScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_PReLU_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight);
py::object PYNATIVE_EXPORT Pyboost_Ceil_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_ArgMaxExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<Int64ImmPtr>& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_BincountExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValuePtr>& weights, const Int64ImmPtr& minlength);
py::object PYNATIVE_EXPORT Pyboost_ReluGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& y_backprop, const ValuePtr& x);
py::object PYNATIVE_EXPORT Pyboost_SilentCheckV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& val, const ValuePtr& input_grad, const ValuePtr& sfda, const ValuePtr& step, const Int64ImmPtr& c_min_steps, const FP32ImmPtr& c_thresh_l1, const FP32ImmPtr& c_coeff_l1, const FP32ImmPtr& c_thresh_l2, const FP32ImmPtr& c_coeff_l2, const Int64ImmPtr& npu_asd_detect);
py::object PYNATIVE_EXPORT Pyboost_UniqueDim_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const BoolImmPtr& sorted, const BoolImmPtr& return_inverse, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_RandIntLike_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& low, const Int64ImmPtr& high, const ValuePtr& seed, const ValuePtr& offset, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_Rsqrt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_NewFull_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& size, const ScalarPtr& fill_value, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_InplaceBernoulliTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& p, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_InnerCommAllReduce_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const StringImmPtr& op_type, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_Col2ImExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& output_size, const ValueTuplePtr& kernel_size, const ValueTuplePtr& dilation, const ValueTuplePtr& padding, const ValueTuplePtr& stride);
py::object PYNATIVE_EXPORT Pyboost_DistCommBroadcast_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& src, const Int64ImmPtr& rank_id, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_LayerNormGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& x, const ValueTuplePtr& normalized_shape, const ValuePtr& mean, const ValuePtr& variance, const ValuePtr& gamma, const ValuePtr& beta, const ValueTuplePtr& output_mask);
py::object PYNATIVE_EXPORT Pyboost_FlashAttentionScoreGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& key, const ValuePtr& value, const ValuePtr& dy, const std::optional<ValuePtr>& pse_shift, const std::optional<ValuePtr>& drop_mask, const std::optional<ValuePtr>& padding_mask, const std::optional<ValuePtr>& atten_mask, const std::optional<ValuePtr>& softmax_max, const std::optional<ValuePtr>& softmax_sum, const std::optional<ValuePtr>& softmax_in, const std::optional<ValuePtr>& attention_in, const std::optional<ValueTuplePtr>& prefix, const std::optional<ValueTuplePtr>& actual_seq_qlen, const std::optional<ValueTuplePtr>& actual_seq_kvlen, const Int64ImmPtr& head_num, const FP32ImmPtr& keep_prob, const FP32ImmPtr& scale_value, const Int64ImmPtr& pre_tokens, const Int64ImmPtr& next_tokens, const Int64ImmPtr& inner_precise, const Int64ImmPtr& input_layout, const Int64ImmPtr& sparse_mode);
py::object PYNATIVE_EXPORT Pyboost_EluExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_ApplyRotaryPosEmb_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& key, const ValuePtr& cos, const ValuePtr& sin, const ValuePtr& position_ids, const Int64ImmPtr& cos_format);
py::object PYNATIVE_EXPORT Pyboost_VarMean_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim, const Int64ImmPtr& correction, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_NarrowView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim, const int64_t& start, const int64_t& length);
py::object PYNATIVE_EXPORT Pyboost_UpsampleNearest1DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValueTuplePtr& input_size, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales);
py::object PYNATIVE_EXPORT Pyboost_MSELossExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_NormalFloatTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ScalarPtr& mean, const ValuePtr& std, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_InplaceRandom_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& from_, const std::optional<Int64ImmPtr>& to, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_NonZero_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InplaceCopy_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& src, const BoolImmPtr& non_blocking);
py::object PYNATIVE_EXPORT Pyboost_MoeDistributeCombine_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& expand_x, const ValuePtr& expert_ids, const ValuePtr& expand_idx, const ValuePtr& ep_send_counts, const ValuePtr& expert_scales, const Int64ImmPtr& ep_world_size, const Int64ImmPtr& ep_rank_id, const Int64ImmPtr& moe_expert_num, const std::optional<ValuePtr>& tp_send_counts, const std::optional<ValuePtr>& x_active_mask, const std::optional<ValuePtr>& activate_scale, const std::optional<ValuePtr>& weight_scale, const std::optional<ValuePtr>& group_list, const std::optional<ValuePtr>& expand_scales, const std::optional<StringImmPtr>& group_ep, const std::optional<StringImmPtr>& group_tp, const Int64ImmPtr& tp_world_size, const Int64ImmPtr& tp_rank_id, const Int64ImmPtr& expert_shard_type, const Int64ImmPtr& shared_expert_num, const Int64ImmPtr& shared_export_rank_num, const Int64ImmPtr& global_bs, const Int64ImmPtr& out_dtype, const Int64ImmPtr& common_quant_mode, const Int64ImmPtr& group_list_type);
py::object PYNATIVE_EXPORT Pyboost_LeakyReLUExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& negative_slope);
py::object PYNATIVE_EXPORT Pyboost_SpeedFusionAttentionGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& key, const ValuePtr& value, const ValuePtr& dy, const Int64ImmPtr& head_num, const Int64ImmPtr& input_layout, const std::optional<ValuePtr>& pse, const std::optional<ValuePtr>& padding_mask, const std::optional<ValuePtr>& atten_mask, const std::optional<ValuePtr>& softmax_max, const std::optional<ValuePtr>& softmax_sum, const std::optional<ValuePtr>& softmax_in, const std::optional<ValuePtr>& attention_in, const FP32ImmPtr& scale_value, const FP32ImmPtr& keep_prob, const Int64ImmPtr& pre_tokens, const Int64ImmPtr& next_tokens, const Int64ImmPtr& inner_precise, const std::optional<ValuePtr>& seed, const std::optional<ValuePtr>& offset, const std::optional<ValuePtr>& numels, const std::optional<ValueTuplePtr>& prefix, const std::optional<ValueTuplePtr>& actual_seq_qlen, const std::optional<ValueTuplePtr>& actual_seq_kvlen, const Int64ImmPtr& sparse_mode, const BoolImmPtr& gen_mask_parallel, const BoolImmPtr& sync, const Int64ImmPtr& pse_type, const std::optional<ValueTuplePtr>& q_start_idx, const std::optional<ValueTuplePtr>& kv_start_idx);
py::object PYNATIVE_EXPORT Pyboost_Narrow_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim, const int64_t& start, const int64_t& length);
py::object PYNATIVE_EXPORT Pyboost_DistCommBatchIsendIrecv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& input, const StringImmPtr& group, const ValueTuplePtr& op_types, const ValueTuplePtr& remotes_ranks);
py::object PYNATIVE_EXPORT Pyboost_DistCommReduceScatter_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValueTuplePtr& input_list, const Int64ImmPtr& rank_size, const StringImmPtr& op_type, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_RmsNormGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& x, const ValuePtr& rstd, const ValuePtr& gamma);
py::object PYNATIVE_EXPORT Pyboost_L1LossBackwardExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValuePtr& target, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_Div_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_Maximum_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_LinSpaceExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ScalarPtr& start, const ScalarPtr& end, const Int64ImmPtr& steps, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_StdMean_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim, const Int64ImmPtr& correction, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_Var_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim, const Int64ImmPtr& correction, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_Divs_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_InplaceMatmulAdd_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& weight, const ValuePtr& C);
py::object PYNATIVE_EXPORT Pyboost_NLLLoss2d_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const ValuePtr& weight, const Int64ImmPtr& reduction, const Int64ImmPtr& ignore_index);
py::object PYNATIVE_EXPORT Pyboost_InplaceAddmm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mat1, const ValuePtr& mat2, const ScalarPtr& beta, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_PromptFlashAttention_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValuePtr& key, const ValuePtr& value, const std::optional<ValuePtr>& attn_mask, const std::optional<ValueTuplePtr>& actual_seq_lengths, const std::optional<ValueTuplePtr>& actual_seq_lengths_kv, const std::optional<ValuePtr>& pse_shift, const std::optional<ValuePtr>& deq_scale1, const std::optional<ValuePtr>& quant_scale1, const std::optional<ValuePtr>& deq_scale2, const std::optional<ValuePtr>& quant_scale2, const std::optional<ValuePtr>& quant_offset2, const Int64ImmPtr& num_heads, const FP32ImmPtr& scale_value, const Int64ImmPtr& pre_tokens, const Int64ImmPtr& next_tokens, const Int64ImmPtr& input_layout, const Int64ImmPtr& num_key_value_heads, const Int64ImmPtr& sparse_mode, const Int64ImmPtr& inner_precise);
py::object PYNATIVE_EXPORT Pyboost_InplaceDivs_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_BernoulliExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_InnerCommAllGather_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& rank_size, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_Hardtanh_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& min_val, const ScalarPtr& max_val);
py::object PYNATIVE_EXPORT Pyboost_NonZeroExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InnerIndex_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& indices);
py::object PYNATIVE_EXPORT Pyboost_ExpandDimsView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_Addmm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mat1, const ValuePtr& mat2, const ScalarPtr& beta, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_InplaceElu_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_L1LossExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_InplaceScatterSrc_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& src);
py::object PYNATIVE_EXPORT Pyboost_RotaryPositionEmbeddingGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& cos, const ValuePtr& sin, const std::optional<ValuePtr>& dx, const Int64ImmPtr& mode);
py::object PYNATIVE_EXPORT Pyboost_HShrinkGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& gradients, const ValuePtr& features, const FP32ImmPtr& lambd);
py::object PYNATIVE_EXPORT Pyboost_BinaryCrossEntropy_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& target, const std::optional<ValuePtr>& weight, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_Less_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_SelectV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& condition, const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_IndexAddExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const ValuePtr& index, const ValuePtr& source, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_MishExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Pow_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& exponent);
py::object PYNATIVE_EXPORT Pyboost_FullLike_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& fill_value, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_ReduceAny_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValueTuplePtr& axis, const BoolImmPtr& keep_dims);
py::object PYNATIVE_EXPORT Pyboost_CrossEntropyLossGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_loss, const ValuePtr& log_prob, const ValuePtr& target, const std::optional<ValuePtr>& weight, const std::optional<ValuePtr>& grad_zloss, const std::optional<ValuePtr>& lse_for_zloss, const Int64ImmPtr& reduction, const Int64ImmPtr& ignore_index, const FP32ImmPtr& label_smoothing, const FP32ImmPtr& lse_square_scale_for_zloss);
py::object PYNATIVE_EXPORT Pyboost_RandInt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const Int64ImmPtr& low, const Int64ImmPtr& high, const ValueTuplePtr& shape, const ValuePtr& seed, const ValuePtr& offset, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_EluGradExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& x_or_out, const FP32ImmPtr& alpha, const BoolImmPtr& is_result);
py::object PYNATIVE_EXPORT Pyboost_IncreFlashAttention_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValueTuplePtr& key, const ValueTuplePtr& value, const std::optional<ValuePtr>& attn_mask, const std::optional<ValuePtr>& actual_seq_lengths, const std::optional<ValuePtr>& pse_shift, const std::optional<ValuePtr>& dequant_scale1, const std::optional<ValuePtr>& quant_scale1, const std::optional<ValuePtr>& dequant_scale2, const std::optional<ValuePtr>& quant_scale2, const std::optional<ValuePtr>& quant_offset2, const std::optional<ValuePtr>& antiquant_scale, const std::optional<ValuePtr>& antiquant_offset, const std::optional<ValuePtr>& block_table, const std::optional<ValuePtr>& kv_padding_size, const Int64ImmPtr& num_heads, const Int64ImmPtr& input_layout, const FP32ImmPtr& scale_value, const Int64ImmPtr& num_key_value_heads, const Int64ImmPtr& block_size, const Int64ImmPtr& inner_precise);
py::object PYNATIVE_EXPORT Pyboost_ConstantPadND_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& padding, const ScalarPtr& value);
py::object PYNATIVE_EXPORT Pyboost_RemainderTensorScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_ArgMaxWithValue_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& axis, const BoolImmPtr& keep_dims);
py::object PYNATIVE_EXPORT Pyboost_DistCommReduceScatterTensorUneven_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValuePtr& input, const ValueTuplePtr& input_split_size, const Int64ImmPtr& rank_size, const StringImmPtr& op_type, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_CumminExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim);
py::object PYNATIVE_EXPORT Pyboost_Atan2Ext_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_MoeDistributeDispatch_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& expert_ids, const Int64ImmPtr& ep_world_size, const Int64ImmPtr& ep_rank_id, const Int64ImmPtr& moe_expert_num, const std::optional<ValuePtr>& expert_scales, const std::optional<ValuePtr>& scales, const std::optional<ValuePtr>& x_active_mask, const std::optional<StringImmPtr>& group_ep, const std::optional<StringImmPtr>& group_tp, const Int64ImmPtr& tp_world_size, const Int64ImmPtr& tp_rank_id, const Int64ImmPtr& expert_shard_type, const Int64ImmPtr& shared_expert_num, const Int64ImmPtr& shared_expert_rank_num, const Int64ImmPtr& quant_mode, const Int64ImmPtr& global_bs, const Int64ImmPtr& expert_token_nums_type);
py::object PYNATIVE_EXPORT Pyboost_Baddbmm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& batch1, const ValuePtr& batch2, const ScalarPtr& beta, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_InplaceAddExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_InplaceLog_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_LerpScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& end, const FP32ImmPtr& weight);
py::object PYNATIVE_EXPORT Pyboost_SilentCheckV3_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& val, const ValuePtr& max, const ValuePtr& avg, const ValuePtr& input_grad, const ValuePtr& step, const FP32ImmPtr& c_thresh_l1, const FP32ImmPtr& c_thresh_l2, const FP32ImmPtr& beta1, const Int64ImmPtr& npu_asd_detect);
py::object PYNATIVE_EXPORT Pyboost_Tan_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_UpsampleLinear1DGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValueTuplePtr& input_size, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_Min_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_FlattenExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& start_dim, const Int64ImmPtr& end_dim);
py::object PYNATIVE_EXPORT Pyboost_NewOnes_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& size, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_DropoutDoMaskExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& mask, const FP32ImmPtr& p);
py::object PYNATIVE_EXPORT Pyboost_DistCommScatterTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& other, const ValuePtr& input, const Int64ImmPtr& rank_size, const Int64ImmPtr& src, const Int64ImmPtr& rank_id, const StringImmPtr& group);
py::object PYNATIVE_EXPORT Pyboost_RandpermExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const Int64ImmPtr& n, const ValuePtr& seed, const ValuePtr& offset, const Int64ImmPtr& dtype);
py::object PYNATIVE_EXPORT Pyboost_SortExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const BoolImmPtr& descending, const BoolImmPtr& stable);
py::object PYNATIVE_EXPORT Pyboost_UpsampleBilinear2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales, const BoolImmPtr& align_corners);
py::object PYNATIVE_EXPORT Pyboost_Conv2DPadding_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const Int64ImmPtr& padding, const ValueTuplePtr& dilation, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_Square_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_GeluExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& approximate);
py::object PYNATIVE_EXPORT Pyboost_BitwiseAndScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_InnerCommIrecv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const Int64ImmPtr& tag, const Int64ImmPtr& src, const ValueTuplePtr& shape, const StringImmPtr& group, const Int64ImmPtr& dtype);
py::object PYNATIVE_EXPORT Pyboost_LogicalNot_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_SiLU_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_Take_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& index);
py::object PYNATIVE_EXPORT Pyboost_Sign_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_UpsampleNearest3D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValueTuplePtr>& output_size, const std::optional<ValueTuplePtr>& scales);
py::object PYNATIVE_EXPORT Pyboost_Addbmm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& batch1, const ValuePtr& batch2, const ScalarPtr& beta, const ScalarPtr& alpha);
py::object PYNATIVE_EXPORT Pyboost_Roll_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& shifts, const std::optional<ValueTuplePtr>& dims);
py::object PYNATIVE_EXPORT Pyboost_Std_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim, const Int64ImmPtr& correction, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_Sinh_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_DropoutGenMaskExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& shape, const FP32ImmPtr& p, const ValuePtr& seed, const ValuePtr& offset, const Int64ImmPtr& dtype);
py::object PYNATIVE_EXPORT Pyboost_KLDivGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ValuePtr& target, const Int64ImmPtr& reduction, const BoolImmPtr& log_target);
py::object PYNATIVE_EXPORT Pyboost_SiLUGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dout, const ValuePtr& x);
py::object PYNATIVE_EXPORT Pyboost_RemainderScalarTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ScalarPtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_SmoothL1Loss_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& prediction, const ValuePtr& target, const FP32ImmPtr& beta, const Int64ImmPtr& reduction);
py::object PYNATIVE_EXPORT Pyboost_ConvolutionStr_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& weight, const std::optional<ValuePtr>& bias, const ValueTuplePtr& stride, const Int64ImmPtr& padding, const ValueTuplePtr& dilation, const BoolImmPtr& transposed, const ValueTuplePtr& output_padding, const Int64ImmPtr& groups);
py::object PYNATIVE_EXPORT Pyboost_FillScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& size, const ScalarPtr& fill_value, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_TypeAs_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_MoeTokenPermuteGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& permuted_tokens_grad, const ValuePtr& sorted_indices, const Int64ImmPtr& num_topk, const BoolImmPtr& padded_mode);
py::object PYNATIVE_EXPORT Pyboost_ClampScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ScalarPtr>& min, const std::optional<ScalarPtr>& max);
py::object PYNATIVE_EXPORT Pyboost_Nansum_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const std::optional<ValueTuplePtr>& dim, const BoolImmPtr& keepdim, const std::optional<Int64ImmPtr>& dtype);
py::object PYNATIVE_EXPORT Pyboost_ChunkView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& chunks, const int64_t& dim);
py::object PYNATIVE_EXPORT Pyboost_Erfc_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InplaceRemainderTensorTensor_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_TransposeExtView_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const int64_t& dim0, const int64_t& dim1);
py::object PYNATIVE_EXPORT Pyboost_HSwishGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& y_grad, const ValuePtr& x);
py::object PYNATIVE_EXPORT Pyboost_InplaceDiv_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValuePtr& other);
py::object PYNATIVE_EXPORT Pyboost_AddLayerNormGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& dy, const ValuePtr& x1, const ValuePtr& x2, const ValuePtr& rstd, const ValuePtr& mean, const ValuePtr& gamma, const ValuePtr& dsumOptional);
py::object PYNATIVE_EXPORT Pyboost_MaskedFill_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input_x, const ValuePtr& mask, const ValuePtr& value);
py::object PYNATIVE_EXPORT Pyboost_ReverseV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& axis);
py::object PYNATIVE_EXPORT Pyboost_InplaceHardtanh_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& min_val, const ScalarPtr& max_val);
py::object PYNATIVE_EXPORT Pyboost_FmodScalar_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& other);
py::object PYNATIVE_EXPORT Pyboost_Empty_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& size, const std::optional<Int64ImmPtr>& dtype, const std::optional<Int64ImmPtr>& device);
py::object PYNATIVE_EXPORT Pyboost_Log10_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_ReduceMin_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValueTuplePtr& axis, const BoolImmPtr& keep_dims);
py::object PYNATIVE_EXPORT Pyboost_ThresholdGrad_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& grad_output, const ValuePtr& input, const ScalarPtr& threshold);
py::object PYNATIVE_EXPORT Pyboost_FusedInferAttentionScore_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& query, const ValueTuplePtr& key, const ValueTuplePtr& value, const std::optional<ValuePtr>& pse_shift, const std::optional<ValuePtr>& attn_mask, const std::optional<ValuePtr>& actual_seq_lengths, const std::optional<ValuePtr>& actual_seq_lengths_kv, const std::optional<ValuePtr>& dequant_scale1, const std::optional<ValuePtr>& quant_scale1, const std::optional<ValuePtr>& dequant_scale2, const std::optional<ValuePtr>& quant_scale2, const std::optional<ValuePtr>& quant_offset2, const std::optional<ValuePtr>& antiquant_scale, const std::optional<ValuePtr>& antiquant_offset, const std::optional<ValuePtr>& block_table, const std::optional<ValuePtr>& query_padding_size, const std::optional<ValuePtr>& kv_padding_size, const std::optional<ValuePtr>& key_antiquant_scale, const std::optional<ValuePtr>& key_antiquant_offset, const std::optional<ValuePtr>& value_antiquant_scale, const std::optional<ValuePtr>& value_antiquant_offset, const std::optional<ValuePtr>& key_shared_prefix, const std::optional<ValuePtr>& value_shared_prefix, const std::optional<ValuePtr>& actual_shared_prefix_len, const Int64ImmPtr& num_heads, const FP32ImmPtr& scale_value, const Int64ImmPtr& pre_tokens, const Int64ImmPtr& next_tokens, const Int64ImmPtr& input_layout, const Int64ImmPtr& num_key_value_heads, const Int64ImmPtr& sparse_mode, const Int64ImmPtr& inner_precise, const Int64ImmPtr& block_size, const Int64ImmPtr& antiquant_mode, const BoolImmPtr& softmax_lse_flag, const Int64ImmPtr& key_antiquant_mode, const Int64ImmPtr& value_antiquant_mode);
py::object PYNATIVE_EXPORT Pyboost_GroupedMatmulV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& x, const ValueTuplePtr& weight, const std::optional<ValueTuplePtr>& bias, const std::optional<ValueTuplePtr>& scale, const std::optional<ValueTuplePtr>& offset, const std::optional<ValueTuplePtr>& antiquant_scale, const std::optional<ValueTuplePtr>& antiquant_offset, const std::optional<ValueTuplePtr>& group_list, const Int64ImmPtr& split_item, const Int64ImmPtr& group_type);
py::object PYNATIVE_EXPORT Pyboost_MoeInitRoutingQuantV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& expert_idx, const Int64ImmPtr& active_num, const Int64ImmPtr& expert_capacity, const Int64ImmPtr& expert_num, const Int64ImmPtr& drop_pad_mode, const Int64ImmPtr& expert_tokens_count_or_cumsum_flag, const BoolImmPtr& expert_tokens_before_capacity_flag, const Int64ImmPtr& quant_mode, const std::optional<ValuePtr>& scale, const std::optional<ValuePtr>& offset);
py::object PYNATIVE_EXPORT Pyboost_MoeComputeExpertTokens_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& sorted_experts, const Int64ImmPtr& num_expert);
py::object PYNATIVE_EXPORT Pyboost_QuantBatchMatmul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x1, const ValuePtr& x2, const ValuePtr& scale, const std::optional<ValuePtr>& offset, const std::optional<ValuePtr>& bias, const std::optional<ValuePtr>& pertokenScaleOptional, const BoolImmPtr& transpose_x1, const BoolImmPtr& transpose_x2, const Int64ImmPtr& dtype);
py::object PYNATIVE_EXPORT Pyboost_DynamicQuantExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValuePtr>& smooth_scales);
py::object PYNATIVE_EXPORT Pyboost_MoeInitRouting_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& row_idx, const ValuePtr& expert_idx, const Int64ImmPtr& active_num);
py::object PYNATIVE_EXPORT Pyboost_MoeFinalizeRouting_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& expanded_x, const ValuePtr& x1, const std::optional<ValuePtr>& x2, const std::optional<ValuePtr>& bias, const std::optional<ValuePtr>& scales, const std::optional<ValuePtr>& expanded_row_idx, const std::optional<ValuePtr>& expanded_expert_idx);
py::object PYNATIVE_EXPORT Pyboost_MoeGatingTopKSoftmax_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const std::optional<ValuePtr>& finished, const Int64ImmPtr& k);
py::object PYNATIVE_EXPORT Pyboost_QuantV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& scale, const ValuePtr& offset, const BoolImmPtr& sqrt_mode, const Int64ImmPtr& rounding_mode, const Int64ImmPtr& dst_type);
py::object PYNATIVE_EXPORT Pyboost_MoeInitRoutingV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& expert_idx, const Int64ImmPtr& active_num, const Int64ImmPtr& expert_capacity, const Int64ImmPtr& expert_num, const Int64ImmPtr& drop_pad_mode, const Int64ImmPtr& expert_tokens_count_or_cumsum_flag, const BoolImmPtr& expert_tokens_before_capacity_flag);
py::object PYNATIVE_EXPORT Pyboost_KVCacheScatterUpdate_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& var, const ValuePtr& indices, const ValuePtr& updates, const Int64ImmPtr& axis, const Int64ImmPtr& reduce);
py::object PYNATIVE_EXPORT Pyboost_GroupedMatmul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& x, const ValueTuplePtr& weight, const std::optional<ValueTuplePtr>& bias, const std::optional<ValueTuplePtr>& scale, const std::optional<ValueTuplePtr>& offset, const std::optional<ValueTuplePtr>& antiquant_scale, const std::optional<ValueTuplePtr>& antiquant_offset, const std::optional<ValuePtr>& group_list, const Int64ImmPtr& split_item, const Int64ImmPtr& group_type, const BoolImmPtr& transpose_a, const BoolImmPtr& transpose_b);
py::object PYNATIVE_EXPORT Pyboost_GroupedMatmulV4_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& x, const ValueTuplePtr& weight, const std::optional<ValueTuplePtr>& bias, const std::optional<ValueTuplePtr>& scale, const std::optional<ValueTuplePtr>& offset, const std::optional<ValueTuplePtr>& antiquant_scale, const std::optional<ValueTuplePtr>& antiquant_offset, const std::optional<ValueTuplePtr>& pre_token_scale, const std::optional<ValuePtr>& group_list, const std::optional<ValueTuplePtr>& activation_input, const std::optional<ValueTuplePtr>& activation_quant_scale, const std::optional<ValueTuplePtr>& activation_quant_offset, const Int64ImmPtr& split_item, const Int64ImmPtr& group_type, const Int64ImmPtr& group_list_type, const Int64ImmPtr& act_type);
py::object PYNATIVE_EXPORT Pyboost_QuantMatmul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x1, const ValuePtr& x2, const ValuePtr& scale, const std::optional<ValuePtr>& offset, const std::optional<ValuePtr>& pertoken_scale, const std::optional<ValuePtr>& bias, const std::optional<Int64ImmPtr>& output_dtype, const std::optional<Int64ImmPtr>& x1_dtype, const std::optional<Int64ImmPtr>& x2_dtype, const std::optional<Int64ImmPtr>& pertoken_scale_dtype, const std::optional<Int64ImmPtr>& scale_dtype, const std::optional<ValueTuplePtr>& group_sizes);
py::object PYNATIVE_EXPORT Pyboost_MatmulAllReduceAddRmsNorm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x1, const ValuePtr& x2, const ValuePtr& bias, const ValuePtr& residual, const ValuePtr& gamma, const FP32ImmPtr& epsilon, const StringImmPtr& group, const Int64ImmPtr& reduce_op, const Int64ImmPtr& comm_turn, const Int64ImmPtr& stream_mode);
py::object PYNATIVE_EXPORT Pyboost_AddRmsNormQuantV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x1, const ValuePtr& x2, const ValuePtr& gamma, const ValuePtr& scale, const ValuePtr& offset, const FP32ImmPtr& epsilon);
py::object PYNATIVE_EXPORT Pyboost_WeightQuantBatchMatmul_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& x, const ValuePtr& weight, const ValuePtr& antiquant_scale, const std::optional<ValuePtr>& antiquant_offset, const std::optional<ValuePtr>& quant_scale, const std::optional<ValuePtr>& quant_offset, const std::optional<ValuePtr>& bias, const BoolImmPtr& transpose_x, const BoolImmPtr& transpose_weight, const Int64ImmPtr& antiquant_group_size);
py::object PYNATIVE_EXPORT Pyboost_PixelShuffle_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& upscale_factor);
py::object PYNATIVE_EXPORT Pyboost_AnyExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const Int64ImmPtr& dim, const BoolImmPtr& keepdim);
py::object PYNATIVE_EXPORT Pyboost_FuncMaxPool2D_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ValueTuplePtr& kernel_size, const std::optional<ValueTuplePtr>& stride, const ValueTuplePtr& padding, const ValueTuplePtr& dilation, const BoolImmPtr& ceil_mode, const BoolImmPtr& return_indices);
py::object PYNATIVE_EXPORT Pyboost_FuncDropoutExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const FP32ImmPtr& p, const BoolImmPtr& training, const BoolImmPtr& inplace, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_Gmm_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& x, const ValueTuplePtr& weight, const std::optional<ValueTuplePtr>& bias, const std::optional<ValueTuplePtr>& group_list, const Int64ImmPtr& group_type, const Int64ImmPtr& group_list_type);
py::object PYNATIVE_EXPORT Pyboost_GmmV2Backward_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& grad, const ValueTuplePtr& x, const ValueTuplePtr& weight, const std::optional<ValuePtr>& group_list, const Int64ImmPtr& group_list_type);
py::object PYNATIVE_EXPORT Pyboost_Any_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input);
py::object PYNATIVE_EXPORT Pyboost_InplaceExponential_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& input, const ScalarPtr& lambd, const ValuePtr& seed, const ValuePtr& offset);
py::object PYNATIVE_EXPORT Pyboost_GmmV2_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& x, const ValueTuplePtr& weight, const std::optional<ValueTuplePtr>& bias, const std::optional<ValuePtr>& group_list, const Int64ImmPtr& group_type, const Int64ImmPtr& group_list_type);
py::object PYNATIVE_EXPORT Pyboost_GmmBackward_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& grad, const ValueTuplePtr& x, const ValueTuplePtr& weight, const std::optional<ValueTuplePtr>& group_list, const Int64ImmPtr& group_list_type);
py::object PYNATIVE_EXPORT Pyboost_EinsumExt_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const StringImmPtr& equation, const ValueTuplePtr& operands);
py::object PYNATIVE_EXPORT Pyboost_GmmBackwardFusion_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& grad, const ValueTuplePtr& weight, const std::optional<ValueTuplePtr>& group_list, const Int64ImmPtr& group_list_type);
py::object PYNATIVE_EXPORT Pyboost_MoeTokenUnpermute_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValuePtr& permuted_tokens, const ValuePtr& sorted_indices, const std::optional<ValuePtr>& probs, const BoolImmPtr& padded_mode, const std::optional<ValueTuplePtr>& restore_shape);
py::object PYNATIVE_EXPORT Pyboost_GmmV2BackwardFusion_OP(const PrimitivePtr &prim, const std::vector<ops::OP_DTYPE>& source_type,  const ValueTuplePtr& grad, const ValueTuplePtr& weight, const std::optional<ValuePtr>& group_list, const Int64ImmPtr& group_list_type);
}// namespace mindspore::pynative
