name: CI Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev,test]

      - name: Lint with flake8
        run: |
          # Stop the build if there are critical Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Check for other issues but don't fail the build
          flake8 . --count --max-complexity=10 --max-line-length=120 --statistics || true

      - name: Format check with black (non-blocking)
        run: |
          black --check --diff pymedsec/ tests/ || true

      - name: Run tests with pytest
        run: |
          pytest tests/ -v --tb=short
        env:
          IMGSEC_POLICY: mock
          IMGSEC_KMS_BACKEND: mock
          IMGSEC_KMS_KEY_REF: test-key

      - name: Test package installation
        run: |
          python -c "import pymedsec; print('Package imported successfully')"

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit[toml]
          pip install -e .

      - name: Run safety check (non-blocking)
        run: safety check || true

      - name: Run bandit security linter (non-blocking)
        run: bandit -r pymedsec/ -f json -o bandit-report.json || true

      - name: Upload bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json
