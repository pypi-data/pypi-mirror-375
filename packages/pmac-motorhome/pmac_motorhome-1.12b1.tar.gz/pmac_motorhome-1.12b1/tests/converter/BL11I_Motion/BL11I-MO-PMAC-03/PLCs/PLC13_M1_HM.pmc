CLOSE

;####################################################
; Autogenerated Homing PLC for PMAC, DO NOT MODIFY
; Group 2:
;  Axis 23: htype = LIMIT, jdist = 0, post = i
;  Axis 24: htype = LIMIT, jdist = 0, post = i
;  Axis 25: htype = HSW, jdist = -1000, post = i
;  Axis 26: htype = HSW, jdist = -1000, post = i
; Group 3:
;  Axis 20: htype = LIMIT, jdist = 0, post = i
; Group 4:
;  Axis 21: htype = HSW, jdist = 0, post = i
;  Axis 22: htype = HSW, jdist = 0, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(13&30)*50+13%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1300
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1301
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1302
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1303
HomingBackupGroup = 0

OPEN PLC13 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1304=i2313 P1305=i2413 P1306=i2513 P1307=i2613 P1308=i2013 P1309=i2113 P1310=i2213
;Save the low soft limits to P variables px20..x35
P1320=i2314 P1321=i2414 P1322=i2514 P1323=i2614 P1324=i2014 P1325=i2114 P1326=i2214
;Save the home capture flags to P variables px36..x51
MSR44,i912,P1336 MSR45,i912,P1337 MSR48,i912,P1338 MSR49,i912,P1339 MSR37,i912,P1340 MSR40,i912,P1341 MSR41,i912,P1342
;If any are zero then there is probably a macro error
if (P1336=0 or P1337=0 or P1338=0 or P1339=0 or P1340=0 or P1341=0 or P1342=0)
	HomingStatus=StatusInvalid
endif
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1352=P1336^$C P1353=P1337^$C P1354=P1338^$C P1355=P1339^$C P1356=P1340^$C P1357=P1341^$C P1358=P1342^$C
;Save the limit flags to P variables px68..x83
P1368=i2324 P1369=i2424 P1370=i2524 P1371=i2624 P1372=i2024 P1373=i2124 P1374=i2224
;Save the current position to P variables px84..x99
P1384=M2362 P1385=M2462 P1386=M2562 P1387=M2662 P1388=M2062 P1389=M2162 P1390=M2262
;Clear the soft limits
i2313=0 i2413=0 i2513=0 i2613=0 i2013=0 i2113=0 i2213=0
i2314=0 i2414=0 i2514=0 i2614=0 i2014=0 i2114=0 i2214=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m2345=0 m2445=0 m2545=0 m2645=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m2572=100000000*(-i2523/ABS(i2523)) 		m2672=100000000*(-i2623/ABS(i2623))
		cmd "#25J^*^-1000 #26J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2340&m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m2372=100000000*(i2323/ABS(i2323)) 		m2472=100000000*(i2423/ABS(i2423)) 		m2572=100000000*(i2523/ABS(i2523)) 		m2672=100000000*(i2623/ABS(i2623))
		cmd "#23J^*^0 #24J^*^0 #25J^*^-1000 #26J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2340&m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (m2342|m2442|m2542|m2642 = 0) ; Following error check
		and (m2530|m2630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2342|m2442|m2542|m2642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2530|m2630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1384=(P1384-M2362)/(I2308*32)+0-(i2326/16)
		P1385=(P1385-M2462)/(I2408*32)+0-(i2426/16)
		P1386=(P1386-M2562)/(I2508*32)+-1000-(i2526/16)
		P1387=(P1387-M2662)/(I2608*32)+-1000-(i2626/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW44,i912,P1352 MSW45,i912,P1353 MSW48,i912,P1354 MSW49,i912,P1355 		m2372=100000000*(-i2323/ABS(i2323)) 		m2472=100000000*(-i2423/ABS(i2423)) 		m2572=100000000*(-i2523/ABS(i2523)) 		m2672=100000000*(-i2623/ABS(i2623))
		cmd "#23J^*^0 #24J^*^0 #25J^*^-1000 #26J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2340&m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (m2342|m2442|m2542|m2642 = 0) ; Following error check
		and (m2530|m2630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2342|m2442|m2542|m2642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2530|m2630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if any limits need disabling ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		;Save the user home flags to P variables px52..x67
		;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
			MSR44,i913,P1352 MSR45,i913,P1353
		; if capture on flag, and flag high, then we need to disable limits
		if (P1336&2=2 and P1336&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1352=1 and i2323>0 and i2326<1)
			or (P1352=2 and i2323<0 and i2326>-1)
				i2324=i2324 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
		; if capture on flag, and flag high, then we need to disable limits
		if (P1337&2=2 and P1337&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1353=1 and i2423>0 and i2426<1)
			or (P1353=2 and i2423<0 and i2426>-1)
				i2424=i2424 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW44,i912,P1336 MSW45,i912,P1337 MSW48,i912,P1338 MSW49,i912,P1339
		cmd "#23hm #24hm #25hm #26hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2340&m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (m2342|m2442|m2542|m2642 = 0) ; Following error check
		and (m2330|m2430|m2530|m2630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2342|m2442|m2542|m2642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2330|m2430|m2530|m2630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Restore limits if needed ----
	;Restore the limit flags to P variables px68..x83
	i2324=P1368 i2424=P1369

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m2345&m2445&m2545&m2645=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m2372=P1384 m2472=P1385 m2572=P1386 m2672=P1387
		cmd "#23J=* #24J=* #25J=* #26J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2340&m2440&m2540&m2640=0) ; At least one motor should not be In Position
		and (m2342|m2442|m2542|m2642 = 0) ; Following error check
		and (m2330|m2430|m2530|m2630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2342|m2442|m2542|m2642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2330|m2430|m2530|m2630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m2045=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m2072=100000000*(i2023/ABS(i2023))
		cmd "#20J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1388=(P1388-M2062)/(I2008*32)+0-(i2026/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW37,i912,P1356 		m2072=100000000*(-i2023/ABS(i2023))
		cmd "#20J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040=0) ; At least one motor should not be In Position
		and (m2042 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2042 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if any limits need disabling ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		;Save the user home flags to P variables px52..x67
		;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
			MSR37,i913,P1356
		; if capture on flag, and flag high, then we need to disable limits
		if (P1340&2=2 and P1340&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1356=1 and i2023>0 and i2026<1)
			or (P1356=2 and i2023<0 and i2026>-1)
				i2024=i2024 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW37,i912,P1340
		cmd "#20hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040=0) ; At least one motor should not be In Position
		and (m2042 = 0) ; Following error check
		and (m2030 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2042 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2030 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Restore limits if needed ----
	;Restore the limit flags to P variables px68..x83
	i2024=P1372

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m2045=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m2072=P1388
		cmd "#20J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040=0) ; At least one motor should not be In Position
		and (m2042 = 0) ; Following error check
		and (m2030 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2042 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2030 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 4)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=4

	;Clear home flags
	m2145=0 m2245=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m2172=100000000*(-i2123/ABS(i2123)) 		m2272=100000000*(-i2223/ABS(i2223))
		cmd "#21J^*^0 #22J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2140&m2240=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m2172=100000000*(i2123/ABS(i2123)) 		m2272=100000000*(i2223/ABS(i2223))
		cmd "#21J^*^0 #22J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2140&m2240=0) ; At least one motor should not be In Position
		and (m2142|m2242 = 0) ; Following error check
		and (m2130|m2230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2142|m2242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2130|m2230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1389=(P1389-M2162)/(I2108*32)+0-(i2126/16)
		P1390=(P1390-M2262)/(I2208*32)+0-(i2226/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW40,i912,P1357 MSW41,i912,P1358 		m2172=100000000*(-i2123/ABS(i2123)) 		m2272=100000000*(-i2223/ABS(i2223))
		cmd "#21J^*^0 #22J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2140&m2240=0) ; At least one motor should not be In Position
		and (m2142|m2242 = 0) ; Following error check
		and (m2130|m2230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2142|m2242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2130|m2230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW40,i912,P1341 MSW41,i912,P1342
		cmd "#21hm #22hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2140&m2240=0) ; At least one motor should not be In Position
		and (m2142|m2242 = 0) ; Following error check
		and (m2130|m2230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2142|m2242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2130|m2230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m2145&m2245=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m2172=P1389 m2272=P1390
		cmd "#21J=* #22J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2140&m2240=0) ; At least one motor should not be In Position
		and (m2142|m2242 = 0) ; Following error check
		and (m2130|m2230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2142|m2242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2130|m2230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m2342=0)
	cmd "#23J/"
endif
if (m2442=0)
	cmd "#24J/"
endif
if (m2542=0)
	cmd "#25J/"
endif
if (m2642=0)
	cmd "#26J/"
endif
if (m2042=0)
	cmd "#20J/"
endif
if (m2142=0)
	cmd "#21J/"
endif
if (m2242=0)
	cmd "#22J/"
endif
;Restore the high soft limits from P variables px04..x19
i2313=P1304 i2413=P1305 i2513=P1306 i2613=P1307 i2013=P1308 i2113=P1309 i2213=P1310
;Restore the low soft limits from P variables px20..x35
i2314=P1320 i2414=P1321 i2514=P1322 i2614=P1323 i2014=P1324 i2114=P1325 i2214=P1326
;Restore the home capture flags from P variables px36..x51
MSW44,i912,P1336 MSW45,i912,P1337 MSW48,i912,P1338 MSW49,i912,P1339 MSW37,i912,P1340 MSW40,i912,P1341 MSW41,i912,P1342
;Restore the limit flags to P variables px68..x83
i2324=P1368 i2424=P1369 i2524=P1370 i2624=P1371 i2024=P1372 i2124=P1373 i2224=P1374

DISABLE PLC13
CLOSE
