[{{ username }}]

user = {{ username }}
group = {{ username }}


listen = /var/run/php/php-fpm-{{ username }}.sock
listen.owner = {{ username }}
listen.group = www-data
listen.mode = 0660

pm = dynamic

pm.max_children = 150
pm.start_servers = 1
pm.min_spare_servers = 1
pm.max_spare_servers = 3
pm.max_requests = 20000

;chdir = /www
catch_workers_output = yes

access.log = {{ virtualhosts_root }}/{{ username }}/logs/{{ domain }}-fpm-access.log

php_flag[display_errors] = off
php_flag[display_startup_errors] = off
php_admin_value[error_log] = {{ virtualhosts_root }}/{{ username }}/logs/{{ domain }}-fpm-error.log
php_admin_flag[log_errors] = true
php_admin_value[disable_functions] = exec,passthru,shell_exec,system
php_flag[short_open_tag] = on

php_admin_flag[session.use_strict_mode] = on

php_flag[session.cookie_httponly] = on

php_value[session.hash_function] = "sha256"

php_flag[opcache.validate_root] = on
php_flag[opcache.validate_permission] = on


; When POSIX Access Control Lists are supported you can set them using
; these options, value is a comma separated list of user/group names.
; When set, listen.owner and listen.group are ignored
;listen.acl_users = apache
;listen.acl_groups =

; process.priority = -19

; process.dumpable = yes

;pm.status_path = /status

;ping.path = /ping

;ping.response = pong

;access.log = log/$pool.access.log

;access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{mili}d %{kilo}M %C%%"

; Note: slowlog is mandatory if request_slowlog_timeout is set
;slowlog = {{ virtualhosts_root }}/{{ username }}/logs/{{ domain }}-php-fpm-slow.log

;request_slowlog_timeout = 0

;request_slowlog_trace_depth = 20

;request_terminate_timeout = 0

;rlimit_files = 1024

;rlimit_core = 0

; Chroot to this directory at the start. This value must be defined as an
; absolute path. When this value is not set, chroot is not used.
; Note: you can prefix with '$prefix' to chroot to the pool prefix or one
; of its subdirectories. If the pool prefix is not set, the global prefix
; will be used instead.
; Note: chrooting is a great security feature and should be used whenever
;       possible. However, all PHP paths will be relative to the chroot
;       (error_log, sessions.save_path, ...).
; Default Value: not set
;chroot = {{ virtualhosts_root }}/{{ username }}

; Chdir to this directory at the start.
; Note: relative path can be used.
; Default Value: current directory or / when chroot
; chdir = /var/www

catch_workers_output = yes

; Clear environment in FPM workers
; Prevents arbitrary environment variables from reaching FPM worker processes
; by clearing the environment in workers before env vars specified in this
; pool configuration are added.
; Setting to "no" will make all environment variables available to PHP code
; via getenv(), $_ENV and $_SERVER.
; Default Value: yes
;clear_env = no

; Limits the extensions of the main script FPM will allow to parse. This can
; prevent configuration mistakes on the web server side. You should only limit
; FPM to .php extensions to prevent malicious users to use other extensions to
; execute php code.
; Note: set an empty value to allow all extensions.
; Default Value: .php
security.limit_extensions = .php

; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from
; the current environment.
; Default Value: clean env
;env[HOSTNAME] = $HOSTNAME
;env[PATH] = /usr/local/bin:/usr/bin:/bin
;env[TMP] = /tmp
;env[TMPDIR] = /tmp
;env[TEMP] = /tmp

; Additional php.ini defines, specific to this pool of workers. These settings
; overwrite the values previously defined in the php.ini. The directives are the
; same as the PHP SAPI:
;   php_value/php_flag             - you can set classic ini defines which can
;                                    be overwritten from PHP call 'ini_set'.
;   php_admin_value/php_admin_flag - these directives won't be overwritten by
;                                     PHP call 'ini_set'
; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.

; Defining 'extension' will load the corresponding shared extension from
; extension_dir. Defining 'disable_functions' or 'disable_classes' will not
; overwrite previously defined php.ini values, but will append the new value
; instead.

; Note: path INI options can be relative and will be expanded with the prefix
; (pool, global or @prefix@)

; Default Value: nothing is defined by default except the values in php.ini and
;                specified at startup with the -d argument
;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
;php_flag[display_errors] = off
;php_admin_value[memory_limit] = 128M

; Set the following data paths to directories owned by the FPM process user.
;
; Do not change the ownership of existing system directories, if the process
; user does not have write permission, create dedicated directories for this
; purpose.
;
; See warning about choosing the location of these directories on your system
; at http://php.net/session.save-path
;php_value[session.save_handler] = files
;php_value[session.save_path]    = /var/opt/remi/php73/lib/php/session
;php_value[soap.wsdl_cache_dir]  = /var/opt/remi/php73/lib/php/wsdlcache
;php_value[opcache.file_cache]  = /var/opt/remi/php73/lib/php/opcache
