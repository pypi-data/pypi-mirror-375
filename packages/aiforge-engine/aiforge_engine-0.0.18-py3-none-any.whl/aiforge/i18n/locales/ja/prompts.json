{
  "base": {
    "header": "# AIForge: Pythonコード生成と実行アシスタント",
    "code_generation_header": "# コード生成仕様",
    "execution_header": "# 実行仕様",
    "execution_guidance": "コードを実行し、その結果を __result__ に割り当ててください。結果にシミュレートされたデータやプレースホルダーデータを使用することは禁止されています。"
  },
  "code_rules": {
    "executable": "- 生成されたコードは、標準のPython環境で直接実行可能でなければなりません。",
    "format": "- 標準のMarkdownコードブロック形式を使用してください：```python ... ```。いかなる説明文も出力しないでください。",
    "error_handling": "- 完全なエラーハンドリングと例外キャッチを実装してください。",
    "minimal": "- 注釈や空行のない、最小限のコードを生成してください。",
    "variables": "- 最短の変数名（a, b, c, dなど）を使用してください。関数のパラメータ名は短縮してはいけません。"
  },
  "output_format": {
    "default": "# 出力形式の要件：\n__result__ = {\n    \"data\": [{\"フィールド1\": \"値1\", ...},...],\n    \"status\": \"successまたはerror\",\n    \"summary\": \"結果の概要\",\n    \"metadata\": {\"timestamp\": \"...\", \"task_type\": \"...\"}\n}",
    "status_note": "# 重要なヒント：statusは、データ取得の結果ではなく、コードの実行状態を反映する必要があります（data=[]であっても、status=success）。",
    "ai_analysis_header": "# AI分析に基づく出力形式の要件：",
    "required_fields_label": "# 必須フィールド：",
    "non_empty_fields_label": "# 空ではないフィールド："
  },
  "format_templates": {
    "status_success_error": "successまたはerror",
    "summary_placeholder": "タスク完了の説明",
    "task_requirements_label": "出力要件:",
    "related_params_label": "関連パラメータ:",
    "special_requirements_label": "特別な要件:",
    "task_details_header": "## タスク詳細",
    "original_instruction_supplement": "# 元の指示の補足"
  },
  "analyzer_output_format": {
    "task_type": "タスクタイプ",
    "action": "具体的なアクション",
    "target": "タスクの説明",
    "execution_mode": "direct_ai_responseまたはcode_generation",
    "confidence": "信頼度",
    "param_value_placeholder": "抽出された値またはNone",
    "param_type": "パラメータタイプ",
    "required_true_false": "true/false",
    "min_items": "最小結果数",
    "non_empty_fields": "必要な結果データフィールド"
  },
  "parameterized": {
    "header": "## 🔧 パラメータ化された実行ガイド",
    "analysis_function": "タスク分析に基づいて関数を生成：",
    "param_description": "# パラメータの説明：",
    "call_instruction": "# すぐに呼び出す必要があります：",
    "usage_rules_header": "## 📋 パラメータの使用規則：",
    "usage_rules": [
      "1. 各パラメータは、関数の本体で実際に使用され、実行パスや結果に影響を与える必要があります",
      "2. パラメータから取得できる値をハードコーディングすることは禁止されています",
      "3. パラメータは、動作の制御、データソースとして、出力への影響、実行の構成に適用されます"
    ],
    "avoid_patterns_header": "## ❌ 避けるべきパターン：",
    "avoid_patterns": [
      "- 定義されているが使用されていないパラメータ",
      "- パラメータがコアロジックに影響を与えず、表示のみに使用される場合",
      "- パラメータを無視してハードコードされた値を使用する場合"
    ],
    "docstring_template": "提供されたパラメータを使用してタスクを実行します: {params}"
  },
  "direct_response": {
    "answer": "あなたは知識アシスタントです。ユーザーの質問に直接回答してください。正確、簡潔、有用であることが求められます。",
    "respond": "あなたは知識アシスタントです。ユーザーの質問に直接回答してください。正確、簡潔、有用であることが求められます。",
    "create": "あなたはコンテンツ作成アシスタントです。ユーザーの要求に基づいてコンテンツを作成してください。スタイルと形式の要件に注意してください。",
    "translate": "あなたは翻訳アシスタントです。ユーザーが提供したコンテンツを正確に翻訳してください。元の意味とスタイルを維持してください。",
    "summarize": "あなたはテキスト分析アシスタントです。ユーザーが提供したテキストコンテンツを要約し、分析してください。",
    "suggest": "あなたはコンサルタントです。ユーザーの要求に基づいて提案や意見を提供してください。",
    "chat_ai": "あなたは友好的で、プロフェッショナルで、思いやりのあるAIアシスタントです。会話の状況に応じて適切な応答を提供してください。",
    "default": "あなたはAIアシスタントです。ユーザーの要求に直接応答してください。",
    "task_target_label": "タスク目標",
    "output_requirements": {
      "text": "プレーンテキスト形式で回答する",
      "markdown": "適切な見出し、リスト、強調を含むMarkdown形式を使用する",
      "structured_text": "明確な段落と要点を含む構造化されたテキスト形式を使用する"
    },
    "task_specific_guidance": {
      "direct_response": "直接回答に焦点を当て、冗長な情報を避ける",
      "content_generation": "創造性と独創性を重視する",
      "data_process": "明確な分析の考え方を提供する"
    },
    "limitations": "\n\n## 重要な制限事項\n- 最終的な回答を直接提供し、コードを生成しないでください\n- タスクがリアルタイムデータやファイル操作を必要とする場合は、完了できないことを説明してください\n- 回答のプロフェッショナリズムと正確さを維持してください"
  },
  "analyzer": {
    "role": "あなたはAIForgeインテリジェントタスクアナライザーです。ユーザーの指示を理解し、タスクを完了するために必要な情報と期待される結果を分析する責任があります。",
    "execution_modes": "- 直接応答：モデルの既存知識のみに完全に依存して完了でき、外部/最新データを必要とする傾向が一切なく、コード実行、ファイルアクセス、外部データ、リアルタイム情報が不要\n- コード生成：その他すべて",
    "analysis_steps": "- 実行モードとタスクタイプを識別する\n- 主要なパラメータと数量要件を抽出し、適切なmin_itemsを設定する\n- 必須フィールドと検証ルールを定義する\n- 特定の種類の情報を「取得/検索/探す」という非タスク型の指示の場合、required_parametersパラメータsearch_query=元の指示を1つだけ抽出する\n- 会話の継続や感情的なサポートのような指示をインテリジェントに識別し、自動的に直接応答モードに設定する",
    "action_vocabulary": "- データ取得 → fetch_{task_type_suffix}\n- データ処理 → process_{task_type_suffix}\n- コンテンツ生成 → generate_{task_type_suffix}\n- ファイル操作 → transform_{task_type_suffix}\n- 直接応答 → respond_{task_type_suffix}\n- 会話の継続と感情的なサポート → chat_ai",
    "guidance": {
      "default_strength": "優先的に考慮",
      "strong_recommendation": "強く推奨",
      "consider": "検討可能",
      "too_many_dynamic_types": "\n注意：システムにはすでに{count}個の動的タイプがあります。パフォーマンス向上のため、組み込みタイプを優先して使用することをお勧めします。",
      "task_type_template": "\n# タスクタイプガイダンス\n{strength}以下の検証済み組み込みタスクタイプを使用してください：\n{types}\n\nこれらの組み込みタイプには以下の利点があります：\n{advantages}\n\n{creation_rule}{additional_info}",
      "builtin_advantages": "- 高いキャッシュヒット率と実行効率\n- 完全にテストされ、最適化された実行パス\n- より安定したパフォーマンスとエラーハンドリング",
      "creation_rule": "ユーザーのタスクが既存のタイプに分類できないまったく新しい分野に属する場合にのみ、新しいtask_typeを作成してください。"
    },
    "prompt": {
      "role_header": "# ロールの定義",
      "execution_mode_header": "# 実行モードの判断",
      "action_vocabulary_header": "# アクションの命名規則",
      "analysis_requirements_header": "# 分析要件",
      "output_format_header": "# 出力形式",
      "strict_json_note": "厳密にJSON形式で分析結果を返してください。"
    },
    "user_instruction_label": "ユーザー指示: "
  },
  "content_generation": {
    "direct_generation_template": "ユーザーの要求：{instruction}に基づいて、記事の内容を生成してください。",
    "search_enhanced_template": "以下の検索された最新のデータ内容に基づいて：",
    "task_requirement": "そしてユーザーのタスク要件：{instruction}に基づいて、記事の内容を生成してください。",
    "format_requirement": "出力形式の要件",
    "style_requirement": "スタイルの要件",
    "tone_requirement": "トーン",
    "language_requirement": "言語",
    "special_notes_header": "特記事項",
    "format_strict_note": "厳密に{format}形式で出力する",
    "structure_note": "コンテンツの構造が明確で、形式が標準化されていることを確認する",
    "logic_note": "コンテンツには論理と可読性が必要です",
    "tone_maintain_note": "{tone}のトーンを維持する",
    "date_note": "記事内の日付は、検索結果の日付を採用する必要があります",
    "data_based_note": "検索結果の実際のデータに基づいて分析と作成を行う",
    "content_only_note": "記事本文のみを出力し、提案、トピックタグ、技術的説明、メタ情報など本文以外のコンテンツを含めることを厳禁する"
  },
  "validation": {
    "ai_validation_prompt_template": "以下のコード実行結果が、ユーザーのタスク目標を実際に達成したかどうかを判断してください：\n\n元のユーザー指示：{original_instruction}\nタスクタイプ：{task_type}\n期待される出力要件：{expected_output}\n\n実際の実行結果\n{actual_result}\n\n{analysis_dimensions}\n\n{json_format_instruction}",
    "analysis_dimensions": "以下の観点から分析してください：\n1. 結果にユーザーが必要とする核心情報が含まれているか\n2. データ品質は実際の使用ニーズを満たしているか\n3. 明らかな論理エラーや漏れがないか\n4. 結果形式は後続の処理に便利か",
    "json_format_instruction": "JSON形式で検証結果を返してください：\n{\n    \"validation_passed\": true/false,\n    \"confidence\": 0.0-1.0,\n    \"failure_reason\": \"具体的な失敗理由（失敗した場合）\",\n    \"improvement_suggestions\": [\"改善提案1\", \"改善提案2\"],\n    \"core_issues\": [\"核心的な問題1\", \"核心的な問題2\"]\n}"
  },
  "search": {
    "guided_instruction_template": "最新の関連情報を取得するために、以下の設定を参考にして、検索関数（コメントやログ出力は不要）を生成してください：\n\n# 検索エンジンURLパターン：\n- Yahoo Japan: https://search.yahoo.co.jp/search?p={{quote(search_query)}}&n={{max_results}}\n- Google: https://www.google.com/search?q={{quote(search_query)}}&num={{max_results}}\n- Bing: https://www.bing.com/search?q={{quote(search_query)}}&count={{max_results}}\n\n# 主要なCSSセレクタ：\nYahoo Japan結果コンテナ: [\".sw-CardBase\", \".algo\", \"[class*='result']\", \".w\"]\nYahoo Japanタイトル: [\"h3\", \"h3 a\", \".sw-CardBase__title\", \".title\"]\nYahoo Japan概要: [\".sw-CardBase__body\", \".abstr\", \".sw-CardBase__summary\"]\n\nGoogle結果コンテナ: [\"div.g\", \"div[class*='result']\", \"div.tF2Cxc\", \"div.MjjYud\"]\nGoogleタイトル: [\"h3\", \"h3 a\", \".LC20lb\", \".DKV0Md\", \"[data-attrid='title']\"]\nGoogle概要: [\".VwiC3b\", \".s\", \".st\", \"[class*='snippet']\", \".yXK7lf\"]\n\nBing結果コンテナ: [\"li.b_algo\", \"div.b_algo\", \"li[class*='algo']\", \".b_algoheader\"]\nBingタイトル: [\"h2\", \"h3\", \"h2 a\", \".b_title\", \"a[href*='http']\"]\nBing概要: [\"p.b_lineclamp4\", \"div.b_caption\", \".b_snippet\", \".b_paractl\"]\n\n# 重要な処理ロジック：\n1. 3つの検索エンジンを優先順位で試行する（APIキーを使用する方法は使わない）\n2. 概要内容をコンテンツとして優先使用し、不十分な場合はconcurrent.futures.ThreadPoolExecutorを使用してページに並行アクセスし、詳細コンテンツを抽出する\n3. ページから公開時間を抽出し、以下の包括的戦略に従う：\n    - 優先metaタグ: article:published_time, datePublished, pubdate, publishdate, og:article:published_time, twitter:data1, sailthru.date, parsely-pub-date, article.published, content_date\n    - フォールバックオプション: datetime属性を持つtimeタグ、日付関連CSSクラス (.date, .timestamp, .published, .post-date, .entry-date)、構造化データ (JSON-LD with @type Article)\n    - 日本語と英語の日付の高度なテキストパターン：\n      * 標準形式: YYYY-MM-DD, YYYY/MM/DD, MM/DD/YYYY, DD/MM/YYYY\n      * 日本語月形式: \"2024年1月15日\", \"令和6年1月15日\", \"1月15日\", \"15日\"\n      * 相対時間表現: \"X分/時間/日/週/月/年前\", \"昨日\", \"今日\", \"先週\", \"先月\", \"1分/時間/日/週/月/年前\", \"たった今\", \"少し前\"\n      * Regexパターン: r\"(\\d{4}年\\d{1,2}月\\d{1,2}日)\", r\"(\\d+\\s*(?:分|時間|日|週|月|年)前)\", r\"(昨日|今日|たった今|少し前)\"\n4. 公開時間でソートし、過去7日間のコンテンツを優先する\n5. 検証ページ、Cookieお知らせ、無効なコンテンツをフィルタリングし、エンコーディングを正しく処理し、結果に文字化けを含めない\n6. 各検索エンジンに対して適切なフォールバックを持つ堅牢なエラーハンドリングを実装する\n\n# 返却データ形式（厳密に従う）：\n{{\n    \"data\": [\n        {data_format}\n    ],\n    \"status\": \"success または error\",\n    \"summary\": f\"検索完了、{{len(data)}}件の結果が見つかりました\",\n    \"metadata\": {{\n        \"timestamp\": time.time(),\n        \"task_type\": \"data_fetch\",\n        \"search_query\": \"{search_query}\",\n        \"execution_type\": \"template_guided_search\"\n    }}\n}}\n\n# 関数を即座に実行し、__result__に割り当てる\n __result__ = search_web(\"{search_query}\", {max_results})",
    "free_form_instruction_template": "最新の関連情報を取得するために、創造的に検索関数（コメントやログ出力は不要）を生成してください。\n\n# 選択可能な検索戦略：\n1. 異なる検索エンジン（Yahoo Japan、Google、Bing）を順に試行する\n2. ニュースアグリゲーションAPI（NewsAPI、RSSフィードなど）をAPIキーなしで利用可能な場合に使用する\n3. ソーシャルメディアプラットフォームの検索を試みる（Twitter、Reddit公開API）\n4. 学術検索エンジンを使用する（Google Scholar、arXiv）\n5. 適切なユーザーエージェントとレート制限でウェブスクレイピングを実装する\n\n# 主要な要件：\n- 関数名はsearch_web、パラメータはsearch_queryとmax_results\n- 複数のフォールトトレランスメカニズムを実装し、少なくとも2-3つの異なる方法を試行する\n- 各結果の元のページにアクセスして完全な情報を抽出する\n- 過去7日以内の新しいコンテンツを優先的に取得し、公開時間でソートする\n- 概要の長さは少なくとも{min_abstract_len}文字で、重要な情報を含む\n- APIキーを必要とする方法は使用できない\n- 検証ページ、Cookieお知らせ、無効なコンテンツをフィルタリングし、エンコーディングを正しく処理し、結果に文字化けを含めない\n- 適切なリクエストヘッダー、タイムアウト、リトライメカニズムを実装する\n\n# 日本語コンテンツの強化された時間抽出戦略：\n- 優先metaタグ: article:published_time, datePublished, pubdate, publishdate, og:article:published_time, twitter:data1, sailthru.date, parsely-pub-date\n- 構造化データ: JSON-LD with @type Article、microdata with itemprop datePublished\n- Timeタグ: <time datetime=\"...\">要素、data-time属性\n- CSSセレクタ: .date, .timestamp, .published, .post-date, .entry-date, .article-date\n- 包括的regexでのテキストパターンマッチング：\n  * ISO形式: r\"\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\"\n  * 日本語形式: r\"\\d{4}年\\d{1,2}月\\d{1,2}日\", r\"\\d{1,2}/\\d{1,2}/\\d{4}\"\n  * 日本語月: r\"(?:1月|2月|3月|4月|5月|6月|7月|8月|9月|10月|11月|12月)\\s*\\d{1,2}日\"\n  * 相対時間: r\"\\d+\\s*(?:分|時間|日|週|月|年)前\"\n  * 一般的なフレーズ: r\"(?:昨日|今日|たった今|少し前|先週|先月|昨年)\"\n- 日付が見つからない場合は現在のタイムスタンプにフォールバック\n\n# 返却データ形式（厳密に従う）：\n{{\n    \"data\": [\n        {data_format}\n    ],\n    \"status\": \"success\",\n    \"summary\": \"検索完了\",\n    \"metadata\": {{\n        \"timestamp\": time.time(),\n        \"task_type\": \"data_fetch\",\n        \"search_query\": \"{search_query}\",\n        \"execution_type\": \"free_form_search\"\n    }}\n}}\n\n# 関数を即座に実行し、__result__に割り当てる\n __result__ = search_web(\"{search_query}\", {max_results})"
  },
  "result_processor": {
    "suggestions": {
      "check_syntax_logic": "コードの構文と論理エラーを確認してください",
      "regenerate_code": "ユーザーの要求をよりよく満たすために、コードを再生成してください。データ取得ロジックを確認し、有効なタイトルとコンテンツフィールドが返されるようにしてください",
      "check_data_logic": "データ取得ロジックを確認し、正しい形式のデータが返されるようにしてください",
      "check_execution_structure": "コードの実行と基本的なデータ構造を確認してください",
      "check_business_logic": "ビジネスロジックと必須フィールドを確認してください",
      "check_code_format": "コードのロジックと出力形式を確認してください",
      "check_syntax_variables": "コードの構文、変数定義、論理エラーを確認してください"
    },
    "system_errors": {
      "execution_timeout": "コード実行タイムアウト"
    },
    "messages": {
      "execution_failed": "コード実行失敗: {error}"
    },
    "summaries": {
      "no_data": "実行は完了しましたが、データが取得されませんでした",
      "execution_complete": "実行完了",
      "operation_complete": "操作完了"
    }
  }
}