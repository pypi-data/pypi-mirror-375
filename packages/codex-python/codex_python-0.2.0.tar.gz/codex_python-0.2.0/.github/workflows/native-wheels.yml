name: Build Native Wheels (codex-native)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

jobs:
  build:
    continue-on-error: ${{ matrix.allow-failure == true }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]
        python-version: ['3.12', '3.13']
        include:
          - os: ubuntu-latest
            python-version: '3.14'
            allow-failure: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build wheels with maturin
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: '1'
        run: |
          maturin build -m crates/codex_native/Cargo.toml --release --interpreter python

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: crates/codex_native/target/wheels/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true
