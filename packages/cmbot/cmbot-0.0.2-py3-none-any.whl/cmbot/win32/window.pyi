# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from ctypes import byref, create_unicode_buffer
from typing import Any
from typing_extensions import Self
import ctypes
import psutil
import pyautogui
import random
import time
import win32con
import win32gui
import win32process

class Win32Window:
    def __init__(self: Self, handle: Any) -> None: ...
    def _get_window_info(self: Self) -> Any: ...
    def _get_window_text(self: Self) -> Any: ...
    def _get_process_name(self: Self) -> Any: ...
    def get_detail(self: Self, operation: Any) -> Any: ...
    def activate(self: Self) -> Any: ...
    def set_state(self: Self, flag: Any) -> Any: ...
    def move(self: Self, x: Any, y: Any) -> Any: ...
    def resize(self: Self, width: Any, height: Any) -> Any: ...
    def close(self: Self) -> Any: ...
    def is_active(self: Self) -> Any: ...
    def wait_active(self: Self, timeout: Any) -> Any: ...
    def wait_exists(self: Self, timeout: Any) -> Any: ...
    def wait_close(self: Self, timeout: Any) -> Any: ...
    def _wait_condition(self: Self, condition: Any, timeout: Any, err_msg: Any) -> Any: ...
    def find_all(self: Self, selector: Any, timeout: Any) -> Any: ...
    def find(self: Self, selector: Any, timeout: Any) -> Any: ...
    def wait_appear(self: Self, selector_or_element: Any, timeout: Any) -> Any: ...
    def wait_disappear(self: Self, selector_or_element: Any, timeout: Any) -> Any: ...
    def _check_element_exists(self: Self, selector: Any) -> Any: ...
    def contains_element(self: Self, selector: Any) -> Any: ...
    def wait_focus(self: Self, timeout: Any) -> Any: ...
    def wait_focusout(self: Self, timeout: Any) -> Any: ...
    def __repr__(self: Self) -> Any: ...

class Win32Operations:
    @staticmethod
    def get(title: Any, class_name: Any, use_wildcard: Any) -> Any: ...
    @staticmethod
    def get_by_handle(handle: Any) -> Any: ...
    @staticmethod
    def get_by_selector(selector: Any) -> Any: ...
    @staticmethod
    def get_desktop() -> Any: ...
    @staticmethod
    def minimize_all() -> Any: ...
    @staticmethod
    def mouse_move(point_x: Any, point_y: Any, relative_to: Any, move_speed: Any, delay_after: Any) -> Any: ...
    @staticmethod
    def send_keys(keys: Any, send_key_delay: Any, hardware_driver_input: Any, delay_after: Any) -> Any: ...
    @staticmethod
    def mouse_click(button: Any, click_type: Any, keys: Any, delay_after: Any) -> Any: ...
    @staticmethod
    def mouse_wheel(wheel_direction: Any, wheel_times: Any, keys: Any, delay_after: Any) -> Any: ...
    @staticmethod
    def get_mouse_position(relative_to: Any) -> Any: ...
    @staticmethod
    def exists(window: Any) -> Any: ...
    @staticmethod
    def manual_motion_on(motion_move: Any, motion_click: Any) -> Any: ...
    @staticmethod
    def manual_motion_off() -> Any: ...

class UIAError(Exception): ...

__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import ctypes
import pyautogui
import random
import time
import win32con
import win32gui
import win32process
import psutil