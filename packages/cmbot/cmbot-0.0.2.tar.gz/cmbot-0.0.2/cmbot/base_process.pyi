# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from abc import ABC, abstractmethod
from enum import Enum
from rpa_logging import logger
from typing import Any
from typing_extensions import Self
from dataclasses import dataclass
import configparser
import datetime
import os
import pathlib
import traceback
import uuid

class Config:
    def __init__(self: Self, process_name: Any) -> None: ...

class RunStatus(str, Enum):
class TriggerType(str, Enum):
@dataclass
class BaseProcess(ABC):
    def __init_subclass__(cls: cls) -> Any: ...
    def __init__(self: Self) -> None: ...
    @staticmethod
    def _format_time_difference(seconds: Any) -> Any: ...
    def front_hook(self: Self) -> Any: ...
    def finally_hook(self: Self) -> Any: ...
    def clear_folder(self: Self, folder_path: Any) -> Any: ...
    def main_process(self: Self) -> Any: ...
    def run(self: Self) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import configparser
import datetime
import os
import pathlib
import traceback
import uuid
import abc
import enum
import ntpath