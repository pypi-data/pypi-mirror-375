name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Exclude staging - it has its own workflow

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies for database features
      run: |
        sudo apt-get update
        sudo apt-get install -y libsqlite3-dev
        # Install DuckDB from release
        wget https://github.com/duckdb/duckdb/releases/download/v1.1.3/libduckdb-linux-amd64.zip
        unzip libduckdb-linux-amd64.zip
        sudo cp libduckdb.so /usr/local/lib/
        sudo cp duckdb.h /usr/local/include/
        sudo ldconfig
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

    - name: Run core tests
      run: cargo test --lib --verbose

    - name: Run PostgreSQL tests
      run: cargo test --features postgres --verbose

    - name: Run MySQL tests
      run: cargo test --features mysql --verbose

    - name: Run SQLite tests
      run: cargo test --features sqlite --verbose

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy (core features)
      run: cargo clippy --lib -- -D warnings

    - name: Run clippy (PostgreSQL features)
      run: cargo clippy --lib --features postgres -- -D warnings

    - name: Run clippy (MySQL features)
      run: cargo clippy --lib --features mysql -- -D warnings

    - name: Run clippy (SQLite features)
      run: cargo clippy --lib --features sqlite -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest
    # Only basic build check for master - comprehensive builds in staging-to-master.yml

    steps:
    - uses: actions/checkout@v5

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: master-ci-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release (core features)
      run: cargo build --release --verbose

    - name: Build release (PostgreSQL features)
      run: cargo build --release --features postgres --verbose

    - name: Build release (MySQL features)
      run: cargo build --release --features mysql --verbose

    - name: Build release (SQLite features)
      run: cargo build --release --features sqlite --verbose
