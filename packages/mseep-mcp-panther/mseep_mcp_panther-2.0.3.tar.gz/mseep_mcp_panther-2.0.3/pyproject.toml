[project]
name = "mseep-mcp-panther"
version = "2.0.3"
description = "Panther Labs MCP Server"
requires-python = ">=3.12"
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = [
    "security",
    "ai",
    "mcp",
    "mcp-server",
    "panther",
]
dependencies = [
    "aiohttp>=3.11.14,<4.0.0",
    "gql>=3.5.2,<4.0.0",
    "click>=8.1.0,<9.0.0",
    "fastmcp>=2.10.0,<3.0.0",
    "sqlparse>=0.4.4,<1.0.0",
]

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[project.license]
text = "Apache-2.0"

[project.urls]
Homepage = "https://github.com/panther-labs/mcp-panther"
Repository = "https://github.com/panther-labs/mcp-panther.git"

[project.scripts]
mcp-panther = "mcp_panther.server:main"

[dependency-groups]
dev = [
    "ruff>=0.11.2",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-env>=1.1.1",
]

[tool.ruff]
fix = true
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "N",
    "TCH",
]
ignore = [
    "E402",
    "E501",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
]

[tool.ruff.lint.isort]
known-first-party = [
    "mcp_panther",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
addopts = "-v --cov=src/mcp_panther --cov-report=term-missing"
pythonpath = [
    "src",
]
env = [
    "PANTHER_INSTANCE_URL=https://example.com",
    "PANTHER_API_TOKEN=test-token",
]

[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
]
build-backend = "setuptools.build_meta"
