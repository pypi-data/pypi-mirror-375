# coding: utf-8

"""
    Selling Partner API for Pricing

    The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).

    The version of the OpenAPI document: 2022-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class FeaturedOfferExpectedPriceRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'uri': 'str',
        'method': 'HttpMethod',
        'body': 'Dict[str, object]',
        'headers': 'Dict[str, str]',
        'marketplace_id': 'str',
        'sku': 'str',
        'segment': 'Segment',
    }

    attribute_map = {
        'uri': 'uri',
        'method': 'method',
        'body': 'body',
        'headers': 'headers',
        'marketplace_id': 'marketplaceId',
        'sku': 'sku',
        'segment': 'segment',
    }

    def __init__(self, uri=None, method=None, body=None, headers=None, marketplace_id=None, sku=None, segment=None, _configuration=None):  # noqa: E501
        """FeaturedOfferExpectedPriceRequest - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._uri = None
        self._method = None
        self._body = None
        self._headers = None
        self._marketplace_id = None
        self._sku = None
        self._segment = None
        self.discriminator = None

        self.uri = uri
        self.method = method
        if body is not None:
            self.body = body
        if headers is not None:
            self.headers = headers
        self.marketplace_id = marketplace_id
        self.sku = sku
        if segment is not None:
            self.segment = segment

    @property
    def uri(self):
        """Gets the uri of this FeaturedOfferExpectedPriceRequest.  # noqa: E501

        The URI associated with an individual request within a batch. For `FeaturedOfferExpectedPrice`, this is `/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice`.  # noqa: E501

        :return: The uri of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this FeaturedOfferExpectedPriceRequest.

        The URI associated with an individual request within a batch. For `FeaturedOfferExpectedPrice`, this is `/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice`.  # noqa: E501

        :param uri: The uri of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and uri is None:
            raise ValueError("Invalid value for `uri`, must not be `None`")  # noqa: E501

        self._uri = uri

    @property
    def method(self):
        """Gets the method of this FeaturedOfferExpectedPriceRequest.  # noqa: E501


        :return: The method of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :rtype: HttpMethod
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this FeaturedOfferExpectedPriceRequest.


        :param method: The method of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :type: HttpMethod
        """
        if self._configuration.client_side_validation and method is None:
            raise ValueError("Invalid value for `method`, must not be `None`")  # noqa: E501

        self._method = method

    @property
    def body(self):
        """Gets the body of this FeaturedOfferExpectedPriceRequest.  # noqa: E501

        Additional HTTP body information that is associated with an individual request within a batch.  # noqa: E501

        :return: The body of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :rtype: Dict[str, object]
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this FeaturedOfferExpectedPriceRequest.

        Additional HTTP body information that is associated with an individual request within a batch.  # noqa: E501

        :param body: The body of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :type: Dict[str, object]
        """

        self._body = body

    @property
    def headers(self):
        """Gets the headers of this FeaturedOfferExpectedPriceRequest.  # noqa: E501

        A mapping of additional HTTP headers to send or receive for an individual request within a batch.  # noqa: E501

        :return: The headers of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :rtype: Dict[str, str]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this FeaturedOfferExpectedPriceRequest.

        A mapping of additional HTTP headers to send or receive for an individual request within a batch.  # noqa: E501

        :param headers: The headers of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :type: Dict[str, str]
        """

        self._headers = headers

    @property
    def marketplace_id(self):
        """Gets the marketplace_id of this FeaturedOfferExpectedPriceRequest.  # noqa: E501

        The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).  # noqa: E501

        :return: The marketplace_id of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id):
        """Sets the marketplace_id of this FeaturedOfferExpectedPriceRequest.

        The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).  # noqa: E501

        :param marketplace_id: The marketplace_id of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and marketplace_id is None:
            raise ValueError("Invalid value for `marketplace_id`, must not be `None`")  # noqa: E501

        self._marketplace_id = marketplace_id

    @property
    def sku(self):
        """Gets the sku of this FeaturedOfferExpectedPriceRequest.  # noqa: E501

        The seller SKU of the item.  # noqa: E501

        :return: The sku of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this FeaturedOfferExpectedPriceRequest.

        The seller SKU of the item.  # noqa: E501

        :param sku: The sku of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and sku is None:
            raise ValueError("Invalid value for `sku`, must not be `None`")  # noqa: E501

        self._sku = sku

    @property
    def segment(self):
        """Gets the segment of this FeaturedOfferExpectedPriceRequest.  # noqa: E501


        :return: The segment of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :rtype: Segment
        """
        return self._segment

    @segment.setter
    def segment(self, segment):
        """Sets the segment of this FeaturedOfferExpectedPriceRequest.


        :param segment: The segment of this FeaturedOfferExpectedPriceRequest.  # noqa: E501
        :type: Segment
        """

        self._segment = segment

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FeaturedOfferExpectedPriceRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FeaturedOfferExpectedPriceRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FeaturedOfferExpectedPriceRequest):
            return True

        return self.to_dict() != other.to_dict()
