Metadata-Version: 2.4
Name: rpideck
Version: 0.3.0
Project-URL: Documentation, https://github.com/danielskowronski/RPiDeck
Project-URL: Issues, https://github.com/danielskowronski/RPiDeck/issues
Project-URL: Source, https://github.com/danielskowronski/RPiDeck
Author-email: Daniel Skowro≈Ñski <daniel@skowron.ski>
License-Expression: MIT
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.8
Requires-Dist: apscheduler~=3.11.0
Requires-Dist: click~=8.2.1
Requires-Dist: coloredlogs~=15.0.1
Requires-Dist: onkyo-eiscp~=1.2.7
Requires-Dist: pillow~=11.3.0
Requires-Dist: pyserial~=3.5
Requires-Dist: pyyaml~=6.0.2
Requires-Dist: schema~=0.7.7
Requires-Dist: streamdeck~=0.9.7
Description-Content-Type: text/markdown

# RPiDeck

***At this stage, this is a personal project, so many things may be hardcoded***

Python agent enabling Elgato StreamDeck Neo connected to Raspberry Pi 5 running headless (server) system to control various devices including:

- Dell monitor over spare HDMI using MCCS over DDC - inputs, KVM, PBP modes
- Pioneer (Onkyo) AVR - HDMI matrix, audio amplifier source
- TESmart KVM and any other RS232 devices

Future devices to be supported:

- anything from Home Assistant
- multimedia devices connected to AVR using HDMI-CEC
- remote HTTP API with multiple endpoints, aware of KVM connection, especially Kuando BusyLight connected via KVM

[ENV.md](./ENV.md) contains critical information about the environment where this project can be installed.

## Installation

[![PyPI: rpideck](https://img.shields.io/pypi/v/rpideck?style=flat-square&label=PyPI%3A%20rpideck)](https://pypi.org/project/rpideck/)

```bash
pipx install rpideck
```

## CLI usage

Config and assets must be placed under `~/.config/rpideck`. See examples in [example_config](./example_config/).

For now, just run `rpideck` and it'll start main loop. Buttons on last row (next to screen) act as page selectors.
