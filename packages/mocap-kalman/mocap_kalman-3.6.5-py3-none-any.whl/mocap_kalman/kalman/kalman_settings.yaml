inputs:
  fps: 60
  rig_name: MoveMo
  run_type: multicam
  camera_data_dir: /home/marco/data/EA/EA_vicon/perimiter_run/calib/
  poses2d_dir: /home/marco/data/EA/EA_vicon/perimiter_run/pose2d_track/
  poses3d_dir: /home/marco/data/EA/EA_vicon/perimiter_run/poses_3d_filtered

outputs:
  blender_export: True
  blender_export_debug: True
  output_dir: "/home/marco/data/EA/EA_vicon/perimiter_run/kalman_output"

kinematic_type: urdf
kinematic_name: moveai_direct
kinematic_symmetric_bone_lengths: True
kinematic_scale_to: live_actor # live_actor, rig
kinematic_base_class: kinematics.rbdl_base_kinematics.Kinematics_Rbdl
kinematic_offset_class: kinematics.rbdl_offset_kinematics.OffsetKinematics_Rbdl

poses2d_adapter: adapters.data_adapters.VitPoseAdapter
poses2d_offsets: kinematics.offset_structures.ViTOffsets
poses3d_adapter: adapters.data_adapters.VitPose3DAdapter
poses3d_offsets: kinematics.offset_structures.ViTOffsets
bonedir_adapter: adapters.data_adapters.MetrabsBoneDirAdapter
contact_offsets: kinematics.offset_structures.FootContactOffsets


state_modifiers:
  - modifiers.state_modifiers.JointLimitsModifier
  - modifiers.state_modifiers.QuaternionsModifier
measurement_modifiers:
  - modifiers.measurement_modifiers.JacobianDampingModifier

stages: # observations: [POSES_2D, POSES_3D, SPINE, TRAJECTORY_CONTACT, PLANAR_CONTACT]
- name: first stage
  transition: transition.transition.SimpleStationaryTransitionModel
  Q_matrix: parameters.Q_matrices.Q_Moveai_11
  Q_factor: 3.5
  observations:
  - POSES_2D
  - SPINE
  smooth_state: false

#- name: second stage
#  transition: transition.transition.SimpleTransitionModel
#  Q_matrix: parameters.Q_matrices.Q_Moveai_11
#  Q_factor: 1
#  observations:
#  - POSES_3D
#  - SPINE
#  - TRAJECTORY_CONTACT
#  smooth_state: True

contact_dynamics:
  use_plane_constraint: true
  adjust_heel: false
  stability_std_threshold: 0.02
  contact_factor_threshold: 35
  friction_coeff: 0.6
  alpha: 0.001
  lambda: 0
  tanh_param_k: 10
  tanh_param_n: 1.5

smoother_settings:
  state_smoother_type: polynomial #  ['polynomial', 'butterworth']
  polynomial_window: 0.4 # in seconds
  polynomial_order: 5
  state_frequency_cutoff: 5 # in Hz
  derivative_frequency_cutoff: 4 # in Hz
  filter_order: 4




