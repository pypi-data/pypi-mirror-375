name: CI
on:
  push:
    branches: ["main", "dev"]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: ["main", "dev"]
env:
  FORCE_COLOR: "1"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: write
jobs:

  lint:
    name: Lint code ðŸ§¹
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wntrblm/nox@main
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Blackfish
        run: |
          python -m pip install --disable-pip-version-check .
      - name: Lint
        run: nox --non-interactive --error-on-missing-interpreters --session "lint"

  tests:
    name: Run tests ðŸ§ª
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: wntrblm/nox@main
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Blackfish
        run: |
          python -m pip install --disable-pip-version-check .
      - name: Set up Blackfish
        run: blackfish init --auto --app-dir $HOME/.blackfish --schema local --home-dir $HOME/.blackfish --cache-dir $HOME/.blackfish
      - name: Start Blackfish
        run: blackfish start &
      - name: Run tests on ${{ matrix.os }}
        run: nox --non-interactive --error-on-missing-interpreters --session "tests-${{ matrix.python-version }}" -- --full-trace

  docs-preview:
    name: Preview documentation ðŸ“–
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Checkout PR branch
        run: |
          git fetch origin
          git checkout ${{ github.event.pull_request.head.ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: pip install mkdocs-material mkdocstrings 'mkdocstrings[python]' mkdocs-swagger-ui-tag mike
      - name: Build and deploy documentation
        run: mike deploy --push --allow-empty --deploy-prefix pr-preview pr-${{ github.event.number }} --message "Deploying docs preview for PR ${{ github.event.number }} ðŸ›«"

  docs:
    name: Deploy documentation ðŸ“š
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Checkout merge branch
        run: |
          git fetch origin
          git checkout ${{ github.ref_name }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: pip install mkdocs-material mkdocstrings 'mkdocstrings[python]' mkdocs-swagger-ui-tag mike
      - name: Build and deploy documentation
        run: mike deploy --push --update-aliases --allow-empty ${{ github.ref_name }} latest --message "Deploying docs version ${{ github.ref_name }} ðŸ›«"

  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install uv (latest)
        uses: astral-sh/setup-uv@v6
      - name: Build wheel
        run: uv build
      - name: Store distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish:
    name: Publish to PyPI ðŸŽ‰
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/p/blackfish-ai
    permissions:
      id-token: write

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
