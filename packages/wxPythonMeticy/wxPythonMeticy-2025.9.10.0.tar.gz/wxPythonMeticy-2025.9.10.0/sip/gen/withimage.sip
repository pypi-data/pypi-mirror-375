//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------
%ModuleCode
#define NO_IMAGE wxWithImages::NO_IMAGE
%End

//---------------------------------------------------------------------------

class wxWithImages
{
    %Docstring
        WithImages() -> None
        
        A mixin class to be used with other classes that use a wxImageList.
    %End
    %TypeHeaderCode
        #include <wx/withimages.h>
    %End

public:
    enum 
    {
        NO_IMAGE    
    };

    wxWithImages();

    virtual
    ~wxWithImages();

    int GetImageCount() const;
    %Docstring
        GetImageCount() -> int
        
        Return the number of images in this control.
    %End

    bool HasImages() const;
    %Docstring
        HasImages() -> bool
        
        Return true if the control has any images associated with it.
    %End

    void SetImages(
        const wxVector< wxBitmapBundle > & images
    );
    %Docstring
        SetImages(images) -> None
        
        Set the images to use for the items in the control.
    %End

    void AssignImageList(
        wxImageList * imageList   /Transfer/
    );
    %Docstring
        AssignImageList(imageList) -> None
        
        Sets the image list for the page control and takes ownership of the
        list.
    %End

    virtual
    void SetImageList(
        wxImageList * imageList
    );
    %Docstring
        SetImageList(imageList) -> None
        
        Sets the image list to use.
    %End

    wxImageList * GetImageList() const;
    %Docstring
        GetImageList() -> ImageList
        
        Returns the associated image list, may be NULL.
    %End

    wxImageList * GetUpdatedImageListFor(
        wxWindow * win
    );
    %Docstring
        GetUpdatedImageListFor(win) -> ImageList
        
        Returns the image list updated to reflect the DPI scaling used for the
        given window if possible.
    %End

    private:
        wxWithImages(const wxWithImages&);


    private:
        wxWithImages& operator=(const wxWithImages&);


    public:


    %Property(name=ImageCount, get=GetImageCount)
    %Property(name=ImageList, get=GetImageList, set=SetImageList)
};  // end of class wxWithImages


const int NO_IMAGE;

//---------------------------------------------------------------------------

