name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/* || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          # Install the built wheel or source distribution
          if ls dist/*.whl 1> /dev/null 2>&1; then
            pip install dist/*.whl
          else
            pip install dist/*.tar.gz
          fi

      - name: Run basic import test
        run: |
          python -c "import pymedsec; print('Package imported successfully')"

      - name: Run tests
        run: |
          pytest tests/ -v --tb=short || true
        env:
          IMGSEC_POLICY: mock
          IMGSEC_KMS_BACKEND: mock
          IMGSEC_KMS_KEY_REF: test-key

  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'release' || github.event.inputs.test_pypi == 'true'
    permissions:
      id-token: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to Test PyPI
        if: github.event.inputs.test_pypi == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

      - name: Publish to PyPI
        if: github.event.inputs.test_pypi != 'true' && github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@release/v1
