version: '3.9'

services:
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SQS_ENDPOINT_URL=http://aws-local:4566
      - SQS_QUEUE_NAME=worker-queue
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    ports:
      - "8000:8000"
    depends_on:
      - aws-local
  
  aws-local:
     image: localstack/localstack:latest
     ports:
       - "127.0.0.1:4566:4566"                  
       - "127.0.0.1:4510-4559:4510-4559"
     environment:
       - DEBUG=1
       - SERVICES=sqs
       - DATA_DIR=/tmp/localstack/data
       - DOCKER_HOST=unix:///var/run/docker.sock
     volumes:
       - "./init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh"
       - "/var/run/docker.sock:/var/run/docker.sock"
     stdin_open: true
     tty: true

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - worker

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

volumes:
  data-volume:
  grafana-storage:
