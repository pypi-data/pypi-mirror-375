[project]
name = "s1swotcolocs"
requires-python = ">= 3.9"
description = "Python lib to create co-locations between Sentinel-1 IW or EW images and SWOT KaRin swath."
readme.file = "README.md"
readme.content-type = "text/markdown"
license = { text = "MIT" }
keywords = ["SAR", "SWOT", "colocations", "sea-state"]
authors = [{ name = "Antoine Grouazel" }]
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
  "numpy",
  "scipy",
  "pandas",
  "xarray",
  "antimeridian",
  "shapely",
  "tqdm",
  "geopandas",
  "geodatasets",
  "cdsodatacli",
  "h5netcdf",
  "alphashape",
  "geoviews",
  "hvplot",
  #  "s1ifr @ git+https://gitlab.ifremer.fr/lops-wave/s1ifr@main",
]

dynamic = ["version"]

[project.urls]

bugs = "https://github.com/agrouaze/s1swotcolocs/issues"
changelog = "https://github.com/agrouaze/s1swotcolocs/blob/master/changelog.md"
homepage = "https://github.com/agrouaze/s1swotcolocs"

[project.optional-dependencies]


[build-system]
requires = ["setuptools>=64.0", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }
packages = ["s1swotcolocs"]
#[tool.setuptools.packages.find]
#where = ["src"]  # Tell setuptools to look for packages inside the 'src' directory

[tool.setuptools_scm]
fallback_version = "999"

[tool.isort]
profile = "black"
skip_gitignore = true
float_to_top = true
default_section = "THIRDPARTY"
known_first_party = "s1swotcolocs"

[project.scripts]
coloc_SWOT_L3_with_S1_CDSE_TOPS_sequential_wrapper = "s1swotcolocs.coloc_SWOT_L3_with_S1_CDSE_TOPS_sequential_wrapper:main"
coloc_SWOT_L3_with_S1_CDSE_TOPS_sequentiel = "s1swotcolocs.coloc_SWOT_L3_with_S1_CDSE_TOPS_sequentiel:main"
coloc_seastate_SWOT_S1 = "s1swotcolocs.seastate_colocs_s1_swot:main"
coloc_seastate_SWOT_S1_sequential = "s1swotcolocs.seastate_colocs_s1_swot_sequential:main"

[tool.ruff.lint]
ignore = [
  "E402",  # module level import not at top of file
  "E501",  # line too long - let black worry about that
  "E731",  # do not assign a lambda expression, use a def
  "UP038", # type union instead of tuple for isinstance etc
]
select = [
  "F",   # Pyflakes
  "E",   # Pycodestyle
  "I",   # isort
  "UP",  # Pyupgrade
  "TID", # flake8-tidy-imports
  "W",
]
extend-safe-fixes = [
  "TID252", # absolute imports
  "UP031",  # percent string interpolation
]
fixable = ["I", "TID252", "UP"]

[tool.ruff.lint.isort]
known-first-party = ["s1swotcolocs"]
known-third-party = ["xarray", "toolz", "construct"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
