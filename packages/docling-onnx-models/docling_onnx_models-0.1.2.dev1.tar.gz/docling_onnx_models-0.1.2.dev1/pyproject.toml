[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "docling-onnx-models"
description = "ONNX Runtime implementations for Docling AI models"
authors = [
    {name = "IBM Research", email = "docling@zurich.ibm.com"},
]
maintainers = [
    {name = "IBM Research", email = "docling@zurich.ibm.com"},
]
license = {text = "MIT"}
readme = "README.md"
keywords = [
    "docling", 
    "onnx", 
    "document", 
    "ai", 
    "layout", 
    "table", 
    "classification",
    "ocr",
    "document-processing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "onnxruntime>=1.15.0",
    "numpy>=1.21.0",
    "pillow>=8.3.0", 
    "opencv-python>=4.5.0",
    "pydantic>=2.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
# GPU support with ONNX Runtime GPU
gpu = [
    "onnxruntime-gpu>=1.15.0",
]

# CoreML support (additional dependencies for macOS optimization)
coreml = [
    "coremltools>=7.0.0; sys_platform == 'darwin'",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
]

# Documentation dependencies
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.23.0",
]

# All optional dependencies
all = [
    "docling-onnx-models[gpu,coreml,dev,test,docs]",
]

[project.urls]
Homepage = "https://github.com/asmud/docling-onnx-models"
Repository = "https://github.com/asmud/docling-onnx-models.git"
Documentation = "https://asmud.github.io/docling-onnx-models/"
Changelog = "https://github.com/asmud/docling-onnx-models/blob/main/CHANGELOG.md"
"Bug Reports" = "https://github.com/asmud/docling-onnx-models/issues"
"Source Code" = "https://github.com/asmud/docling-onnx-models"
"PyPI" = "https://pypi.org/project/docling-onnx-models/"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["docling_onnx_models"]

[tool.setuptools_scm]
write_to = "src/docling_onnx_models/_version.py"
local_scheme = "no-local-version"

[tool.setuptools.package-data]
docling_onnx_models = ["py.typed"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy type checking
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "onnxruntime.*",
    "PIL.*",
    "numpy.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=docling_onnx_models",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=35",
    "-v",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/docling_onnx_models"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]