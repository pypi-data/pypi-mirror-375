# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.generate_rules_response import GenerateRulesResponse

class TestGenerateRulesResponse(unittest.TestCase):
    """GenerateRulesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenerateRulesResponse:
        """Test GenerateRulesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenerateRulesResponse`
        """
        model = GenerateRulesResponse()
        if include_optional:
            return GenerateRulesResponse(
                error = True,
                message = '',
                data = [
                    openapi_client.models.rule.Rule(
                        id = 'abc123', 
                        name = 'Email Validation Rule', 
                        description = '', 
                        rule_type = 'custom_sql', 
                        workflow_id = '', 
                        group_id = '', 
                        user_id = '', 
                        team_id = '', 
                        target_columns = [
                            ''
                            ], 
                        parameters = openapi_client.models.rule_parameters.Rule_parameters(
                            sql = '', 
                            params = [
                                null
                                ], 
                            prompt = '', ), 
                        is_enabled = True, 
                        disabled_reason = '', 
                        metadata = {
                            'key' : null
                            }, 
                        created_at = '2024-01-15T10:30:00.000Z', 
                        updated_at = '2024-01-15T10:30:00.000Z', 
                        deleted_at = '2024-01-15T10:30:00.000Z', 
                        deleted_reason = '', )
                    ],
                metadata = openapi_client.models.generate_rule_response_metadata.GenerateRuleResponse_metadata(
                    sample_data_count = 1.337, 
                    schema_fields_count = 1.337, 
                    total_cost = 1.337, )
            )
        else:
            return GenerateRulesResponse(
                error = True,
                message = '',
                data = [
                    openapi_client.models.rule.Rule(
                        id = 'abc123', 
                        name = 'Email Validation Rule', 
                        description = '', 
                        rule_type = 'custom_sql', 
                        workflow_id = '', 
                        group_id = '', 
                        user_id = '', 
                        team_id = '', 
                        target_columns = [
                            ''
                            ], 
                        parameters = openapi_client.models.rule_parameters.Rule_parameters(
                            sql = '', 
                            params = [
                                null
                                ], 
                            prompt = '', ), 
                        is_enabled = True, 
                        disabled_reason = '', 
                        metadata = {
                            'key' : null
                            }, 
                        created_at = '2024-01-15T10:30:00.000Z', 
                        updated_at = '2024-01-15T10:30:00.000Z', 
                        deleted_at = '2024-01-15T10:30:00.000Z', 
                        deleted_reason = '', )
                    ],
        )
        """

    def testGenerateRulesResponse(self):
        """Test GenerateRulesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
