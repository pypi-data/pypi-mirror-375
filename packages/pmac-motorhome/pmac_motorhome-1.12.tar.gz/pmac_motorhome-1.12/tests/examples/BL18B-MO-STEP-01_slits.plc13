CLOSE

;####################################################
; Autogenerated Homing PLC for GeoBrick, DO NOT MODIFY
; Group 2:
;  Axis 1: htype = HSW, jdist = -400, post = i
;  Axis 2: htype = HSW, jdist = -400, post = i
;  Axis 3: htype = HSW, jdist = -400, post = i
;  Axis 4: htype = HSW, jdist = -400, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(13&30)*50+13%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1300
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1301
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1302
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1303
HomingBackupGroup = 0

OPEN PLC13 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
    HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1304=i113 P1305=i213 P1306=i313 P1307=i413
;Save the low soft limits to P variables px20..x35
P1320=i114 P1321=i214 P1322=i314 P1323=i414
;Save the home capture flags to P variables px36..x51
P1336=i7012 P1337=i7022 P1338=i7032 P1339=i7042
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1352=P1336^$C P1353=P1337^$C P1354=P1338^$C P1355=P1339^$C
;Save the limit flags to P variables px68..x83
P1368=i124 P1369=i224 P1370=i324 P1371=i424
;Save the current position to P variables px84..x99
P1384=M162 P1385=M262 P1386=M362 P1387=M462
;Clear the soft limits
i113=0 i213=0 i313=0 i413=0
i114=0 i214=0 i314=0 i414=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    HomingGroup=2

    ;Clear home flags
    m145=0 m245=0 m345=0 m445=0
    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PreHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePreHomeMove
        ; Execute the move commands
        m172=100000000*(-i123/ABS(i123)) m272=100000000*(-i223/ABS(i223)) m372=100000000*(-i323/ABS(i323)) m472=100000000*(-i423/ABS(i423))
        cmd "#1J^* #2J^* #3J^* #4J^*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m240&m340&m440=0) ; At least one motor should not be In Position
        and (m142|m242|m342|m442 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m242|m342|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PreHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePreHomeMove
        ; Execute the move commands
        
        m172=100000000*(-i123/ABS(i123)) m372=100000000*(-i323/ABS(i323))
        cmd "#1J^*^-400 #3J^*^-400"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m340=0) ; At least one motor should not be In Position
        and (m142|m342 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m342 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastSearch State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastSearch
        ; Execute the move commands
        
        m172=100000000*(i123/ABS(i123)) m372=100000000*(i323/ABS(i323))
        cmd "#1J^*^-400 #3J^*^-400"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m340=0) ; At least one motor should not be In Position
        and (m142|m342 = 0) ; Following error check
        and (m130|m330 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m342 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m130|m330 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Store the difference between current pos and start pos ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        P1384=(P1384-M162)/(I108*32)+-400-(i126/16)
        P1386=(P1386-M362)/(I308*32)+-400-(i326/16)
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastRetrace State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastRetrace
        ; Execute the move commands
        i7012=P1352 i7032=P1354 m172=100000000*(-i123/ABS(i123)) m372=100000000*(-i323/ABS(i323))
        cmd "#1J^*^-400 #3J^*^-400"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m340=0) ; At least one motor should not be In Position
        and (m142|m342 = 0) ; Following error check
        and (m130|m330 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m342 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m130|m330 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- Homing State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; Execute the move commands
        i7012=P1336 i7032=P1338
        cmd "#1hm #3hm"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m340=0) ; At least one motor should not be In Position
        and (m142|m342 = 0) ; Following error check
        and (m130|m330 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m342 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m130|m330 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Check if all motors have homed ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    and (m145&m345=0)
        HomingStatus=StatusIncomplete
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PostHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePostHomeMove
        ; Execute the move commands
        m172=P1384 m372=P1386
        cmd "#1J=* #3J=*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m340=0) ; At least one motor should not be In Position
        and (m142|m342 = 0) ; Following error check
        and (m130|m330 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m342 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m130|m330 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PreHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePreHomeMove
        ; Execute the move commands
        m172=100000000*(-i123/ABS(i123)) m372=100000000*(-i323/ABS(i323))
        cmd "#1J^* #3J^*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m340=0) ; At least one motor should not be In Position
        and (m142|m342 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m342 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PreHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePreHomeMove
        ; Execute the move commands
        
        m272=100000000*(-i223/ABS(i223)) m472=100000000*(-i423/ABS(i423))
        cmd "#2J^*^-400 #4J^*^-400"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m240&m440=0) ; At least one motor should not be In Position
        and (m242|m442 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m242|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastSearch State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastSearch
        ; Execute the move commands
        
        m272=100000000*(i223/ABS(i223)) m472=100000000*(i423/ABS(i423))
        cmd "#2J^*^-400 #4J^*^-400"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m240&m440=0) ; At least one motor should not be In Position
        and (m242|m442 = 0) ; Following error check
        and (m230|m430 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m242|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m230|m430 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Store the difference between current pos and start pos ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        P1385=(P1385-M262)/(I208*32)+-400-(i226/16)
        P1387=(P1387-M462)/(I408*32)+-400-(i426/16)
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastRetrace State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastRetrace
        ; Execute the move commands
        i7022=P1353 i7042=P1355 m272=100000000*(-i223/ABS(i223)) m472=100000000*(-i423/ABS(i423))
        cmd "#2J^*^-400 #4J^*^-400"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m240&m440=0) ; At least one motor should not be In Position
        and (m242|m442 = 0) ; Following error check
        and (m230|m430 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m242|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m230|m430 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- Homing State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; Execute the move commands
        i7022=P1337 i7042=P1339
        cmd "#2hm #4hm"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m240&m440=0) ; At least one motor should not be In Position
        and (m242|m442 = 0) ; Following error check
        and (m230|m430 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m242|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m230|m430 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Check if all motors have homed ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    and (m245&m445=0)
        HomingStatus=StatusIncomplete
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PostHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePostHomeMove
        ; Execute the move commands
        m272=P1385 m472=P1387
        cmd "#2J=* #4J=*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m240&m440=0) ; At least one motor should not be In Position
        and (m242|m442 = 0) ; Following error check
        and (m230|m430 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m242|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m230|m430 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PreHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePreHomeMove
        ; Execute the move commands
        m272=100000000*(-i223/ABS(i223)) m472=100000000*(-i423/ABS(i423))
        cmd "#2J^* #4J^*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m240&m440=0) ; At least one motor should not be In Position
        and (m242|m442 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m242|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    ;If we've got this far without failing, set status and state done
    HomingStatus=StatusDone
    HomingState=StateDone
    ;Restore the homing group from px03
    HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m142=0)
    cmd "#1J/"
endif
if (m242=0)
    cmd "#2J/"
endif
if (m342=0)
    cmd "#3J/"
endif
if (m442=0)
    cmd "#4J/"
endif
;Restore the high soft limits from P variables px04..x19
i113=P1304 i213=P1305 i313=P1306 i413=P1307
;Restore the low soft limits from P variables px20..x35
i114=P1320 i214=P1321 i314=P1322 i414=P1323
;Restore the home capture flags from P variables px36..x51
i7012=P1336 i7022=P1337 i7032=P1338 i7042=P1339
;Restore the limit flags to P variables px68..x83
i124=P1368 i224=P1369 i324=P1370 i424=P1371

DISABLE PLC13
CLOSE
