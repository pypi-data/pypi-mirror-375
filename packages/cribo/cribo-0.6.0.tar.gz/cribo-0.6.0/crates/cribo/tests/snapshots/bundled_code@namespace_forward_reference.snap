---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/namespace_forward_reference/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
mypkg_compat = _cribo.types.SimpleNamespace(__name__='mypkg.compat')
mypkg = _cribo.types.SimpleNamespace(__name__='mypkg', __initializing__=False, __initialized__=False)
mypkg.compat = mypkg_compat
JSONDecodeError = _cribo.json.JSONDecodeError
mypkg_compat.JSONDecodeError = JSONDecodeError
mypkg_exceptions = _cribo.types.SimpleNamespace(__name__='mypkg.exceptions')
mypkg.exceptions = mypkg_exceptions
class MyJSONError(JSONDecodeError, Exception):
    """Error class that inherits from JSONDecodeError"""

    def __init__(self, *args):
        JSONDecodeError.__init__(self, *args)
        Exception.__init__(self, str(args[0]) if args else "")
MyJSONError.__module__ = 'mypkg.exceptions'
mypkg_exceptions.MyJSONError = MyJSONError
try:
    raise MyJSONError("Test error", "doc", 42)
except MyJSONError as e:
    print(f"Caught error: {e}")
    print("SUCCESS")
exceptions = mypkg.exceptions
compat = mypkg.compat
