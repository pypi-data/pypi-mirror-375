# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import pydantic
from .cloud_front_origin_type import CloudFrontOriginType
import typing
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class CloudFrontDistributionOrigin(UniversalBaseModel):
    domain_name: str = pydantic.Field(alias="DomainName")
    id: str = pydantic.Field(alias="Id")
    origin_type: CloudFrontOriginType = pydantic.Field(alias="OriginType")
    origin_arn: typing.Optional[str] = pydantic.Field(alias="OriginArn", default=None)
    path: typing.Optional[str] = pydantic.Field(alias="Path", default=None)
    custom_headers: typing.Optional[typing.List[str]] = pydantic.Field(alias="CustomHeaders", default=None)
    connection_attempts: typing.Optional[int] = pydantic.Field(alias="ConnectionAttempts", default=None)
    connection_timeout: typing.Optional[int] = pydantic.Field(alias="ConnectionTimeout", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
