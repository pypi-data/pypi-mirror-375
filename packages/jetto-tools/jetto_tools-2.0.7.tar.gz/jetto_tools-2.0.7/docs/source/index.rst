.. _main-label:

===============================
Overview: JETTO Pythontools API
===============================

Welcome to the JETTO Python tools documentation!

The JETTO Python tools is a collection of modules used to facilitate interoperability between client
Python applications and the JETTO plasma modelling code within the JINTRAC framework. All of the modules are
contained in the ``jetto-tools`` package.

.. toctree::
   :hidden:
   :caption: Getting Started
   :maxdepth: 2

   self

Installation
============

See the project README for installation instructions.

Quickstart
==========

See the :ref:`Quickstart Guide <quickstart-label>` for a brief and user-friendly introduction to using the API.

Detailed Usage
==============

The ``jetto-tools`` package allows the user to create JETTO configurations from existing templates,
modify those configurations, and submit JETTO jobs based on the configuration.

The first step in working with JETTO from a Python application is to create a *template*. Templates are
based on a set of files from a previous JETTO run, typically generated by the JAMS application. Information
on creating templates from files or from catalogued JETTO runs can be found in the :ref:`template <template-label>`
module.

Once the user can created a template, the next step is to create a JETTO *configuration* based on the template.
The configuration can be modified, changing parameter values, performing scans, changing the JETTO version in use,
and more besides. More information about working with configurations can be found in the :ref:`config <config-label>`
module.

Having a configuration, the user can submit a JETTO job for execution based on that configuration. Submission can be
done to local batch processing on the JET analysis cluster, or to cloud HPC resources. Examples of how to do this can be
found in the :ref:`job <job-label>` module documentation.

Having performed a JETTO scan, the user can aggregate and analyse the results of the scan. Examples of how to do this
can be found in the :ref:`results <results-label>` module documentation.


.. toctree::
   :maxdepth: 2
   :caption: Modules

   Template module <template>
   Configuration <config>
   Job management <job>
   Results module <results>
   JSET module <jset>
   Namelist module <namelist>
   Lookup module <lookup>

For developers
==============

* :doc:`api`
* :doc:`api-hidden`

.. toctree::
   :hidden:
   :caption: API docs

   api
   api-hidden

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
