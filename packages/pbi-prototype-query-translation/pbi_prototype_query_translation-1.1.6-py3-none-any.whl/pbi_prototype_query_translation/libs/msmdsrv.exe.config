<configuration>
  <startup useLegacyV2RuntimeActivationPolicy="true">
    <requiredRuntime version="v4.0.30319" safemode="true" />
  </startup>
  <runtime>
    <NetFx40_LegacySecurityPolicy enabled="true"/>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="microsoft.analysisservices.timedimgenerator.dll" publicKeyToken="97189f74fdbb8935" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-65535.65535.65535.65535" newVersion="9.00.242.00" />
        <publisherPolicy apply="no" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Collections.Immutable" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-13.0.0.0" newVersion="13.0.0.0"/>
        <!-- Dataflows provider uses a different version than desktop, so needs its own redirection (AS binary load does not try both locations, just first and fails). -->
        <codeBase version="11.0.0.0" href="Newtonsoft.Json.dll" />
        <codeBase version="12.0.0.0" href="ADO.NET Providers\cdsa\Newtonsoft.Json.dll" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.ValueTuple" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="6d32ff45e0ccc69f" culture="neutral" />
        <!-- Dataflows provider uses a different version than desktop, so needs its own redirection (AS binary load does not try both locations, just first and fails). -->
        <codeBase version="2.0.0.0" href="Microsoft.Practices.Unity.dll" />
        <codeBase version="4.0.0.0" href="ADO.NET Providers\cdsa\Microsoft.Practices.Unity.dll" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.2" newVersion="4.0.1.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Identity.Client" publicKeyToken="0a613f4dd989e8ae" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="4.66.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Identity.Client.Broker" publicKeyToken="0a613f4dd989e8ae" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-100.0.0.0" newVersion="4.66.2.0" />
      </dependentAssembly>
      <!-- Start of Temp Workaround for AI Ext -->
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.AnalysisServices.Dax.ExtensionInterfaces" publicKeyToken="89845dcd8080cc91" />
        <bindingRedirect oldVersion="0.0.0.0-17.0.0.0" newVersion="17.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.AnalysisServices.Dax.Extensions" publicKeyToken="89845dcd8080cc91" />
        <bindingRedirect oldVersion="0.0.0.0-17.0.0.0" newVersion="17.0.0.0" />
      </dependentAssembly>
      <!-- End of Temp Workaround for AI Ext -->
      <!-- If any DLLs are not found in base directory, it will search this subdirectory for assemblies.
           If any assemblies of the same name exist in both however, it will load from base (and potentially fail as a result) -->
      <probing privatePath="ADO.NET Providers\cdsa;ADO.NET Providers\MashupSql" />
    </assemblyBinding>
  </runtime>
  <system.data>
    <DbProviderFactories>
      <add name="PowerBI Dataflows Provider"
        invariant="Microsoft.PowerBI.Dataflows"
        description=".Net Framework Data Provider for Microsoft PowerBI Dataflows"
        type="Microsoft.PowerBI.Dataflows.ADO.Provider.DataFlowsProviderFactory, Microsoft.PowerBI.Dataflows.ADO.Provider"/>
      <add name="Microsoft SqlClient Data Provider"
        invariant="Microsoft.Data.SqlClient"
        description="Microsoft SqlClient Data Provider for SQL Server"
        type="Microsoft.Data.SqlClient.SqlClientFactory, Microsoft.Data.SqlClient"/>
    </DbProviderFactories>
  </system.data>
</configuration>
