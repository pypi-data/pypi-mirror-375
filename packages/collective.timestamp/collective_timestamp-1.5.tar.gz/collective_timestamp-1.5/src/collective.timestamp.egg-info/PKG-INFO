Metadata-Version: 2.4
Name: collective.timestamp
Version: 1.5
Summary: Timestamp files published in Plone
Home-page: https://github.com/collective/collective.timestamp
Author: Affinitic
Author-email: support@affinitic.be
License: GPL version 2
Project-URL: PyPI, https://pypi.org/project/collective.timestamp/
Project-URL: Source, https://github.com/collective/collective.timestamp
Project-URL: Tracker, https://github.com/collective/collective.timestamp/issues
Keywords: Python Plone CMS
Classifier: Environment :: Web Environment
Classifier: Framework :: Plone
Classifier: Framework :: Plone :: Addon
Classifier: Framework :: Plone :: 6.0
Classifier: Framework :: Plone :: 6.1
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Requires-Python: >=3.8
License-File: LICENSE.GPL
License-File: LICENSE.rst
Requires-Dist: setuptools
Requires-Dist: z3c.jbot
Requires-Dist: plone.api>=1.8.4
Requires-Dist: plone.app.dexterity
Requires-Dist: rfc3161ng
Requires-Dist: asn1crypto
Provides-Extra: test
Requires-Dist: plone.app.testing; extra == "test"
Requires-Dist: plone.testing>=5.0.0; extra == "test"
Requires-Dist: plone.app.contenttypes; extra == "test"
Requires-Dist: plone.app.robotframework[debug]; extra == "test"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

.. This README is meant for consumption by humans and PyPI. PyPI can render rst files so please do not use Sphinx features.
   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide.html
   This text does not appear on PyPI or github. It is a comment.

.. image:: https://github.com/collective/collective.timestamp/actions/workflows/plone-package.yml/badge.svg
    :target: https://github.com/collective/collective.timestamp/actions/workflows/plone-package.yml

.. image:: https://coveralls.io/repos/github/collective/collective.timestamp/badge.svg?branch=main
    :target: https://coveralls.io/github/collective/collective.timestamp?branch=main
    :alt: Coveralls

.. image:: https://img.shields.io/pypi/v/collective.timestamp.svg
    :target: https://pypi.python.org/pypi/collective.timestamp/
    :alt: Latest Version

.. image:: https://img.shields.io/pypi/status/collective.timestamp.svg
    :target: https://pypi.python.org/pypi/collective.timestamp
    :alt: Egg Status

.. image:: https://img.shields.io/pypi/pyversions/collective.timestamp.svg?style=plastic   :alt: Supported - Python Versions

.. image:: https://img.shields.io/pypi/l/collective.timestamp.svg
    :target: https://pypi.python.org/pypi/collective.timestamp/
    :alt: License


====================
collective.timestamp
====================

Timestamp Files (or any other content types with a file primary field) in Plone.
The `collective.timestamp` behavior must be activated on content types you want to timestamp.


Features
--------

- Allows you to timestamp a file via a toolbar action.
- Provides a way to timestamp files through a content rule action executor.
- Displays a timestamped viewlet on timestamped content.
- The viewlet provides access to a verification view (with files and instructions).
- Timestamping service and verification instructions are configurable via a configlet.


Translations
------------

This product has been translated into

- French


Installation
------------

Install collective.timestamp by adding it to your buildout::

    [buildout]

    ...

    eggs =
        collective.timestamp


and then running ``bin/buildout``


Contribute
----------

- Issue Tracker: https://github.com/collective/collective.timestamp/issues
- Source Code: https://github.com/collective/collective.timestamp


Support
-------

If you are having issues, please let us know.


License
-------

The project is licensed under the GPLv2.


Contributors
============

- Affinitic, support@affinitic.be


Changelog
=========


1.5 (2025-09-10)
----------------

- Properly translate labels in `TimestampInfo`.
  [aduchene]


1.4 (2025-08-26)
----------------

- Add a new view `TimestampInfo` to have more info about the timestamp that can also be used as an util view.
  [aduchene]


1.3 (2025-06-23)
----------------

- Avoid modifying list passed as argument in `utils.timestamp`.
  [aduchene]


1.2 (2025-06-19)
----------------

- Fixed a bug with `utils.timestamp` stuck in an infinite loop when use_failover was False.
  [aduchene]
- Changed default values of `ITimestampingSettings` and set required fields.
  [aduchene]


1.1 (2025-06-19)
----------------

- Fix a bug with TimeStamper.timestamp not returning the correct value.
  [aduchene]


1.0 (2025-06-19)
----------------

- Refactor the `timestamp` utils function to be able to use failover urls and exp. backoff retries.
  [aduchene]
- Add settings to manage failover urls and exp. backoff retries.
  [aduchene]


1.0a2 (2024-10-11)
------------------

- Added `TimeStamper._effective_related_indexes` to factorize the list of
  catalog indexes related to the `effective` functionality.
  Make `TimeStamper.timestamp` return data and timestamp in case it is overrided
  or called from external code.
  [gbastien]


1.0a1 (2024-09-17)
------------------

- Initial release.
  [laulaz]
