# coding: utf-8

"""
    Selling Partner API for Finances

    The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.

    The version of the OpenAPI document: v0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class FinancialEvents(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'shipment_event_list': 'List[ShipmentEvent]',
        'shipment_settle_event_list': 'List[ShipmentEvent]',
        'refund_event_list': 'List[ShipmentEvent]',
        'guarantee_claim_event_list': 'List[ShipmentEvent]',
        'chargeback_event_list': 'List[ShipmentEvent]',
        'pay_with_amazon_event_list': 'List[PayWithAmazonEvent]',
        'service_provider_credit_event_list': 'List[SolutionProviderCreditEvent]',
        'retrocharge_event_list': 'List[RetrochargeEvent]',
        'rental_transaction_event_list': 'List[RentalTransactionEvent]',
        'product_ads_payment_event_list': 'List[ProductAdsPaymentEvent]',
        'service_fee_event_list': 'List[ServiceFeeEvent]',
        'seller_deal_payment_event_list': 'List[SellerDealPaymentEvent]',
        'debt_recovery_event_list': 'List[DebtRecoveryEvent]',
        'loan_servicing_event_list': 'List[LoanServicingEvent]',
        'adjustment_event_list': 'List[AdjustmentEvent]',
        'safet_reimbursement_event_list': 'List[SAFETReimbursementEvent]',
        'seller_review_enrollment_payment_event_list': 'List[SellerReviewEnrollmentPaymentEvent]',
        'fba_liquidation_event_list': 'List[FBALiquidationEvent]',
        'coupon_payment_event_list': 'List[CouponPaymentEvent]',
        'imaging_services_fee_event_list': 'List[ImagingServicesFeeEvent]',
        'network_commingling_transaction_event_list': 'List[NetworkComminglingTransactionEvent]',
        'affordability_expense_event_list': 'List[AffordabilityExpenseEvent]',
        'affordability_expense_reversal_event_list': 'List[AffordabilityExpenseEvent]',
        'removal_shipment_event_list': 'List[RemovalShipmentEvent]',
        'removal_shipment_adjustment_event_list': 'List[RemovalShipmentAdjustmentEvent]',
        'trial_shipment_event_list': 'List[TrialShipmentEvent]',
        'tds_reimbursement_event_list': 'List[TDSReimbursementEvent]',
        'adhoc_disbursement_event_list': 'List[AdhocDisbursementEvent]',
        'tax_withholding_event_list': 'List[TaxWithholdingEvent]',
        'charge_refund_event_list': 'List[ChargeRefundEvent]',
        'failed_adhoc_disbursement_event_list': 'List[FailedAdhocDisbursementEvent]',
        'value_added_service_charge_event_list': 'List[ValueAddedServiceChargeEvent]',
        'capacity_reservation_billing_event_list': 'List[CapacityReservationBillingEvent]',
    }

    attribute_map = {
        'shipment_event_list': 'ShipmentEventList',
        'shipment_settle_event_list': 'ShipmentSettleEventList',
        'refund_event_list': 'RefundEventList',
        'guarantee_claim_event_list': 'GuaranteeClaimEventList',
        'chargeback_event_list': 'ChargebackEventList',
        'pay_with_amazon_event_list': 'PayWithAmazonEventList',
        'service_provider_credit_event_list': 'ServiceProviderCreditEventList',
        'retrocharge_event_list': 'RetrochargeEventList',
        'rental_transaction_event_list': 'RentalTransactionEventList',
        'product_ads_payment_event_list': 'ProductAdsPaymentEventList',
        'service_fee_event_list': 'ServiceFeeEventList',
        'seller_deal_payment_event_list': 'SellerDealPaymentEventList',
        'debt_recovery_event_list': 'DebtRecoveryEventList',
        'loan_servicing_event_list': 'LoanServicingEventList',
        'adjustment_event_list': 'AdjustmentEventList',
        'safet_reimbursement_event_list': 'SAFETReimbursementEventList',
        'seller_review_enrollment_payment_event_list': 'SellerReviewEnrollmentPaymentEventList',
        'fba_liquidation_event_list': 'FBALiquidationEventList',
        'coupon_payment_event_list': 'CouponPaymentEventList',
        'imaging_services_fee_event_list': 'ImagingServicesFeeEventList',
        'network_commingling_transaction_event_list': 'NetworkComminglingTransactionEventList',
        'affordability_expense_event_list': 'AffordabilityExpenseEventList',
        'affordability_expense_reversal_event_list': 'AffordabilityExpenseReversalEventList',
        'removal_shipment_event_list': 'RemovalShipmentEventList',
        'removal_shipment_adjustment_event_list': 'RemovalShipmentAdjustmentEventList',
        'trial_shipment_event_list': 'TrialShipmentEventList',
        'tds_reimbursement_event_list': 'TDSReimbursementEventList',
        'adhoc_disbursement_event_list': 'AdhocDisbursementEventList',
        'tax_withholding_event_list': 'TaxWithholdingEventList',
        'charge_refund_event_list': 'ChargeRefundEventList',
        'failed_adhoc_disbursement_event_list': 'FailedAdhocDisbursementEventList',
        'value_added_service_charge_event_list': 'ValueAddedServiceChargeEventList',
        'capacity_reservation_billing_event_list': 'CapacityReservationBillingEventList',
    }

    def __init__(self, shipment_event_list=None, shipment_settle_event_list=None, refund_event_list=None, guarantee_claim_event_list=None, chargeback_event_list=None, pay_with_amazon_event_list=None, service_provider_credit_event_list=None, retrocharge_event_list=None, rental_transaction_event_list=None, product_ads_payment_event_list=None, service_fee_event_list=None, seller_deal_payment_event_list=None, debt_recovery_event_list=None, loan_servicing_event_list=None, adjustment_event_list=None, safet_reimbursement_event_list=None, seller_review_enrollment_payment_event_list=None, fba_liquidation_event_list=None, coupon_payment_event_list=None, imaging_services_fee_event_list=None, network_commingling_transaction_event_list=None, affordability_expense_event_list=None, affordability_expense_reversal_event_list=None, removal_shipment_event_list=None, removal_shipment_adjustment_event_list=None, trial_shipment_event_list=None, tds_reimbursement_event_list=None, adhoc_disbursement_event_list=None, tax_withholding_event_list=None, charge_refund_event_list=None, failed_adhoc_disbursement_event_list=None, value_added_service_charge_event_list=None, capacity_reservation_billing_event_list=None, _configuration=None):  # noqa: E501
        """FinancialEvents - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._shipment_event_list = None
        self._shipment_settle_event_list = None
        self._refund_event_list = None
        self._guarantee_claim_event_list = None
        self._chargeback_event_list = None
        self._pay_with_amazon_event_list = None
        self._service_provider_credit_event_list = None
        self._retrocharge_event_list = None
        self._rental_transaction_event_list = None
        self._product_ads_payment_event_list = None
        self._service_fee_event_list = None
        self._seller_deal_payment_event_list = None
        self._debt_recovery_event_list = None
        self._loan_servicing_event_list = None
        self._adjustment_event_list = None
        self._safet_reimbursement_event_list = None
        self._seller_review_enrollment_payment_event_list = None
        self._fba_liquidation_event_list = None
        self._coupon_payment_event_list = None
        self._imaging_services_fee_event_list = None
        self._network_commingling_transaction_event_list = None
        self._affordability_expense_event_list = None
        self._affordability_expense_reversal_event_list = None
        self._removal_shipment_event_list = None
        self._removal_shipment_adjustment_event_list = None
        self._trial_shipment_event_list = None
        self._tds_reimbursement_event_list = None
        self._adhoc_disbursement_event_list = None
        self._tax_withholding_event_list = None
        self._charge_refund_event_list = None
        self._failed_adhoc_disbursement_event_list = None
        self._value_added_service_charge_event_list = None
        self._capacity_reservation_billing_event_list = None
        self.discriminator = None

        if shipment_event_list is not None:
            self.shipment_event_list = shipment_event_list
        if shipment_settle_event_list is not None:
            self.shipment_settle_event_list = shipment_settle_event_list
        if refund_event_list is not None:
            self.refund_event_list = refund_event_list
        if guarantee_claim_event_list is not None:
            self.guarantee_claim_event_list = guarantee_claim_event_list
        if chargeback_event_list is not None:
            self.chargeback_event_list = chargeback_event_list
        if pay_with_amazon_event_list is not None:
            self.pay_with_amazon_event_list = pay_with_amazon_event_list
        if service_provider_credit_event_list is not None:
            self.service_provider_credit_event_list = service_provider_credit_event_list
        if retrocharge_event_list is not None:
            self.retrocharge_event_list = retrocharge_event_list
        if rental_transaction_event_list is not None:
            self.rental_transaction_event_list = rental_transaction_event_list
        if product_ads_payment_event_list is not None:
            self.product_ads_payment_event_list = product_ads_payment_event_list
        if service_fee_event_list is not None:
            self.service_fee_event_list = service_fee_event_list
        if seller_deal_payment_event_list is not None:
            self.seller_deal_payment_event_list = seller_deal_payment_event_list
        if debt_recovery_event_list is not None:
            self.debt_recovery_event_list = debt_recovery_event_list
        if loan_servicing_event_list is not None:
            self.loan_servicing_event_list = loan_servicing_event_list
        if adjustment_event_list is not None:
            self.adjustment_event_list = adjustment_event_list
        if safet_reimbursement_event_list is not None:
            self.safet_reimbursement_event_list = safet_reimbursement_event_list
        if seller_review_enrollment_payment_event_list is not None:
            self.seller_review_enrollment_payment_event_list = seller_review_enrollment_payment_event_list
        if fba_liquidation_event_list is not None:
            self.fba_liquidation_event_list = fba_liquidation_event_list
        if coupon_payment_event_list is not None:
            self.coupon_payment_event_list = coupon_payment_event_list
        if imaging_services_fee_event_list is not None:
            self.imaging_services_fee_event_list = imaging_services_fee_event_list
        if network_commingling_transaction_event_list is not None:
            self.network_commingling_transaction_event_list = network_commingling_transaction_event_list
        if affordability_expense_event_list is not None:
            self.affordability_expense_event_list = affordability_expense_event_list
        if affordability_expense_reversal_event_list is not None:
            self.affordability_expense_reversal_event_list = affordability_expense_reversal_event_list
        if removal_shipment_event_list is not None:
            self.removal_shipment_event_list = removal_shipment_event_list
        if removal_shipment_adjustment_event_list is not None:
            self.removal_shipment_adjustment_event_list = removal_shipment_adjustment_event_list
        if trial_shipment_event_list is not None:
            self.trial_shipment_event_list = trial_shipment_event_list
        if tds_reimbursement_event_list is not None:
            self.tds_reimbursement_event_list = tds_reimbursement_event_list
        if adhoc_disbursement_event_list is not None:
            self.adhoc_disbursement_event_list = adhoc_disbursement_event_list
        if tax_withholding_event_list is not None:
            self.tax_withholding_event_list = tax_withholding_event_list
        if charge_refund_event_list is not None:
            self.charge_refund_event_list = charge_refund_event_list
        if failed_adhoc_disbursement_event_list is not None:
            self.failed_adhoc_disbursement_event_list = failed_adhoc_disbursement_event_list
        if value_added_service_charge_event_list is not None:
            self.value_added_service_charge_event_list = value_added_service_charge_event_list
        if capacity_reservation_billing_event_list is not None:
            self.capacity_reservation_billing_event_list = capacity_reservation_billing_event_list

    @property
    def shipment_event_list(self):
        """Gets the shipment_event_list of this FinancialEvents.  # noqa: E501

        A list of shipment event information.  # noqa: E501

        :return: The shipment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ShipmentEvent]
        """
        return self._shipment_event_list

    @shipment_event_list.setter
    def shipment_event_list(self, shipment_event_list):
        """Sets the shipment_event_list of this FinancialEvents.

        A list of shipment event information.  # noqa: E501

        :param shipment_event_list: The shipment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ShipmentEvent]
        """

        self._shipment_event_list = shipment_event_list

    @property
    def shipment_settle_event_list(self):
        """Gets the shipment_settle_event_list of this FinancialEvents.  # noqa: E501

        A list of `ShipmentEvent` items.  # noqa: E501

        :return: The shipment_settle_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ShipmentEvent]
        """
        return self._shipment_settle_event_list

    @shipment_settle_event_list.setter
    def shipment_settle_event_list(self, shipment_settle_event_list):
        """Sets the shipment_settle_event_list of this FinancialEvents.

        A list of `ShipmentEvent` items.  # noqa: E501

        :param shipment_settle_event_list: The shipment_settle_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ShipmentEvent]
        """

        self._shipment_settle_event_list = shipment_settle_event_list

    @property
    def refund_event_list(self):
        """Gets the refund_event_list of this FinancialEvents.  # noqa: E501

        A list of shipment event information.  # noqa: E501

        :return: The refund_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ShipmentEvent]
        """
        return self._refund_event_list

    @refund_event_list.setter
    def refund_event_list(self, refund_event_list):
        """Sets the refund_event_list of this FinancialEvents.

        A list of shipment event information.  # noqa: E501

        :param refund_event_list: The refund_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ShipmentEvent]
        """

        self._refund_event_list = refund_event_list

    @property
    def guarantee_claim_event_list(self):
        """Gets the guarantee_claim_event_list of this FinancialEvents.  # noqa: E501

        A list of shipment event information.  # noqa: E501

        :return: The guarantee_claim_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ShipmentEvent]
        """
        return self._guarantee_claim_event_list

    @guarantee_claim_event_list.setter
    def guarantee_claim_event_list(self, guarantee_claim_event_list):
        """Sets the guarantee_claim_event_list of this FinancialEvents.

        A list of shipment event information.  # noqa: E501

        :param guarantee_claim_event_list: The guarantee_claim_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ShipmentEvent]
        """

        self._guarantee_claim_event_list = guarantee_claim_event_list

    @property
    def chargeback_event_list(self):
        """Gets the chargeback_event_list of this FinancialEvents.  # noqa: E501

        A list of shipment event information.  # noqa: E501

        :return: The chargeback_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ShipmentEvent]
        """
        return self._chargeback_event_list

    @chargeback_event_list.setter
    def chargeback_event_list(self, chargeback_event_list):
        """Sets the chargeback_event_list of this FinancialEvents.

        A list of shipment event information.  # noqa: E501

        :param chargeback_event_list: The chargeback_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ShipmentEvent]
        """

        self._chargeback_event_list = chargeback_event_list

    @property
    def pay_with_amazon_event_list(self):
        """Gets the pay_with_amazon_event_list of this FinancialEvents.  # noqa: E501

        A list of events related to the seller's Pay with Amazon account.  # noqa: E501

        :return: The pay_with_amazon_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[PayWithAmazonEvent]
        """
        return self._pay_with_amazon_event_list

    @pay_with_amazon_event_list.setter
    def pay_with_amazon_event_list(self, pay_with_amazon_event_list):
        """Sets the pay_with_amazon_event_list of this FinancialEvents.

        A list of events related to the seller's Pay with Amazon account.  # noqa: E501

        :param pay_with_amazon_event_list: The pay_with_amazon_event_list of this FinancialEvents.  # noqa: E501
        :type: List[PayWithAmazonEvent]
        """

        self._pay_with_amazon_event_list = pay_with_amazon_event_list

    @property
    def service_provider_credit_event_list(self):
        """Gets the service_provider_credit_event_list of this FinancialEvents.  # noqa: E501

        A list of information about solution provider credits.  # noqa: E501

        :return: The service_provider_credit_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[SolutionProviderCreditEvent]
        """
        return self._service_provider_credit_event_list

    @service_provider_credit_event_list.setter
    def service_provider_credit_event_list(self, service_provider_credit_event_list):
        """Sets the service_provider_credit_event_list of this FinancialEvents.

        A list of information about solution provider credits.  # noqa: E501

        :param service_provider_credit_event_list: The service_provider_credit_event_list of this FinancialEvents.  # noqa: E501
        :type: List[SolutionProviderCreditEvent]
        """

        self._service_provider_credit_event_list = service_provider_credit_event_list

    @property
    def retrocharge_event_list(self):
        """Gets the retrocharge_event_list of this FinancialEvents.  # noqa: E501

        A list of information about Retrocharge or RetrochargeReversal events.  # noqa: E501

        :return: The retrocharge_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[RetrochargeEvent]
        """
        return self._retrocharge_event_list

    @retrocharge_event_list.setter
    def retrocharge_event_list(self, retrocharge_event_list):
        """Sets the retrocharge_event_list of this FinancialEvents.

        A list of information about Retrocharge or RetrochargeReversal events.  # noqa: E501

        :param retrocharge_event_list: The retrocharge_event_list of this FinancialEvents.  # noqa: E501
        :type: List[RetrochargeEvent]
        """

        self._retrocharge_event_list = retrocharge_event_list

    @property
    def rental_transaction_event_list(self):
        """Gets the rental_transaction_event_list of this FinancialEvents.  # noqa: E501

        A list of rental transaction event information.  # noqa: E501

        :return: The rental_transaction_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[RentalTransactionEvent]
        """
        return self._rental_transaction_event_list

    @rental_transaction_event_list.setter
    def rental_transaction_event_list(self, rental_transaction_event_list):
        """Sets the rental_transaction_event_list of this FinancialEvents.

        A list of rental transaction event information.  # noqa: E501

        :param rental_transaction_event_list: The rental_transaction_event_list of this FinancialEvents.  # noqa: E501
        :type: List[RentalTransactionEvent]
        """

        self._rental_transaction_event_list = rental_transaction_event_list

    @property
    def product_ads_payment_event_list(self):
        """Gets the product_ads_payment_event_list of this FinancialEvents.  # noqa: E501

        A list of sponsored products payment events.  # noqa: E501

        :return: The product_ads_payment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ProductAdsPaymentEvent]
        """
        return self._product_ads_payment_event_list

    @product_ads_payment_event_list.setter
    def product_ads_payment_event_list(self, product_ads_payment_event_list):
        """Sets the product_ads_payment_event_list of this FinancialEvents.

        A list of sponsored products payment events.  # noqa: E501

        :param product_ads_payment_event_list: The product_ads_payment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ProductAdsPaymentEvent]
        """

        self._product_ads_payment_event_list = product_ads_payment_event_list

    @property
    def service_fee_event_list(self):
        """Gets the service_fee_event_list of this FinancialEvents.  # noqa: E501

        A list of information about service fee events.  # noqa: E501

        :return: The service_fee_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ServiceFeeEvent]
        """
        return self._service_fee_event_list

    @service_fee_event_list.setter
    def service_fee_event_list(self, service_fee_event_list):
        """Sets the service_fee_event_list of this FinancialEvents.

        A list of information about service fee events.  # noqa: E501

        :param service_fee_event_list: The service_fee_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ServiceFeeEvent]
        """

        self._service_fee_event_list = service_fee_event_list

    @property
    def seller_deal_payment_event_list(self):
        """Gets the seller_deal_payment_event_list of this FinancialEvents.  # noqa: E501

        A list of payment events for deal-related fees.  # noqa: E501

        :return: The seller_deal_payment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[SellerDealPaymentEvent]
        """
        return self._seller_deal_payment_event_list

    @seller_deal_payment_event_list.setter
    def seller_deal_payment_event_list(self, seller_deal_payment_event_list):
        """Sets the seller_deal_payment_event_list of this FinancialEvents.

        A list of payment events for deal-related fees.  # noqa: E501

        :param seller_deal_payment_event_list: The seller_deal_payment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[SellerDealPaymentEvent]
        """

        self._seller_deal_payment_event_list = seller_deal_payment_event_list

    @property
    def debt_recovery_event_list(self):
        """Gets the debt_recovery_event_list of this FinancialEvents.  # noqa: E501

        A list of debt recovery event information.  # noqa: E501

        :return: The debt_recovery_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[DebtRecoveryEvent]
        """
        return self._debt_recovery_event_list

    @debt_recovery_event_list.setter
    def debt_recovery_event_list(self, debt_recovery_event_list):
        """Sets the debt_recovery_event_list of this FinancialEvents.

        A list of debt recovery event information.  # noqa: E501

        :param debt_recovery_event_list: The debt_recovery_event_list of this FinancialEvents.  # noqa: E501
        :type: List[DebtRecoveryEvent]
        """

        self._debt_recovery_event_list = debt_recovery_event_list

    @property
    def loan_servicing_event_list(self):
        """Gets the loan_servicing_event_list of this FinancialEvents.  # noqa: E501

        A list of loan servicing events.  # noqa: E501

        :return: The loan_servicing_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[LoanServicingEvent]
        """
        return self._loan_servicing_event_list

    @loan_servicing_event_list.setter
    def loan_servicing_event_list(self, loan_servicing_event_list):
        """Sets the loan_servicing_event_list of this FinancialEvents.

        A list of loan servicing events.  # noqa: E501

        :param loan_servicing_event_list: The loan_servicing_event_list of this FinancialEvents.  # noqa: E501
        :type: List[LoanServicingEvent]
        """

        self._loan_servicing_event_list = loan_servicing_event_list

    @property
    def adjustment_event_list(self):
        """Gets the adjustment_event_list of this FinancialEvents.  # noqa: E501

        A list of adjustment event information for the seller's account.  # noqa: E501

        :return: The adjustment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[AdjustmentEvent]
        """
        return self._adjustment_event_list

    @adjustment_event_list.setter
    def adjustment_event_list(self, adjustment_event_list):
        """Sets the adjustment_event_list of this FinancialEvents.

        A list of adjustment event information for the seller's account.  # noqa: E501

        :param adjustment_event_list: The adjustment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[AdjustmentEvent]
        """

        self._adjustment_event_list = adjustment_event_list

    @property
    def safet_reimbursement_event_list(self):
        """Gets the safet_reimbursement_event_list of this FinancialEvents.  # noqa: E501

        A list of SAFETReimbursementEvents.  # noqa: E501

        :return: The safet_reimbursement_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[SAFETReimbursementEvent]
        """
        return self._safet_reimbursement_event_list

    @safet_reimbursement_event_list.setter
    def safet_reimbursement_event_list(self, safet_reimbursement_event_list):
        """Sets the safet_reimbursement_event_list of this FinancialEvents.

        A list of SAFETReimbursementEvents.  # noqa: E501

        :param safet_reimbursement_event_list: The safet_reimbursement_event_list of this FinancialEvents.  # noqa: E501
        :type: List[SAFETReimbursementEvent]
        """

        self._safet_reimbursement_event_list = safet_reimbursement_event_list

    @property
    def seller_review_enrollment_payment_event_list(self):
        """Gets the seller_review_enrollment_payment_event_list of this FinancialEvents.  # noqa: E501

        A list of information about fee events for the Early Reviewer Program.  # noqa: E501

        :return: The seller_review_enrollment_payment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[SellerReviewEnrollmentPaymentEvent]
        """
        return self._seller_review_enrollment_payment_event_list

    @seller_review_enrollment_payment_event_list.setter
    def seller_review_enrollment_payment_event_list(self, seller_review_enrollment_payment_event_list):
        """Sets the seller_review_enrollment_payment_event_list of this FinancialEvents.

        A list of information about fee events for the Early Reviewer Program.  # noqa: E501

        :param seller_review_enrollment_payment_event_list: The seller_review_enrollment_payment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[SellerReviewEnrollmentPaymentEvent]
        """

        self._seller_review_enrollment_payment_event_list = seller_review_enrollment_payment_event_list

    @property
    def fba_liquidation_event_list(self):
        """Gets the fba_liquidation_event_list of this FinancialEvents.  # noqa: E501

        A list of FBA inventory liquidation payment events.  # noqa: E501

        :return: The fba_liquidation_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[FBALiquidationEvent]
        """
        return self._fba_liquidation_event_list

    @fba_liquidation_event_list.setter
    def fba_liquidation_event_list(self, fba_liquidation_event_list):
        """Sets the fba_liquidation_event_list of this FinancialEvents.

        A list of FBA inventory liquidation payment events.  # noqa: E501

        :param fba_liquidation_event_list: The fba_liquidation_event_list of this FinancialEvents.  # noqa: E501
        :type: List[FBALiquidationEvent]
        """

        self._fba_liquidation_event_list = fba_liquidation_event_list

    @property
    def coupon_payment_event_list(self):
        """Gets the coupon_payment_event_list of this FinancialEvents.  # noqa: E501

        A list of coupon payment event information.  # noqa: E501

        :return: The coupon_payment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[CouponPaymentEvent]
        """
        return self._coupon_payment_event_list

    @coupon_payment_event_list.setter
    def coupon_payment_event_list(self, coupon_payment_event_list):
        """Sets the coupon_payment_event_list of this FinancialEvents.

        A list of coupon payment event information.  # noqa: E501

        :param coupon_payment_event_list: The coupon_payment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[CouponPaymentEvent]
        """

        self._coupon_payment_event_list = coupon_payment_event_list

    @property
    def imaging_services_fee_event_list(self):
        """Gets the imaging_services_fee_event_list of this FinancialEvents.  # noqa: E501

        A list of fee events related to Amazon Imaging services.  # noqa: E501

        :return: The imaging_services_fee_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ImagingServicesFeeEvent]
        """
        return self._imaging_services_fee_event_list

    @imaging_services_fee_event_list.setter
    def imaging_services_fee_event_list(self, imaging_services_fee_event_list):
        """Sets the imaging_services_fee_event_list of this FinancialEvents.

        A list of fee events related to Amazon Imaging services.  # noqa: E501

        :param imaging_services_fee_event_list: The imaging_services_fee_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ImagingServicesFeeEvent]
        """

        self._imaging_services_fee_event_list = imaging_services_fee_event_list

    @property
    def network_commingling_transaction_event_list(self):
        """Gets the network_commingling_transaction_event_list of this FinancialEvents.  # noqa: E501

        A list of network commingling transaction events.  # noqa: E501

        :return: The network_commingling_transaction_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[NetworkComminglingTransactionEvent]
        """
        return self._network_commingling_transaction_event_list

    @network_commingling_transaction_event_list.setter
    def network_commingling_transaction_event_list(self, network_commingling_transaction_event_list):
        """Sets the network_commingling_transaction_event_list of this FinancialEvents.

        A list of network commingling transaction events.  # noqa: E501

        :param network_commingling_transaction_event_list: The network_commingling_transaction_event_list of this FinancialEvents.  # noqa: E501
        :type: List[NetworkComminglingTransactionEvent]
        """

        self._network_commingling_transaction_event_list = network_commingling_transaction_event_list

    @property
    def affordability_expense_event_list(self):
        """Gets the affordability_expense_event_list of this FinancialEvents.  # noqa: E501

        A list of expense information related to an affordability promotion.  # noqa: E501

        :return: The affordability_expense_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[AffordabilityExpenseEvent]
        """
        return self._affordability_expense_event_list

    @affordability_expense_event_list.setter
    def affordability_expense_event_list(self, affordability_expense_event_list):
        """Sets the affordability_expense_event_list of this FinancialEvents.

        A list of expense information related to an affordability promotion.  # noqa: E501

        :param affordability_expense_event_list: The affordability_expense_event_list of this FinancialEvents.  # noqa: E501
        :type: List[AffordabilityExpenseEvent]
        """

        self._affordability_expense_event_list = affordability_expense_event_list

    @property
    def affordability_expense_reversal_event_list(self):
        """Gets the affordability_expense_reversal_event_list of this FinancialEvents.  # noqa: E501

        A list of expense information related to an affordability promotion.  # noqa: E501

        :return: The affordability_expense_reversal_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[AffordabilityExpenseEvent]
        """
        return self._affordability_expense_reversal_event_list

    @affordability_expense_reversal_event_list.setter
    def affordability_expense_reversal_event_list(self, affordability_expense_reversal_event_list):
        """Sets the affordability_expense_reversal_event_list of this FinancialEvents.

        A list of expense information related to an affordability promotion.  # noqa: E501

        :param affordability_expense_reversal_event_list: The affordability_expense_reversal_event_list of this FinancialEvents.  # noqa: E501
        :type: List[AffordabilityExpenseEvent]
        """

        self._affordability_expense_reversal_event_list = affordability_expense_reversal_event_list

    @property
    def removal_shipment_event_list(self):
        """Gets the removal_shipment_event_list of this FinancialEvents.  # noqa: E501

        A list of removal shipment event information.  # noqa: E501

        :return: The removal_shipment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[RemovalShipmentEvent]
        """
        return self._removal_shipment_event_list

    @removal_shipment_event_list.setter
    def removal_shipment_event_list(self, removal_shipment_event_list):
        """Sets the removal_shipment_event_list of this FinancialEvents.

        A list of removal shipment event information.  # noqa: E501

        :param removal_shipment_event_list: The removal_shipment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[RemovalShipmentEvent]
        """

        self._removal_shipment_event_list = removal_shipment_event_list

    @property
    def removal_shipment_adjustment_event_list(self):
        """Gets the removal_shipment_adjustment_event_list of this FinancialEvents.  # noqa: E501

        A comma-delimited list of Removal shipmentAdjustment details for FBA inventory.  # noqa: E501

        :return: The removal_shipment_adjustment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[RemovalShipmentAdjustmentEvent]
        """
        return self._removal_shipment_adjustment_event_list

    @removal_shipment_adjustment_event_list.setter
    def removal_shipment_adjustment_event_list(self, removal_shipment_adjustment_event_list):
        """Sets the removal_shipment_adjustment_event_list of this FinancialEvents.

        A comma-delimited list of Removal shipmentAdjustment details for FBA inventory.  # noqa: E501

        :param removal_shipment_adjustment_event_list: The removal_shipment_adjustment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[RemovalShipmentAdjustmentEvent]
        """

        self._removal_shipment_adjustment_event_list = removal_shipment_adjustment_event_list

    @property
    def trial_shipment_event_list(self):
        """Gets the trial_shipment_event_list of this FinancialEvents.  # noqa: E501

        A list of information about trial shipment financial events.  # noqa: E501

        :return: The trial_shipment_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[TrialShipmentEvent]
        """
        return self._trial_shipment_event_list

    @trial_shipment_event_list.setter
    def trial_shipment_event_list(self, trial_shipment_event_list):
        """Sets the trial_shipment_event_list of this FinancialEvents.

        A list of information about trial shipment financial events.  # noqa: E501

        :param trial_shipment_event_list: The trial_shipment_event_list of this FinancialEvents.  # noqa: E501
        :type: List[TrialShipmentEvent]
        """

        self._trial_shipment_event_list = trial_shipment_event_list

    @property
    def tds_reimbursement_event_list(self):
        """Gets the tds_reimbursement_event_list of this FinancialEvents.  # noqa: E501

        A list of `TDSReimbursementEvent` items.  # noqa: E501

        :return: The tds_reimbursement_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[TDSReimbursementEvent]
        """
        return self._tds_reimbursement_event_list

    @tds_reimbursement_event_list.setter
    def tds_reimbursement_event_list(self, tds_reimbursement_event_list):
        """Sets the tds_reimbursement_event_list of this FinancialEvents.

        A list of `TDSReimbursementEvent` items.  # noqa: E501

        :param tds_reimbursement_event_list: The tds_reimbursement_event_list of this FinancialEvents.  # noqa: E501
        :type: List[TDSReimbursementEvent]
        """

        self._tds_reimbursement_event_list = tds_reimbursement_event_list

    @property
    def adhoc_disbursement_event_list(self):
        """Gets the adhoc_disbursement_event_list of this FinancialEvents.  # noqa: E501

        A list of `AdhocDisbursement` events.  # noqa: E501

        :return: The adhoc_disbursement_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[AdhocDisbursementEvent]
        """
        return self._adhoc_disbursement_event_list

    @adhoc_disbursement_event_list.setter
    def adhoc_disbursement_event_list(self, adhoc_disbursement_event_list):
        """Sets the adhoc_disbursement_event_list of this FinancialEvents.

        A list of `AdhocDisbursement` events.  # noqa: E501

        :param adhoc_disbursement_event_list: The adhoc_disbursement_event_list of this FinancialEvents.  # noqa: E501
        :type: List[AdhocDisbursementEvent]
        """

        self._adhoc_disbursement_event_list = adhoc_disbursement_event_list

    @property
    def tax_withholding_event_list(self):
        """Gets the tax_withholding_event_list of this FinancialEvents.  # noqa: E501

        A list of `TaxWithholding` events.  # noqa: E501

        :return: The tax_withholding_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[TaxWithholdingEvent]
        """
        return self._tax_withholding_event_list

    @tax_withholding_event_list.setter
    def tax_withholding_event_list(self, tax_withholding_event_list):
        """Sets the tax_withholding_event_list of this FinancialEvents.

        A list of `TaxWithholding` events.  # noqa: E501

        :param tax_withholding_event_list: The tax_withholding_event_list of this FinancialEvents.  # noqa: E501
        :type: List[TaxWithholdingEvent]
        """

        self._tax_withholding_event_list = tax_withholding_event_list

    @property
    def charge_refund_event_list(self):
        """Gets the charge_refund_event_list of this FinancialEvents.  # noqa: E501

        A list of charge refund events.  # noqa: E501

        :return: The charge_refund_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ChargeRefundEvent]
        """
        return self._charge_refund_event_list

    @charge_refund_event_list.setter
    def charge_refund_event_list(self, charge_refund_event_list):
        """Sets the charge_refund_event_list of this FinancialEvents.

        A list of charge refund events.  # noqa: E501

        :param charge_refund_event_list: The charge_refund_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ChargeRefundEvent]
        """

        self._charge_refund_event_list = charge_refund_event_list

    @property
    def failed_adhoc_disbursement_event_list(self):
        """Gets the failed_adhoc_disbursement_event_list of this FinancialEvents.  # noqa: E501

        A list of `FailedAdhocDisbursementEvent`s.  # noqa: E501

        :return: The failed_adhoc_disbursement_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[FailedAdhocDisbursementEvent]
        """
        return self._failed_adhoc_disbursement_event_list

    @failed_adhoc_disbursement_event_list.setter
    def failed_adhoc_disbursement_event_list(self, failed_adhoc_disbursement_event_list):
        """Sets the failed_adhoc_disbursement_event_list of this FinancialEvents.

        A list of `FailedAdhocDisbursementEvent`s.  # noqa: E501

        :param failed_adhoc_disbursement_event_list: The failed_adhoc_disbursement_event_list of this FinancialEvents.  # noqa: E501
        :type: List[FailedAdhocDisbursementEvent]
        """

        self._failed_adhoc_disbursement_event_list = failed_adhoc_disbursement_event_list

    @property
    def value_added_service_charge_event_list(self):
        """Gets the value_added_service_charge_event_list of this FinancialEvents.  # noqa: E501

        A list of `ValueAddedServiceCharge` events.  # noqa: E501

        :return: The value_added_service_charge_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[ValueAddedServiceChargeEvent]
        """
        return self._value_added_service_charge_event_list

    @value_added_service_charge_event_list.setter
    def value_added_service_charge_event_list(self, value_added_service_charge_event_list):
        """Sets the value_added_service_charge_event_list of this FinancialEvents.

        A list of `ValueAddedServiceCharge` events.  # noqa: E501

        :param value_added_service_charge_event_list: The value_added_service_charge_event_list of this FinancialEvents.  # noqa: E501
        :type: List[ValueAddedServiceChargeEvent]
        """

        self._value_added_service_charge_event_list = value_added_service_charge_event_list

    @property
    def capacity_reservation_billing_event_list(self):
        """Gets the capacity_reservation_billing_event_list of this FinancialEvents.  # noqa: E501

        A list of `CapacityReservationBillingEvent` events.  # noqa: E501

        :return: The capacity_reservation_billing_event_list of this FinancialEvents.  # noqa: E501
        :rtype: List[CapacityReservationBillingEvent]
        """
        return self._capacity_reservation_billing_event_list

    @capacity_reservation_billing_event_list.setter
    def capacity_reservation_billing_event_list(self, capacity_reservation_billing_event_list):
        """Sets the capacity_reservation_billing_event_list of this FinancialEvents.

        A list of `CapacityReservationBillingEvent` events.  # noqa: E501

        :param capacity_reservation_billing_event_list: The capacity_reservation_billing_event_list of this FinancialEvents.  # noqa: E501
        :type: List[CapacityReservationBillingEvent]
        """

        self._capacity_reservation_billing_event_list = capacity_reservation_billing_event_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FinancialEvents, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FinancialEvents):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FinancialEvents):
            return True

        return self.to_dict() != other.to_dict()
