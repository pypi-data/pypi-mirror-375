[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ppio-agent-runtime"
version = "0.1.0"
description = "PPIO Agent Runtime SDK - 轻量级 AI 智能体运行时框架"
authors = [
    {name = "PPIO Team", email = "team@ppio.cn"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "starlette>=0.46.2",
    "uvicorn>=0.34.2",
    "pydantic>=2.0.0,<3.0.0",
    "typing-extensions>=4.13.2,<5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=0.24.0",
    "mypy>=1.16.1",
    "ruff>=0.12.0",
    "httpx>=0.28.1",
]

[project.urls]
Homepage = "https://github.com/ppio/ppio-agent-runtime-sdk"
Documentation = "https://github.com/ppio/ppio-agent-runtime-sdk#readme"
Repository = "https://github.com/ppio/ppio-agent-runtime-sdk.git"
Issues = "https://github.com/ppio/ppio-agent-runtime-sdk/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/ppio_agent_runtime"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
