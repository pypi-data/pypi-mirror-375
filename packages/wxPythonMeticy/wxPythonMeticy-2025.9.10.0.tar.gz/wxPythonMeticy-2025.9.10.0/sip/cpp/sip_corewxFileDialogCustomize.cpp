/*
 * Interface wrapper code.
 *
 * Generated by SIP 6.12.0
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"
        #include <wx/filedlgcustomize.h>
        #include <wx/filedlgcustomize.h>
        #include <wx/filedlgcustomize.h>
        #include <wx/filedlgcustomize.h>
        #include <wx/filedlgcustomize.h>
        #include <wx/filedlgcustomize.h>
        #include <wx/filedlgcustomize.h>
    wxFileDialogChoice * _wxFileDialogCustomize_AddChoice(wxFileDialogCustomize* self, const wxArrayString* strings)
    {
        const wxString* ptr = &strings->front();
        return self->AddChoice(strings->size(), ptr);
    }


PyDoc_STRVAR(doc_wxFileDialogCustomize_AddButton, "AddButton(label) -> FileDialogButton\n"
"\n"
"Add a button with the specified label.");

extern "C" {static PyObject *meth_wxFileDialogCustomize_AddButton(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogCustomize_AddButton(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxString* label;
        int labelState = 0;
        ::wxFileDialogCustomize *sipCpp;

        static const char *sipKwdList[] = {
            sipName_label,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxFileDialogCustomize, &sipCpp, sipType_wxString, &label, &labelState))
        {
            ::wxFileDialogButton*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->AddButton(*label);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(label), sipType_wxString, labelState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes, sipType_wxFileDialogButton, SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogCustomize, sipName_AddButton, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxFileDialogCustomize_AddCheckBox, "AddCheckBox(label) -> FileDialogCheckBox\n"
"\n"
"Add a checkbox with the specified label.");

extern "C" {static PyObject *meth_wxFileDialogCustomize_AddCheckBox(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogCustomize_AddCheckBox(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxString* label;
        int labelState = 0;
        ::wxFileDialogCustomize *sipCpp;

        static const char *sipKwdList[] = {
            sipName_label,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxFileDialogCustomize, &sipCpp, sipType_wxString, &label, &labelState))
        {
            ::wxFileDialogCheckBox*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->AddCheckBox(*label);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(label), sipType_wxString, labelState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes, sipType_wxFileDialogCheckBox, SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogCustomize, sipName_AddCheckBox, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxFileDialogCustomize_AddRadioButton, "AddRadioButton(label) -> FileDialogRadioButton\n"
"\n"
"Add a radio button with the specified label.");

extern "C" {static PyObject *meth_wxFileDialogCustomize_AddRadioButton(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogCustomize_AddRadioButton(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxString* label;
        int labelState = 0;
        ::wxFileDialogCustomize *sipCpp;

        static const char *sipKwdList[] = {
            sipName_label,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxFileDialogCustomize, &sipCpp, sipType_wxString, &label, &labelState))
        {
            ::wxFileDialogRadioButton*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->AddRadioButton(*label);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(label), sipType_wxString, labelState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes, sipType_wxFileDialogRadioButton, SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogCustomize, sipName_AddRadioButton, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxFileDialogCustomize_AddChoice, "AddChoice(strings) -> FileDialogChoice\n"
"\n"
"Add a read-only combobox with the specified contents.");

extern "C" {static PyObject *meth_wxFileDialogCustomize_AddChoice(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogCustomize_AddChoice(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxArrayString* strings;
        int stringsState = 0;
        ::wxFileDialogCustomize *sipCpp;

        static const char *sipKwdList[] = {
            sipName_strings,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxFileDialogCustomize, &sipCpp, sipType_wxArrayString, &strings, &stringsState))
        {
            ::wxFileDialogChoice*sipRes = 0;
            int sipIsErr = 0;
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxFileDialogCustomize_AddChoice(sipCpp, strings);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
            sipReleaseType(const_cast< ::wxArrayString *>(strings), sipType_wxArrayString, stringsState);

            if (sipIsErr)
                return 0;

            return sipConvertFromType(sipRes, sipType_wxFileDialogChoice, SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogCustomize, sipName_AddChoice, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxFileDialogCustomize_AddTextCtrl, "AddTextCtrl(label=\"\") -> FileDialogTextCtrl\n"
"\n"
"Add a text control with an optional label preceding it.");

extern "C" {static PyObject *meth_wxFileDialogCustomize_AddTextCtrl(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogCustomize_AddTextCtrl(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxString& labeldef = wxString();
        const ::wxString* label = &labeldef;
        int labelState = 0;
        ::wxFileDialogCustomize *sipCpp;

        static const char *sipKwdList[] = {
            sipName_label,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J1", &sipSelf, sipType_wxFileDialogCustomize, &sipCpp, sipType_wxString, &label, &labelState))
        {
            ::wxFileDialogTextCtrl*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->AddTextCtrl(*label);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(label), sipType_wxString, labelState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes, sipType_wxFileDialogTextCtrl, SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogCustomize, sipName_AddTextCtrl, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxFileDialogCustomize_AddStaticText, "AddStaticText(label) -> FileDialogStaticText\n"
"\n"
"Add a static text with the given contents.");

extern "C" {static PyObject *meth_wxFileDialogCustomize_AddStaticText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogCustomize_AddStaticText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxString* label;
        int labelState = 0;
        ::wxFileDialogCustomize *sipCpp;

        static const char *sipKwdList[] = {
            sipName_label,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxFileDialogCustomize, &sipCpp, sipType_wxString, &label, &labelState))
        {
            ::wxFileDialogStaticText*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->AddStaticText(*label);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(label), sipType_wxString, labelState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes, sipType_wxFileDialogStaticText, SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogCustomize, sipName_AddStaticText, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxFileDialogCustomize(void *, int);}
static void release_wxFileDialogCustomize(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxFileDialogCustomize *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_wxFileDialogCustomize(sipSimpleWrapper *);}
static void dealloc_wxFileDialogCustomize(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxFileDialogCustomize(sipGetAddress(sipSelf), 0);
    }
}


static PyMethodDef methods_wxFileDialogCustomize[] = {
    {sipName_AddButton, SIP_MLMETH_CAST(meth_wxFileDialogCustomize_AddButton), METH_VARARGS|METH_KEYWORDS, doc_wxFileDialogCustomize_AddButton},
    {sipName_AddCheckBox, SIP_MLMETH_CAST(meth_wxFileDialogCustomize_AddCheckBox), METH_VARARGS|METH_KEYWORDS, doc_wxFileDialogCustomize_AddCheckBox},
    {sipName_AddChoice, SIP_MLMETH_CAST(meth_wxFileDialogCustomize_AddChoice), METH_VARARGS|METH_KEYWORDS, doc_wxFileDialogCustomize_AddChoice},
    {sipName_AddRadioButton, SIP_MLMETH_CAST(meth_wxFileDialogCustomize_AddRadioButton), METH_VARARGS|METH_KEYWORDS, doc_wxFileDialogCustomize_AddRadioButton},
    {sipName_AddStaticText, SIP_MLMETH_CAST(meth_wxFileDialogCustomize_AddStaticText), METH_VARARGS|METH_KEYWORDS, doc_wxFileDialogCustomize_AddStaticText},
    {sipName_AddTextCtrl, SIP_MLMETH_CAST(meth_wxFileDialogCustomize_AddTextCtrl), METH_VARARGS|METH_KEYWORDS, doc_wxFileDialogCustomize_AddTextCtrl}
};

PyDoc_STRVAR(doc_wxFileDialogCustomize, "Used with wxFileDialogCustomizeHook to add custom controls to\n"
"wxFileDialog.");


sipClassTypeDef sipTypeDef__core_wxFileDialogCustomize = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_CLASS,
        sipNameNr_wxFileDialogCustomize,
        SIP_NULLPTR,
        SIP_NULLPTR,
    },
    {
        sipNameNr_FileDialogCustomize,
        {0, 0, 1},
        6, methods_wxFileDialogCustomize,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxFileDialogCustomize,
    -1,
    -1,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_wxFileDialogCustomize,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_wxFileDialogCustomize,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    0,
};
