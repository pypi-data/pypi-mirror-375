from ..configs.constants import *
from ... import logger as logger
from ...dtype import get_default_dtype as get_default_dtype
from .config_utils import ScientificNotationEncoder as ScientificNotationEncoder, dict_raise_error_on_duplicate_keys as dict_raise_error_on_duplicate_keys, get_scalar_param as get_scalar_param
from _typeshed import Incomplete
from enum import Enum as Enum
from pyvqnet.distributed.zero.zero_config import DeepSpeedZeroConfig as DeepSpeedZeroConfig, ZeroStageEnum as ZeroStageEnum

IF_DEBUG_WITH_NO_DIST_OP: bool
ADAGRAD_OPTIMIZER: str
ADAM_OPTIMIZER: str
DEEPSPEED_OPTIMIZERS: Incomplete
ZERO_FORMAT: str
ZERO_OPTIMIZATION: str

class DeepSpeedConfig:
    global_rank: Incomplete
    world_size: Incomplete
    def __init__(self, config: str | dict, mpu: Incomplete | None = None) -> None: ...
    def print_user_config(self) -> None: ...
    def print(self, name) -> None: ...

def get_train_batch_size(param_dict): ...
def get_train_micro_batch_size_per_gpu(param_dict): ...
def get_gradient_accumulation_steps(param_dict): ...
def get_prescale_gradients(param_dict): ...
def get_optimizer_name(param_dict): ...
def get_zero_config(param_dict): ...
def read_zero_config_deprecated(param_dict): ...
def get_gradient_predivide_factor(param_dict): ...
def get_pipeline_config(param_dict):
    """Parses pipeline engine configuration. """
def get_optimizer_params(param_dict): ...
