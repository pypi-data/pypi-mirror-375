[build-system]
requires = ["setuptools>=42", "setuptools-scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cyborgdb"
dynamic = ["version"]
description = "Python Client SDK for CyborgDB: The Confidential Vector Database"
readme = "README.md"
requires-python = ">= 3.8"
license = {text = "MIT"}
authors = [
    {name = "Cyborg Inc."}
]
keywords = ["OpenAPI", "OpenAPI-Generator", "CyborgDB Service"]
dependencies = [
    "urllib3 >= 1.25.3, < 3.0.0",
    "python-dateutil >= 2.8.2",
    "pydantic >= 2",
    "typing-extensions >= 4.7.1",
    "python-dotenv >= 0.19.0",
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: C++",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries",
]

[project.optional-dependencies]
langchain = [
    "langchain-core >= 0.1.0",
    "sentence-transformers >= 2.2.0",
    "numpy >= 1.21.0",
]

[project.urls]
"Homepage" = "https://www.cyborg.co"
"Documentation" = "https://docs.cyborg.co"
"Repository" = "https://github.com/cyborginc/cyborgdb-py"

[tool.setuptools.packages.find]
where = ["."]
include = ["cyborgdb*"]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"

[tool.ruff]
# Exclude auto-generated OpenAPI client code
extend-exclude = [
    "cyborgdb/openapi_client",
]

# Same as Black
line-length = 88
indent-width = 4

# Assume Python 3.8+
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"