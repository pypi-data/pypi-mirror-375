workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - if: $CI_COMMIT_TAG

variables:
  PYTHON_VERSION: "3.11"

.setup_pixi:
  before_script:
    - curl -fsSL https://pixi.sh/install.sh | sh
    - source ~/.bashrc || true
    - git config --global --add safe.directory $PWD

test:
  extends: .setup_pixi
  script:
    - pixi run pytest
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml

pre-commit:
  extends: .setup_pixi
  script:
    - pixi run -e pre-commit pre-commit run --all-files

build-wheels:
  image: registry.cern.ch/docker.io/library/python:$PYTHON_VERSION
  script:
    - pip install build python-dateutil pytz readme_renderer[md] requests setuptools_scm[toml] twine wheel
    - python -m build --outdir $PWD/dist .
    - twine check --strict $PWD/dist/*
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
    expire_in: 1 week

deploy-pypi:
  rules:
    - if: $CI_COMMIT_TAG
  image: registry.cern.ch/docker.io/library/python:3.13
  needs:
    - build-wheels
  before_script:
    - pip install build twine wheel setuptools-scm[toml]
  script:
    - |
      if [ -z "$TWINE_PASSWORD" ] ; then echo "Set TWINE_PASSWORD in CI variables"; exit 1; fi
      twine upload -u __token__ dist/*
