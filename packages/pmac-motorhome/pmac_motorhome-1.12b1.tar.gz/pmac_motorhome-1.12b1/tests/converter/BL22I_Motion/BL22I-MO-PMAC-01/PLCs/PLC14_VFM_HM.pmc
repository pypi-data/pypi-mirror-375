CLOSE

;####################################################
; Autogenerated Homing PLC for PMAC, DO NOT MODIFY
; Group 2:
;  Axis 17: htype = LIMIT, jdist = 0, post = i
;  Axis 18: htype = LIMIT, jdist = 0, post = i
;  Axis 19: htype = LIMIT, jdist = 0, post = i
; Group 3:
;  Axis 20: htype = LIMIT, jdist = 0, post = i
;  Axis 21: htype = LIMIT, jdist = 0, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(14&30)*50+14%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1400
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1401
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1402
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1403
HomingBackupGroup = 0

OPEN PLC14 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1404=i1713 P1405=i1813 P1406=i1913 P1407=i2013 P1408=i2113
;Save the low soft limits to P variables px20..x35
P1420=i1714 P1421=i1814 P1422=i1914 P1423=i2014 P1424=i2114
;Save the home capture flags to P variables px36..x51
MSR32,i912,P1436 MSR33,i912,P1437 MSR36,i912,P1438 MSR37,i912,P1439 MSR40,i912,P1440
;If any are zero then there is probably a macro error
if (P1436=0 or P1437=0 or P1438=0 or P1439=0 or P1440=0)
	HomingStatus=StatusInvalid
endif
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1452=P1436^$C P1453=P1437^$C P1454=P1438^$C P1455=P1439^$C P1456=P1440^$C
;Save the limit flags to P variables px68..x83
P1468=i1724 P1469=i1824 P1470=i1924 P1471=i2024 P1472=i2124
;Save the current position to P variables px84..x99
P1484=M1762 P1485=M1862 P1486=M1962 P1487=M2062 P1488=M2162
;Clear the soft limits
i1713=0 i1813=0 i1913=0 i2013=0 i2113=0
i1714=0 i1814=0 i1914=0 i2014=0 i2114=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m1745=0 m1845=0 m1945=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		i1722=10 i1822=10 i1922=10
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m1772=100000000*(i1723/ABS(i1723)) 		m1872=100000000*(i1823/ABS(i1823)) 		m1972=100000000*(i1923/ABS(i1923))
		cmd "#17J^*^0 #18J^*^0 #19J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1740&m1840&m1940=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1484=(P1484-M1762)/(I1708*32)+0-(i1726/16)
		P1485=(P1485-M1862)/(I1808*32)+0-(i1826/16)
		P1486=(P1486-M1962)/(I1908*32)+0-(i1926/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW32,i912,P1452 MSW33,i912,P1453 MSW36,i912,P1454 		m1772=100000000*(-i1723/ABS(i1723)) 		m1872=100000000*(-i1823/ABS(i1823)) 		m1972=100000000*(-i1923/ABS(i1923))
		cmd "#17J^*^0 #18J^*^0 #19J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1740&m1840&m1940=0) ; At least one motor should not be In Position
		and (m1742|m1842|m1942 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1742|m1842|m1942 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if any limits need disabling ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		;Save the user home flags to P variables px52..x67
		;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
			MSR32,i913,P1452 MSR33,i913,P1453 MSR36,i913,P1454
		; if capture on flag, and flag high, then we need to disable limits
		if (P1436&2=2 and P1436&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1452=1 and i1723>0 and i1726<1)
			or (P1452=2 and i1723<0 and i1726>-1)
				i1724=i1724 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
		; if capture on flag, and flag high, then we need to disable limits
		if (P1437&2=2 and P1437&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1453=1 and i1823>0 and i1826<1)
			or (P1453=2 and i1823<0 and i1826>-1)
				i1824=i1824 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
		; if capture on flag, and flag high, then we need to disable limits
		if (P1438&2=2 and P1438&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1454=1 and i1923>0 and i1926<1)
			or (P1454=2 and i1923<0 and i1926>-1)
				i1924=i1924 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW32,i912,P1436 MSW33,i912,P1437 MSW36,i912,P1438
		cmd "#17hm #18hm #19hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1740&m1840&m1940=0) ; At least one motor should not be In Position
		and (m1742|m1842|m1942 = 0) ; Following error check
		and (m1730|m1830|m1930 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1742|m1842|m1942 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1730|m1830|m1930 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Restore limits if needed ----
	;Restore the limit flags to P variables px68..x83
	i1724=P1468 i1824=P1469 i1924=P1470

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m1745&m1845&m1945=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m1772=P1484 m1872=P1485 m1972=P1486
		cmd "#17J=* #18J=* #19J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m1740&m1840&m1940=0) ; At least one motor should not be In Position
		and (m1742|m1842|m1942 = 0) ; Following error check
		and (m1730|m1830|m1930 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m1742|m1842|m1942 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m1730|m1830|m1930 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m2045=0 m2145=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
		i2022=4 i2122=4
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m2072=100000000*(i2023/ABS(i2023)) 		m2172=100000000*(i2123/ABS(i2123))
		cmd "#20J^*^0 #21J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040&m2140=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1487=(P1487-M2062)/(I2008*32)+0-(i2026/16)
		P1488=(P1488-M2162)/(I2108*32)+0-(i2126/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		MSW37,i912,P1455 MSW40,i912,P1456 		m2072=100000000*(-i2023/ABS(i2023)) 		m2172=100000000*(-i2123/ABS(i2123))
		cmd "#20J^*^0 #21J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040&m2140=0) ; At least one motor should not be In Position
		and (m2042|m2142 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2042|m2142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if any limits need disabling ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		;Save the user home flags to P variables px52..x67
		;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
			MSR37,i913,P1455 MSR40,i913,P1456
		; if capture on flag, and flag high, then we need to disable limits
		if (P1439&2=2 and P1439&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1455=1 and i2023>0 and i2026<1)
			or (P1455=2 and i2023<0 and i2026>-1)
				i2024=i2024 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
		; if capture on flag, and flag high, then we need to disable limits
		if (P1440&2=2 and P1440&8=0)
			; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
			if (P1456=1 and i2123>0 and i2126<1)
			or (P1456=2 and i2123<0 and i2126>-1)
				i2124=i2124 | $20000
			else
				; if it isn't then set it into invalid error
				HomingStatus=StatusInvalid
			endif
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		MSW37,i912,P1439 MSW40,i912,P1440
		cmd "#20hm #21hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040&m2140=0) ; At least one motor should not be In Position
		and (m2042|m2142 = 0) ; Following error check
		and (m2030|m2130 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2042|m2142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2030|m2130 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Restore limits if needed ----
	;Restore the limit flags to P variables px68..x83
	i2024=P1471 i2124=P1472

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m2045&m2145=0)
		HomingStatus=StatusIncomplete
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PostHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePostHomeMove
		; Execute the move commands
		m2072=P1487 m2172=P1488
		cmd "#20J=* #21J=*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m2040&m2140=0) ; At least one motor should not be In Position
		and (m2042|m2142 = 0) ; Following error check
		and (m2030|m2130 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m2042|m2142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m2030|m2130 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m1742=0)
	cmd "#17J/"
endif
if (m1842=0)
	cmd "#18J/"
endif
if (m1942=0)
	cmd "#19J/"
endif
if (m2042=0)
	cmd "#20J/"
endif
if (m2142=0)
	cmd "#21J/"
endif
;Restore the high soft limits from P variables px04..x19
i1713=P1404 i1813=P1405 i1913=P1406 i2013=P1407 i2113=P1408
;Restore the low soft limits from P variables px20..x35
i1714=P1420 i1814=P1421 i1914=P1422 i2014=P1423 i2114=P1424
;Restore the home capture flags from P variables px36..x51
MSW32,i912,P1436 MSW33,i912,P1437 MSW36,i912,P1438 MSW37,i912,P1439 MSW40,i912,P1440
;Restore the limit flags to P variables px68..x83
i1724=P1468 i1824=P1469 i1924=P1470 i2024=P1471 i2124=P1472

DISABLE PLC14
CLOSE
