# coding: utf-8

"""
    Apollo OpenAPI

    Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from apollo_openapi.models.open_gray_release_rule_dto import OpenGrayReleaseRuleDTO

class TestOpenGrayReleaseRuleDTO(unittest.TestCase):
    """OpenGrayReleaseRuleDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenGrayReleaseRuleDTO:
        """Test OpenGrayReleaseRuleDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenGrayReleaseRuleDTO`
        """
        model = OpenGrayReleaseRuleDTO()
        if include_optional:
            return OpenGrayReleaseRuleDTO(
                data_change_created_by = '',
                data_change_last_modified_by = '',
                data_change_created_time = '',
                data_change_last_modified_time = '',
                app_id = '',
                cluster_name = '',
                namespace_name = '',
                branch_name = '',
                rule_items = [
                    apollo_openapi.models.open_gray_release_rule_item_dto.OpenGrayReleaseRuleItemDTO(
                        client_app_id = '', 
                        client_ip_list = [
                            ''
                            ], 
                        client_label_list = [
                            ''
                            ], )
                    ]
            )
        else:
            return OpenGrayReleaseRuleDTO(
        )
        """

    def testOpenGrayReleaseRuleDTO(self):
        """Test OpenGrayReleaseRuleDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
