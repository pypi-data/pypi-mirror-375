# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.4.4-5
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqRmDeviceActionSupportMetadataResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The response for device action support metadata
    """


    class MetaOapg:
        
        class properties:
            
            
            class action_supported_metadata(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqRmDeviceActionSupportMetadata']:
                        return XiqRmDeviceActionSupportMetadata
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqRmDeviceActionSupportMetadata'], typing.List['XiqRmDeviceActionSupportMetadata']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'action_supported_metadata':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqRmDeviceActionSupportMetadata':
                    return super().__getitem__(i)
            __annotations__ = {
                "action_supported_metadata": action_supported_metadata,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["action_supported_metadata"]) -> MetaOapg.properties.action_supported_metadata: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["action_supported_metadata", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["action_supported_metadata"]) -> typing.Union[MetaOapg.properties.action_supported_metadata, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["action_supported_metadata", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        action_supported_metadata: typing.Union[MetaOapg.properties.action_supported_metadata, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqRmDeviceActionSupportMetadataResponse':
        return super().__new__(
            cls,
            *_args,
            action_supported_metadata=action_supported_metadata,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_rm_device_action_support_metadata import XiqRmDeviceActionSupportMetadata
