//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/filectrl.h>
%End


//---------------------------------------------------------------------------

const int wxFC_DEFAULT_STYLE;
enum 
{
    wxFC_OPEN,
    wxFC_SAVE,
    wxFC_MULTIPLE,
    wxFC_NOSHOWHIDDEN
};

wxEventType wxEVT_FILECTRL_SELECTIONCHANGED   /PyName=wxEVT_FILECTRL_SELECTIONCHANGED/;

wxEventType wxEVT_FILECTRL_FILEACTIVATED   /PyName=wxEVT_FILECTRL_FILEACTIVATED/;

wxEventType wxEVT_FILECTRL_FOLDERCHANGED   /PyName=wxEVT_FILECTRL_FOLDERCHANGED/;

wxEventType wxEVT_FILECTRL_FILTERCHANGED   /PyName=wxEVT_FILECTRL_FILTERCHANGED/;

const char* wxFileCtrlNameStr;

class wxFileCtrl : wxControl
{
    %Docstring
        FileCtrl() -> None
        FileCtrl(parent, id=ID_ANY, defaultDirectory='', defaultFilename='', wildCard=FileSelectorDefaultWildcardStr, style=FC_DEFAULT_STYLE, pos=DefaultPosition, size=DefaultSize, name=FileCtrlNameStr) -> None
        
        This control allows the user to select a file.
    %End
    %TypeHeaderCode
        #include <wx/filectrl.h>
    %End

public:
    wxFileCtrl();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxFileCtrl(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxString & defaultDirectory = wxEmptyString,
        const wxString & defaultFilename = wxEmptyString,
        const wxString & wildCard = wxFileSelectorDefaultWildcardStr,
        long style = wxFC_DEFAULT_STYLE,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        const wxString & name = wxFileCtrlNameStr
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxString & defaultDirectory = wxEmptyString,
        const wxString & defaultFilename = wxEmptyString,
        const wxString & wildCard = wxFileSelectorDefaultWildcardStr,
        long style = wxFC_DEFAULT_STYLE,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        const wxString & name = wxFileCtrlNameStr
    );
    %Docstring
        Create(parent, id=ID_ANY, defaultDirectory='', defaultFilename='', wildCard=FileSelectorDefaultWildcardStr, style=FC_DEFAULT_STYLE, pos=DefaultPosition, size=DefaultSize, name=FileCtrlNameStr) -> bool
        
        Create function for two-step construction.
    %End

    wxString GetDirectory() const;
    %Docstring
        GetDirectory() -> str
        
        Returns the current directory of the file control (i.e. the directory
        shown by it).
    %End

    wxString GetFilename() const;
    %Docstring
        GetFilename() -> str
        
        Returns the currently selected filename.
    %End

    wxArrayString* GetFilenames()   /Factory/;
    %Docstring
        GetFilenames() -> List[str]
        
        Returns a list of filenames selected in the control.  This function
        should only be used with controls which have the wx.FC_MULTIPLE style,
        use GetFilename for the others.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxFileCtrl_GetFilenames(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxArrayString* _wxFileCtrl_GetFilenames(wxFileCtrl* self)
    {
        wxArrayString* arr = new wxArrayString;
        self->GetFilenames(*arr);
        return arr;
    }
    %End

    int GetFilterIndex() const;
    %Docstring
        GetFilterIndex() -> int
        
        Returns the zero-based index of the currently selected filter.
    %End

    wxString GetPath() const;
    %Docstring
        GetPath() -> str
        
        Returns the full path (directory and filename) of the currently
        selected file.
    %End

    wxArrayString* GetPaths()   /Factory/;
    %Docstring
        GetPaths() -> List[str]
        
        Returns a list of the full paths (directory and filename) of the files
        chosen. This function should only be used with controlss which have
        the wx.FC_MULTIPLE style, use GetPath for the others.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxFileCtrl_GetPaths(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxArrayString* _wxFileCtrl_GetPaths(wxFileCtrl* self)
    {
        wxArrayString* arr = new wxArrayString;
        self->GetPaths(*arr);
        return arr;
    }
    %End

    wxString GetWildcard() const;
    %Docstring
        GetWildcard() -> str
        
        Returns the current wildcard.
    %End

    bool SetDirectory(
        const wxString & directory
    );
    %Docstring
        SetDirectory(directory) -> bool
        
        Sets(changes) the current directory displayed in the control.
    %End

    bool SetFilename(
        const wxString & filename
    );
    %Docstring
        SetFilename(filename) -> bool
        
        Selects a certain file.
    %End

    bool SetPath(
        const wxString & path
    );
    %Docstring
        SetPath(path) -> bool
        
        Changes to a certain directory and selects a certain file.
    %End

    void SetFilterIndex(
        int filterIndex
    );
    %Docstring
        SetFilterIndex(filterIndex) -> None
        
        Sets the current filter index, starting from zero.
    %End

    void SetWildcard(
        const wxString & wildCard
    );
    %Docstring
        SetWildcard(wildCard) -> None
        
        Sets the wildcard, which can contain multiple file types, for example:
        "BMP files (*.bmp)|*.bmp|GIF files (*.gif)|*.gif".
    %End

    void ShowHidden(
        bool show
    );
    %Docstring
        ShowHidden(show) -> None
        
        Sets whether hidden files and folders are shown or not.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Directory, get=GetDirectory, set=SetDirectory)
    %Property(name=Filename, get=GetFilename, set=SetFilename)
    %Property(name=Filenames, get=GetFilenames)
    %Property(name=FilterIndex, get=GetFilterIndex, set=SetFilterIndex)
    %Property(name=Path, get=GetPath, set=SetPath)
    %Property(name=Paths, get=GetPaths)
    %Property(name=Wildcard, get=GetWildcard, set=SetWildcard)
};  // end of class wxFileCtrl


class wxFileCtrlEvent : wxCommandEvent
{
    %Docstring
        FileCtrlEvent(type, evtObject, id) -> None
        
        A file control event holds information about events associated with
        wxFileCtrl objects.
    %End
    %TypeHeaderCode
        #include <wx/filectrl.h>
    %End

public:
    wxFileCtrlEvent(
        wxEventType type,
        wxObject * evtObject,
        int id
    );

    wxString GetDirectory() const;
    %Docstring
        GetDirectory() -> str
        
        Returns the current directory.
    %End

    wxString GetFile() const;
    %Docstring
        GetFile() -> str
        
        Returns the file selected (assuming it is only one file).
    %End

    wxArrayString GetFiles() const;
    %Docstring
        GetFiles() -> List[str]
        
        Returns the files selected.
    %End

    int GetFilterIndex() const;
    %Docstring
        GetFilterIndex() -> int
        
        Returns the current file filter index.
    %End

    void SetFiles(
        const wxArrayString & files
    );
    %Docstring
        SetFiles(files) -> None
        
        Sets the files changed by this event.
    %End

    void SetDirectory(
        const wxString & directory
    );
    %Docstring
        SetDirectory(directory) -> None
        
        Sets the directory of this event.
    %End

    void SetFilterIndex(
        int index
    );
    %Docstring
        SetFilterIndex(index) -> None
        
        Sets the filter index changed by this event.
    %End

    public:
    virtual wxEvent* Clone() const /Factory/;


    private:
        wxFileCtrlEvent& operator=(const wxFileCtrlEvent&);


    public:


    %Property(name=Directory, get=GetDirectory, set=SetDirectory)
    %Property(name=File, get=GetFile)
    %Property(name=Files, get=GetFiles, set=SetFiles)
    %Property(name=FilterIndex, get=GetFilterIndex, set=SetFilterIndex)
};  // end of class wxFileCtrlEvent


%Extract(id=pycode_core)
EVT_FILECTRL_SELECTIONCHANGED = wx.PyEventBinder( wxEVT_FILECTRL_SELECTIONCHANGED, 1)
EVT_FILECTRL_FILEACTIVATED = wx.PyEventBinder( wxEVT_FILECTRL_FILEACTIVATED, 1)
EVT_FILECTRL_FOLDERCHANGED = wx.PyEventBinder( wxEVT_FILECTRL_FOLDERCHANGED, 1)
EVT_FILECTRL_FILTERCHANGED = wx.PyEventBinder( wxEVT_FILECTRL_FILTERCHANGED, 1)

%End


//---------------------------------------------------------------------------

