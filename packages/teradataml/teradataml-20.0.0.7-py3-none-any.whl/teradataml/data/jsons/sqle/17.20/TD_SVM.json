{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "TD_SVM",
  "function_version": "1.0",
  "function_type": "fastpath",
  "function_category": "Model Training",
  "function_alias_name": "TD_SVM",
  "function_r_name": "aa.td_svm",
  "short_description": "This function performs classification and regression analysis on data sets.",
  "long_description": "This function performs classification and regression analysis on data sets.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "inputtable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the table containing the input data.",
      "description": "Specifies the table containing the input data.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
    "output_tables": [
    {
      "isOutputTable": true,
      "omitPossible": false,
      "name": "MetaInformationTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table in which the training progress information per iteration is stored.",
      "description": "Specifies the name of the table in which the training progress information per iteration is stored.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "output.table",
      "useInR": true,
      "rOrderNum": 2
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "inputtable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": false,
      "name": "InputColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specify the names of the input table columns that need to be used for training the model (predictors, features or independent variables)",
      "description": "Specify the names of the input table columns that need to be used for training the model (predictors, features or independent variables)",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true,
      "rFormulaUsage": true,
      "rOrderNum": -1
    },
    {
      "targetTable": [
        "inputtable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": false,
      "name": "ResponseColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specify the name of the column that contains the class label for classification or target value (dependent variable) for regression.",
      "description": "Specify the name of the column that contains the class label for classification or target value (dependent variable) for regression.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "response.column",
      "useInR": true,
      "rFormulaUsage": true,
      "rOrderNum": 0
    },
    {
      "permittedValues": [
        "Regression",
        "Classification"
      ],
      "defaultValue": "Classification",
      "isOutputColumn": false,
      "name": "ModelType",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the type of the analysis. Acceptable values are Regression, Classification.",
      "description": "Specify the type of the analysis. Acceptable values are Regression, Classification.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "model.type",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "defaultValue": 300,
      "lowerBound": 1,
      "upperBound": 10000000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the maximum number of iterations (minibatches) over the training data batches. Value is a positive integer less than 10,000,000.",
      "description": "Specify the maximum number of iterations (minibatches) over the training data batches. Value is a positive integer less than 10,000,000.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "iter.max",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "defaultValue": 0.1,
      "lowerBound": 0,
      "upperBound": 1e7,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Epsilon",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the epsilon threshold for Regression (the value of epsilon for epsilon_insensitive loss). Any difference between the current prediction and the correct label is ignored within this threshold.",
      "description": "Specify the epsilon threshold for Regression (the value of epsilon for epsilon_insensitive loss). Any difference between the current prediction and the correct label is ignored within this threshold.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "epsilon",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": 10,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "BatchSize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the number of observations (training samples) processed in a single minibatch per AMP. A value of 0 or higher than the number of rows on an AMP processes all rows on the AMP, such that the entire dataset is processed in a single iteration, and the algorithm becomes Gradient Descent. Value is a positive integer.",
      "description": "Specify the number of observations (training samples) processed in a single minibatch per AMP. A value of 0 or higher than the number of rows on an AMP processes all rows on the AMP, such that the entire dataset is processed in a single iteration, and the algorithm becomes Gradient Descent. Value is a positive integer.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "batch.size",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": 0.02,
      "lowerBound": 0,
      "upperBound": 1e7,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "RegularizationLambda",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the amount of regularization to be added. The higher the value, the stronger the regularization. It is also used to compute the learning rate when the learning rate is set to ‘optimal’. Must be a non-negative float value. A value of 0 means no regularization.",
      "description": "Specify the amount of regularization to be added. The higher the value, the stronger the regularization. It is also used to compute the learning rate when the learning rate is set to ‘optimal’. Must be a non-negative float value. A value of 0 means no regularization.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "lambda1",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 0.15,
      "lowerBound": 0,
      "upperBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Alpha",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the Elasticnet parameter for penalty computation. It only becomes effective if RegularizationLambda > 0. The value represents the contribution ratio of L1 in the penalty. A value of 1.0 indicates L1 (LASSO) only, a value of 0 indicates L2 (Ridge) only, and a value in between is a combination of L1 and L2. Default: 0.15 (15% L1, 85% L2). Must be a float value between 0 and 1.",
      "description": "Specify the Elasticnet parameter for penalty computation. It only becomes effective if RegularizationLambda > 0. The value represents the contribution ratio of L1 in the penalty. A value of 1.0 indicates L1 (LASSO) only, a value of 0 indicates L2 (Ridge) only, and a value in between is a combination of L1 and L2. Default: 0.15 (15% L1, 85% L2). Must be a float value between 0 and 1.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "alpha",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 50,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "IterNumNoChange",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the number of iterations (minibatches) with no improvement in loss including the tolerance to stop training. A value of 0 indicates no early stopping and the algorithm continues until MaxIterNum iterations are reached. Value is a positive integer.",
      "description": "Specify the number of iterations (minibatches) with no improvement in loss including the tolerance to stop training. A value of 0 indicates no early stopping and the algorithm continues until MaxIterNum iterations are reached. Value is a positive integer.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "iter.num.no.change",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": 0.001,
      "lowerBound": 1e-7,
      "upperBound": 1e7,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Tolerance",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the stopping criteria in terms of loss function improvement. Applicable when IterNumNoChange is greater than 0. Value is a positive integer.",
      "description": "Specify the stopping criteria in terms of loss function improvement. Applicable when IterNumNoChange is greater than 0. Value is a positive integer.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "tolerance",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "defaultValue": true,
      "name": "Intercept",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify whether intercept should be estimated or not (based on whether data is already centered or not).",
      "description": "Specify whether intercept should be estimated or not (based on whether data is already centered or not).",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "intercept",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "defaultValue": "0:1.0, 1:1.0",
      "isOutputColumn": false,
      "name": "ClassWeights",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify weights associated with classes. Only applicable for Classification ModelType. The format is ‘0:weight,1:weight’. For example, ‘0:1.0,1:0.5’ will give twice the weight to each observation in class 0. If the weight of a class is omitted, it is assumed to be 1.0.",
      "description": "Specify weights associated with classes. Only applicable for Classification ModelType. The format is ‘0:weight,1:weight’. For example, ‘0:1.0,1:0.5’ will give twice the weight to each observation in class 0. If the weight of a class is omitted, it is assumed to be 1.0.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "class.weights",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "permittedValues": [
        "CONSTANT", 
        "OPTIMAL", 
        "INVTIME", 
        "ADAPTIVE"
      ],
      "isOutputColumn": false,
      "name": "LearningRate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the learning rate algorithm for SGD iterations.",
      "description": "Specify the learning rate algorithm for SGD iterations.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "learning.rate",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "defaultValue": 0.05,
      "lowerBound": 1e-7,
      "upperBound": 1e7,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "InitialEta",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the initial value of eta for the learning rate. For ‘constant’, this value is the learning rate for all iterations. ",
      "description": "Specify the initial value of eta for the learning rate. For ‘constant’, this value is the learning rate for all iterations. ",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "initial.eta",
      "useInR": true,
      "rOrderNum": 14
    },
    {
      "defaultValue": 0.25,
      "lowerBound": 1e-7,
      "upperBound": 1e7,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "DecayRate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the decay rate for the learning rate (invtime and adaptive).",
      "description": "Specify the decay rate for the learning rate (invtime and adaptive).",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "decay.rate",
      "useInR": true,
      "rOrderNum": 15
    },
    {
      "defaultValue": 5,
      "lowerBound": 1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "DecaySteps",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the number of iterations without decay for the adaptive learning rate. The learning rate changes by decay rate after this many iterations.",
      "description": "Specify the number of iterations without decay for the adaptive learning rate. The learning rate changes by decay rate after this many iterations.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "decay.steps",
      "useInR": true,
      "rOrderNum": 16
    },
    {
      "defaultValue": 0.0,
      "lowerBound": 0,
      "upperBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Momentum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the value to use for the momentum learning rate optimizer. Must be a non-negative float value between 0 and 1. A larger value indicates a higher momentum contribution. A value of 0 means the momentum optimizer is disabled.  For a good momentum contribution, a value between 0.6-0.95 is recommended.",
      "description": "Specify the value to use for the momentum learning rate optimizer. Must be a non-negative float value between 0 and 1. A larger value indicates a higher momentum contribution. A value of 0 means the momentum optimizer is disabled.  For a good momentum contribution, a value between 0.6-0.95 is recommended.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "momentum",
      "useInR": true,
      "rOrderNum": 17
    },
    {
      "defaultValue": false,
      "name": "Nesterov",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify whether Nesterov optimization should be applied to the momentum optimizer or not. Only applicable when momentum > 0.",
      "description": "Specify whether Nesterov optimization should be applied to the momentum optimizer or not. Only applicable when momentum > 0.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "nesterov",
      "useInR": true,
      "rOrderNum": 18
    },
    {
      "defaultValue": 0,
      "lowerBound": 0,
      "upperBound": 1e7,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "LocalSGDIterations",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify the number of local iterations to be used for Local SGD algorithm. Must be a positive integer value. A value of 0 implies Local SGD is disabled. A value higher than 0 enables Local SGD and that many local iterations are performed before updating the weights for the global model. With Local SGD algorithm, recommended values for arguments are as follows: LocalSGDIterations: 10, MaxIterNum: 100, BatchSize: 50, IterNumNoChange: 5.",
      "description": "Specify the number of local iterations to be used for Local SGD algorithm. Must be a positive integer value. A value of 0 implies Local SGD is disabled. A value higher than 0 enables Local SGD and that many local iterations are performed before updating the weights for the global model. With Local SGD algorithm, recommended values for arguments are as follows: LocalSGDIterations: 10, MaxIterNum: 100, BatchSize: 50, IterNumNoChange: 5.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "local.sgd.iterations",
      "useInR": true,
      "rOrderNum": 19
    }
  ]
}