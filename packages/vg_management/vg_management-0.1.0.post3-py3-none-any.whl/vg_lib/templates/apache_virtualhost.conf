{% if http %}

<VirtualHost *:80>

    ServerName {{ domain }}
{% if server_alias is defined %}
    ServerAlias {{ server_alias }}
{% endif %}

    DocumentRoot {{ virtualhosts_root }}/{{ username }}/www

{% if webmaster_email is defined %}
    ServerAdmin {{ webmaster_email }}
{% endif %}

    <Directory {{ virtualhosts_root }}/{{ username }}/www>
        Options FollowSymLinks
        AllowOverride None
        AllowOverrideList RewriteEngine RewriteRule RewriteCond AddOutputFilterByType ExpiresActive ExpiresByType ExpiresDefault Header mod_gzip_on mod_gzip_dechunk mod_gzip_item_include mod_gzip_item_exclude SetEnvIfNoCase RequestHeader ErrorDocument Redirect <IfModule <Else <ElseIf <Files <FilesMatch <If <IfDefine <IfDirective <IfFile <IfSection <IfVersion
        Require all granted
    </Directory>

    ErrorLog {{ virtualhosts_root }}/{{ username }}/logs/{{ domain }}-error.log
    LogLevel warn

    CustomLog {{ virtualhosts_root }}/{{ username }}/logs/{{ domain }}-access.log combined

#    ProxyPassMatch "^/(.*\.php(/.*)?)$" unix:/var/run/php-fpm-{{ username }}.sock|fcgi://./www


<IfModule proxy_fcgi_module>
    <IfModule setenvif_module>
    SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1
    </IfModule>

    <FilesMatch ".+\.ph(p[3457]?|t|tml)$">
        SetHandler proxy:unix:///var/run/php/php-fpm-{{ username }}.sock|fcgi://localhost
    </FilesMatch>

    <FilesMatch ".+\.phps$">
        Require all denied
    </FilesMatch>
    <FilesMatch "^\.ph(p[3457]?|t|tml|ps)$">
        Require all denied
    </FilesMatch>
</IfModule>



</VirtualHost>

{% endif %}

{% if https %}

<VirtualHost *:443>

    ServerName {{ domain }}
{% if server_alias is defined %}
    ServerAlias {{ server_alias }}
{% endif %}

    DocumentRoot {{ virtualhosts_root }}/{{ username }}/www

{% if webmaster_email is defined %}
    ServerAdmin {{ webmaster_email }}
{% endif %}

    <Directory {{ virtualhosts_root }}/{{ username }}/www>
        Options FollowSymlinks
        AllowOverride None
        AllowOverrideList RewriteEngine RewriteRule RewriteCond AddOutputFilterByType ExpiresActive ExpiresByType ExpiresDefault Header mod_gzip_on mod_gzip_dechunk mod_gzip_item_include mod_gzip_item_exclude SetEnvIfNoCase RequestHeader ErrorDocument Redirect <IfModule <Else <ElseIf <Files <FilesMatch <If <IfDefine <IfDirective <IfFile <IfSection <IfVersion
        Require all granted
    </Directory>

    ErrorLog {{ virtualhosts_root }}/{{ username }}/logs/{{ domain }}-error.log
    LogLevel warn

    CustomLog {{ virtualhosts_root }}/{{ username }}/logs/{{ domain }}-access.log combined

    # Deliberately not in an IfModule block - if for any reason we lose fastcgi we want the server to break
    # otherwise we risk serving our PHP code!

#    ProxyPassMatch "^/(.*\.php(/.*)?)$" unix:/var/run/php-fpm-{{ username }}.sock|fcgi://./www

<IfModule proxy_fcgi_module>
    <IfModule setenvif_module>
    SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1
    </IfModule>

    <FilesMatch ".+\.ph(p[3457]?|t|tml)$">
        SetHandler proxy:unix:///var/run/php/php-fpm-{{ username }}.sock|fcgi://localhost
    </FilesMatch>

    <FilesMatch ".+\.phps$">
        Require all denied
    </FilesMatch>
    <FilesMatch "^\.ph(p[3457]?|t|tml|ps)$">
        Require all denied
    </FilesMatch>
</IfModule>



{% if certificate_file is defined %}
    SSLCertificateFile {{ certificate_file }}
{% endif %}
{% if privkey_file is defined %}
    SSLCertificateKeyFile {{ privkey_file }}
{% endif %}
{% if ca_chain_file is defined %}
    SSLCertificateChainFile {{ ca_chain_file }}
{% endif %}

    SSLEngine on

    # The following SSL/TLS settings are recommended by Qualys, the recognised
    # SSL/TLS experts and authors of the Qualys SSL Server Test.
    # See https://community.qualys.com/thread/15679

    # If we have header rewriting add an HSTS header to force the browser
    # to require SSL long term and ensure cookies are secure.

    <IfModule mod_headers.c>
        Header always set Strict-Transport-Security: max-age=15768000
        # Always ensure Cookies have "Secure" set (JAH 2012/1)
        Header edit Set-Cookie (?i)^(.*)(;\s*secure)??((\s*;)?(.*)) "$1; Secure$3$4"
    </IfModule>

    # Thou shalt not use TLS compression - opens security vulnerabilities
    SSLCompression off

    # Require at least TLS v1.0
    SSLProtocol -ALL +TLSv1.1 +TLSv1.2 +TLSv1.3

    # Preferred cipher order - good security and works with most browsers
    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-SEED-SHA:DHE-RSA-CAMELLIA128-SHA:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:!aNULL:!eNULL:!EXPORT:!RC4:!MD5:!PSK

    # Ensure our preferred cipher order prevails
    SSLHonorCipherOrder on

    SSLOptions +StrictRequire

</VirtualHost>

{% endif %}
