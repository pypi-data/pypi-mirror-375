[project]
name = "crp"
description = "Tools for cropping images."
readme = "docs/index.md"
requires-python = ">=3.11,<4"
license = "MIT"
authors = [{ name = "Brendon Smith", email = "bws@bws.bio" }]
classifiers = [
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]
dependencies = ["click>=8,<9"]
dynamic = ["version"]

[project.scripts]
crp = "crp.main:cli"

[project.optional-dependencies]
checks = [
  "mypy==1.16.1",
  "ruff>=0.12,<0.13",
]
docs = [
  "mkdocs-material>=9,<10",
]
tests = [
  "coverage[toml]>=7.10,<8",
  "httpx>=0.23,<1",
  "pytest>=8.1.1,<9",
  "pytest-mock>=3,<4",
]

[build-system]
requires = ["hatchling>=1.26.3,<2"]
build-backend = "hatchling.build"

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:", "pragma: no cover"]
fail_under = 100
show_missing = true

[tool.coverage.run]
command_line = "-m pytest"
patch = ["subprocess"]
source_pkgs = ["crp", "tests"]

[tool.coverage.paths]
crp = ["src/crp"]
tests = ["tests"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/tests"]

[tool.hatch.build.targets.wheel]
packages = ["src/crp"]

[tool.hatch.envs.ci]
dev-mode = false
features = [
  "checks",
  "tests",
]

[tool.hatch.envs.default]
dev-mode = true
features = [
  "checks",
  "docs",
  "tests",
]

[tool.hatch.envs.default.scripts]
check = [
  "ruff check",
  "ruff format --check",
  "mypy",
  "npx -s -y prettier@'^3' . --check",
  "npx -s -y cspell --dot --gitignore *.md **/*.md",
]
format = [
  "ruff check --fix",
  "ruff format",
  "npx -s -y prettier@'^3' . --write",
]

[tool.hatch.version]
path = "src/crp/__init__.py"

[tool.mypy]
exclude_gitignore = true
files = ["**/*.py"]
strict = true

[tool.pytest.ini_options]
addopts = "-q"
markers = [
  "subprocess: test requires a subprocess (deselect with '-m \"not subprocess\"')",
]
minversion = "6.0"
testpaths = ["tests"]

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = ["I", "UP"]

[tool.ruff.lint.isort]
known-first-party = ["src", "tests"]
