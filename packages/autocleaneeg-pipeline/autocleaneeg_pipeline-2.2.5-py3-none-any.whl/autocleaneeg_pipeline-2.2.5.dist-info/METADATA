Metadata-Version: 2.4
Name: autocleaneeg-pipeline
Version: 2.2.5
Summary: A modular framework for automated EEG data processing, built on MNE-Python
Project-URL: Homepage, https://github.com/cincibrainlab/autoclean_pipeline
Project-URL: Repository, https://github.com/cincibrainlab/autoclean_pipeline
Project-URL: Documentation, https://cincibrainlab.github.io/autoclean_pipeline/
Project-URL: Issues, https://github.com/cincibrainlab/autoclean_pipeline/issues
Author-email: Ernest Pedapati <ernest.pedapati@cchmc.org>, Gavin Gammoh <gavin.gammoh@cchmc.org>
License: MIT License
        
        Copyright (c) 2024 Cincinnati Children's Hospital Medical Center
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
License-File: LICENSE
Keywords: bids,eeg,electrophysiology,mne-python,neuroscience,preprocessing,signal-processing
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Requires-Python: <3.14,>=3.10
Requires-Dist: auth0-python>=4.7.1
Requires-Dist: autoclean-eeg2source>=0.1.0
Requires-Dist: autoclean-icvision>=0.1.0
Requires-Dist: autoreject>=0.3.0
Requires-Dist: bctpy>=0.6.1
Requires-Dist: cryptography>=3.4.8
Requires-Dist: cython>=0.29.0
Requires-Dist: defusedxml
Requires-Dist: eeglabio>=0.0.3
Requires-Dist: fastparquet>=2024.11.0
Requires-Dist: fooof>=1.1.0
Requires-Dist: inquirer>=3.1.0
Requires-Dist: loguru>=0.6.0
Requires-Dist: matplotlib>=3.4.0
Requires-Dist: mkdocs
Requires-Dist: mkdocs-git-revision-date-localized-plugin
Requires-Dist: mkdocs-glightbox
Requires-Dist: mkdocs-material
Requires-Dist: mkdocstrings-python>=1.16.2
Requires-Dist: mkdocstrings>=0.20.0
Requires-Dist: mne-bids>=0.10
Requires-Dist: mne-connectivity>=0.7.0
Requires-Dist: mne-icalabel>=0.7.0
Requires-Dist: mne-qt-browser>=0.3.0
Requires-Dist: mne>=1.7.0
Requires-Dist: networkx>=3.4.2
Requires-Dist: nibabel>=5.3.2
Requires-Dist: numpy>=1.20.0
Requires-Dist: openai>=1.78.1
Requires-Dist: pandas>=1.3.0
Requires-Dist: platformdirs>=3.0.0
Requires-Dist: pybv>=0.6.0
Requires-Dist: pydantic>=2.0
Requires-Dist: pyjsonviewer>=0.1.0
Requires-Dist: pymupdf
Requires-Dist: pymupdf>=1.0.0
Requires-Dist: pyopengl-accelerate
Requires-Dist: pyprep>=0.3.0
Requires-Dist: pyqt5>=5.15.0
Requires-Dist: python-dotenv>=0.19.0
Requires-Dist: python-picard==0.8
Requires-Dist: python-ulid>=1.0.0
Requires-Dist: pyvistaqt>=0.11.2
Requires-Dist: pyyaml>=5.1
Requires-Dist: qtpy>=2.4.3
Requires-Dist: reportlab>=3.6.0
Requires-Dist: requests>=2.25.0
Requires-Dist: rich>=10.0.0
Requires-Dist: schema>=0.7.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: seaborn>=0.13.2
Requires-Dist: textual-dev>=0.11.0
Requires-Dist: textual>=0.11.0
Requires-Dist: torch>=1.9.0
Description-Content-Type: text/markdown

# AutoCleanEEG Pipeline

[![Python](https://img.shields.io/badge/python-3.10%2B-blue.svg)](https://www.python.org/downloads/)
[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

A modular framework for automated EEG data processing, built on MNE-Python.



## Features

- Framework for automated EEG preprocessing with "lego block" modularity
- Support for multiple EEG paradigms (ASSR, Chirp, MMN, Resting State) 
- BIDS-compatible data organization and comprehensive quality control
- Extensible plugin system for file formats, montages, and event processing
- Research-focused workflow: single file testing → parameter tuning → batch processing
- Detailed output: logs (stored in your AutoClean workspace), stage files, metadata, and quality control visualizations

## Installation (uv)

Use Astral's uv for fast, isolated installs. If you don't have uv yet, see https://docs.astral.sh/uv/

- Install CLI (recommended for users):

```bash
uv tool install autocleaneeg-pipeline
autocleaneeg-pipeline --help
```

- Upgrade or remove:

```bash
uv tool upgrade autocleaneeg-pipeline
uv tool uninstall autocleaneeg-pipeline
```

- Development install from source:

```bash
git clone https://github.com/cincibrainlab/autoclean_pipeline.git
cd autoclean_pipeline
uv venv && source .venv/bin/activate   # Windows: .venv\\Scripts\\activate
uv pip install -e .
# Optional extras
# uv pip install -e '.[gui]'   # GUI review tool dependencies
# uv pip install -e '.[docs]'  # Documentation tooling
```

## Quick Start

Process a file using a built-in task:

```bash
autocleaneeg-pipeline process RestingEyesOpen /path/to/data.raw
```

List tasks and show overrides:

```bash
autocleaneeg-pipeline list-tasks --overrides
```

## Theme and Color

AutoClean’s CLI uses Rich with semantic styles and adaptive themes for readable output across light/dark terminals, limited color depth, and colorless logs.

- Flag: `--theme auto|dark|light|hc|mono` (default: `auto`)
  - `mono`: Monochrome (no hues), ideal for logs or unknown backgrounds
  - `hc`: High-contrast, accessible on both dark and light backgrounds
- Env overrides:
  - `AUTOCLEAN_THEME=auto|dark|light|hc|mono`
  - `AUTOCLEAN_COLOR_DEPTH=auto|8|256|truecolor`
  - `NO_COLOR=1` disables color
  - `FORCE_COLOR=1` forces color even in non-TTY (e.g., CI)

Examples:

```bash
autocleaneeg-pipeline --theme light list-tasks
AUTOCLEAN_THEME=hc autocleaneeg-pipeline version
NO_COLOR=1 autocleaneeg-pipeline list-tasks
```

## Documentation

Full documentation is available at [https://cincibrainlab.github.io/autoclean_pipeline/](https://cincibrainlab.github.io/autoclean_pipeline/)

## Contributing

We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments

- Cincinnati Children's Hospital Research Foundation
- Built with [MNE-Python](https://mne.tools/)
