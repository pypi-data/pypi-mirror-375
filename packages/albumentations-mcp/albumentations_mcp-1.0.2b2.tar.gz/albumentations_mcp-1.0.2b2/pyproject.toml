[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "albumentations-mcp"
version = "1.0.2b2"
description = "MCP-compliant image augmentation server using Albumentations"
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [{ name = "Ramsi Kalia", email = "ramsi.kalia@gmail.com" }]
keywords = [
  "mcp",
  "mcp-server",
  "albumentations",
  "computer-vision",
  "image-augmentation",
  "data-augmentation",
  "semantic-augmentation",
  "vlm",
  "gemini",
  "google-genai",
  "image-generation",
  "image-editing",
  "ai",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
  "albumentations>=1.3.0",
  "opencv-python-headless>=4.8.0",
  "Pillow>=10.0.0",
  "numpy>=1.26.0",
  "pydantic>=2.0.0",
  "mcp[cli]>=1.12,<2",
  # Temporary compatibility cap: httpx_sse (via mcp) breaks on httpx >= 0.28
  "httpx<0.28",
  "pre-commit>=4.2.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "black>=23.0.0",
  "ruff>=0.1.0",
  "pre-commit>=3.0.0",
]

vlm = [
  "google-genai>=0.2.0",
]

[project.scripts]
albumentations-mcp = "albumentations_mcp.server:main"

[project.urls]
Homepage = "https://github.com/ramsi-k/albumentations-mcp"
Repository = "https://github.com/ramsi-k/albumentations-mcp"
Issues = "https://github.com/ramsi-k/albumentations-mcp/issues"

[tool.ruff]
line-length = 88
target-version = "py312"
extend-exclude = ["dist", "build", ".venv", "outputs", "examples/outputs_example"]

[tool.ruff.lint]
# Keep linting focused and low-noise on src/examples
select = ["E","F","I","B","UP"]
# Make Ruff play nice with Black and reduce noise
ignore = ["E501", "COM812"]

# Keep tests lighter: allow magic numbers, local imports, and TRY003
per-file-ignores = { "tests/**/*" = ["PLR2004", "TRY003", "PLC0415"] }

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
warn_return_any = false
warn_unused_configs = true
check_untyped_defs = false
disallow_untyped_defs = false

[dependency-groups]
dev = [
    "psutil>=7.0.0",
    "ruff>=0.12.7",
    "twine>=6.1.0",
]

# Ensure PEP 561 type information is included in wheels
[tool.hatch.build.targets.wheel]
packages = ["src/albumentations_mcp"]

[tool.hatch.build.targets.wheel.force-include]
"src/albumentations_mcp/py.typed" = "albumentations_mcp/py.typed"

[tool.hatch.build.targets.sdist]
include = [
  "src/**",
  "README.md",
  "LICENSE",
  "pyproject.toml",
]
