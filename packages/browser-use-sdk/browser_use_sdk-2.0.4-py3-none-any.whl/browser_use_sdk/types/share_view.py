# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class ShareView(UncheckedBaseModel):
    """
    View model for representing a public share of a session.
    """

    share_token: typing_extensions.Annotated[str, FieldMetadata(alias="shareToken")] = pydantic.Field()
    """
    Token to access the public share
    """

    share_url: typing_extensions.Annotated[str, FieldMetadata(alias="shareUrl")] = pydantic.Field()
    """
    URL to access the public share
    """

    view_count: typing_extensions.Annotated[int, FieldMetadata(alias="viewCount")] = pydantic.Field()
    """
    Number of times the public share has been viewed
    """

    last_viewed_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastViewedAt")] = (
        pydantic.Field(default=None)
    )
    """
    Timestamp of the last time the public share was viewed (None if never viewed)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
