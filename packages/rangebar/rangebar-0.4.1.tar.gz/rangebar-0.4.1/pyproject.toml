[project]
name = "rangebar"
version = "0.4.1"
description = "Non-lookahead bias range bar construction with aligned JSON/Arrow formats for seamless integration"
readme = "README.md"
authors = [
    {name = "Terry Li", email = "terry@eonlabs.com"}
]
license = {text = "MIT"}
requires-python = ">=3.13"
keywords = ["binance", "range-bars", "trading", "cryptocurrency", "futures", "technical-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "numpy>=2.3.0",
    "pandas>=2.3.0", 
    "pyarrow>=21.0.0",
    "httpx>=0.28.0",
    "platformdirs>=4.4.0",
    "binance-historical-data>=0.1.14",
    "click>=8.2.1",
]

[project.urls]
"Homepage" = "https://github.com/Eon-Labs/rangebar"
"Repository" = "https://github.com/Eon-Labs/rangebar"
"Issues" = "https://github.com/Eon-Labs/rangebar/issues"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "hypothesis>=6.0.0",
    "pytest-benchmark>=4.0.0",
]
rust = [
    "maturin>=1.0.0",
]

[build-system]  
requires = ["maturin>=1.9,<2.0"]
build-backend = "maturin"

[tool.maturin]
features = ["pyo3/extension-module"]
module-name = "rangebar._rangebar_rust"
python-source = "src"

[project.scripts]
rangebar = "rangebar.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src/rangebar"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

[dependency-groups]
dev = [
    "maturin>=1.9.4",
    "pytest>=8.4.2",
]
