"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ProgressState:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ProgressStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProgressState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PROGRESS_STATE_UNSPECIFIED: ProgressState.ValueType = ...  # 0
    """default value used in messages"""

    PROGRESS_STATE_WAITING: ProgressState.ValueType = ...  # 1
    """simulation has been queued but not started"""

    PROGRESS_STATE_EXECUTING: ProgressState.ValueType = ...  # 2
    """simulation is running"""

    PROGRESS_STATE_COMPLETED: ProgressState.ValueType = ...  # 3
    """simulation has completed successfully"""

    PROGRESS_STATE_ERROR: ProgressState.ValueType = ...  # 4
    """simulation has failed"""

    PROGRESS_STATE_NEW: ProgressState.ValueType = ...  # 5
    """simulation has been created but not queued to run"""

    PROGRESS_STATE_CANCELLED: ProgressState.ValueType = ...  # 6
    """simulation has been cancelled"""

    PROGRESS_STATE_WARNING: ProgressState.ValueType = ...  # 7
    """simulation has completed with warnings"""

class ProgressState(_ProgressState, metaclass=_ProgressStateEnumTypeWrapper):
    pass

PROGRESS_STATE_UNSPECIFIED: ProgressState.ValueType = ...  # 0
"""default value used in messages"""

PROGRESS_STATE_WAITING: ProgressState.ValueType = ...  # 1
"""simulation has been queued but not started"""

PROGRESS_STATE_EXECUTING: ProgressState.ValueType = ...  # 2
"""simulation is running"""

PROGRESS_STATE_COMPLETED: ProgressState.ValueType = ...  # 3
"""simulation has completed successfully"""

PROGRESS_STATE_ERROR: ProgressState.ValueType = ...  # 4
"""simulation has failed"""

PROGRESS_STATE_NEW: ProgressState.ValueType = ...  # 5
"""simulation has been created but not queued to run"""

PROGRESS_STATE_CANCELLED: ProgressState.ValueType = ...  # 6
"""simulation has been cancelled"""

PROGRESS_STATE_WARNING: ProgressState.ValueType = ...  # 7
"""simulation has completed with warnings"""

global___ProgressState = ProgressState


class _BuildFileMachineType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _BuildFileMachineTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_BuildFileMachineType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    BUILD_FILE_MACHINE_TYPE_NONE: BuildFileMachineType.ValueType = ...  # 0
    BUILD_FILE_MACHINE_TYPE_AI: BuildFileMachineType.ValueType = ...  # 1
    BUILD_FILE_MACHINE_TYPE_SLM: BuildFileMachineType.ValueType = ...  # 2
    BUILD_FILE_MACHINE_TYPE_RENISHAW: BuildFileMachineType.ValueType = ...  # 3
    BUILD_FILE_MACHINE_TYPE_EOS: BuildFileMachineType.ValueType = ...  # 4
    BUILD_FILE_MACHINE_TYPE_TRUMPF: BuildFileMachineType.ValueType = ...  # 5
    BUILD_FILE_MACHINE_TYPE_HB3D: BuildFileMachineType.ValueType = ...  # 6
    BUILD_FILE_MACHINE_TYPE_SISMA: BuildFileMachineType.ValueType = ...  # 7
class BuildFileMachineType(_BuildFileMachineType, metaclass=_BuildFileMachineTypeEnumTypeWrapper):
    pass

BUILD_FILE_MACHINE_TYPE_NONE: BuildFileMachineType.ValueType = ...  # 0
BUILD_FILE_MACHINE_TYPE_AI: BuildFileMachineType.ValueType = ...  # 1
BUILD_FILE_MACHINE_TYPE_SLM: BuildFileMachineType.ValueType = ...  # 2
BUILD_FILE_MACHINE_TYPE_RENISHAW: BuildFileMachineType.ValueType = ...  # 3
BUILD_FILE_MACHINE_TYPE_EOS: BuildFileMachineType.ValueType = ...  # 4
BUILD_FILE_MACHINE_TYPE_TRUMPF: BuildFileMachineType.ValueType = ...  # 5
BUILD_FILE_MACHINE_TYPE_HB3D: BuildFileMachineType.ValueType = ...  # 6
BUILD_FILE_MACHINE_TYPE_SISMA: BuildFileMachineType.ValueType = ...  # 7
global___BuildFileMachineType = BuildFileMachineType


class _ThermalSolveType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ThermalSolveTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ThermalSolveType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    THERMAL_SOLVE_TYPE_UNSPECIFIED: ThermalSolveType.ValueType = ...  # 0
    """default value used in messages"""

    THERMAL_SOLVE_TYPE_SCAN_PATTERN: ThermalSolveType.ValueType = ...  # 1
class ThermalSolveType(_ThermalSolveType, metaclass=_ThermalSolveTypeEnumTypeWrapper):
    pass

THERMAL_SOLVE_TYPE_UNSPECIFIED: ThermalSolveType.ValueType = ...  # 0
"""default value used in messages"""

THERMAL_SOLVE_TYPE_SCAN_PATTERN: ThermalSolveType.ValueType = ...  # 1
global___ThermalSolveType = ThermalSolveType


class _HeatSourceModelType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _HeatSourceModelTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HeatSourceModelType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    HEAT_SOURCE_MODEL_GAUSSIAN: HeatSourceModelType.ValueType = ...  # 0
    HEAT_SOURCE_MODEL_RING: HeatSourceModelType.ValueType = ...  # 1
class HeatSourceModelType(_HeatSourceModelType, metaclass=_HeatSourceModelTypeEnumTypeWrapper):
    pass

HEAT_SOURCE_MODEL_GAUSSIAN: HeatSourceModelType.ValueType = ...  # 0
HEAT_SOURCE_MODEL_RING: HeatSourceModelType.ValueType = ...  # 1
global___HeatSourceModelType = HeatSourceModelType


class _RingModeIndex:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _RingModeIndexEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RingModeIndex.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    RING_MODE_INDEX_00: RingModeIndex.ValueType = ...  # 0
    RING_MODE_INDEX_01: RingModeIndex.ValueType = ...  # 1
    RING_MODE_INDEX_02: RingModeIndex.ValueType = ...  # 2
    RING_MODE_INDEX_03: RingModeIndex.ValueType = ...  # 3
    RING_MODE_INDEX_04: RingModeIndex.ValueType = ...  # 4
    RING_MODE_INDEX_05: RingModeIndex.ValueType = ...  # 5
    RING_MODE_INDEX_06: RingModeIndex.ValueType = ...  # 6
class RingModeIndex(_RingModeIndex, metaclass=_RingModeIndexEnumTypeWrapper):
    pass

RING_MODE_INDEX_00: RingModeIndex.ValueType = ...  # 0
RING_MODE_INDEX_01: RingModeIndex.ValueType = ...  # 1
RING_MODE_INDEX_02: RingModeIndex.ValueType = ...  # 2
RING_MODE_INDEX_03: RingModeIndex.ValueType = ...  # 3
RING_MODE_INDEX_04: RingModeIndex.ValueType = ...  # 4
RING_MODE_INDEX_05: RingModeIndex.ValueType = ...  # 5
RING_MODE_INDEX_06: RingModeIndex.ValueType = ...  # 6
global___RingModeIndex = RingModeIndex


class MachineSettings(google.protobuf.message.Message):
    """All units are assumed to be SI unless otherwise noted

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LASER_POWER_FIELD_NUMBER: builtins.int
    SCAN_SPEED_FIELD_NUMBER: builtins.int
    HEATER_TEMPERATURE_FIELD_NUMBER: builtins.int
    LAYER_THICKNESS_FIELD_NUMBER: builtins.int
    BEAM_DIAMETER_FIELD_NUMBER: builtins.int
    STARTING_LAYER_ANGLE_FIELD_NUMBER: builtins.int
    LAYER_ROTATION_ANGLE_FIELD_NUMBER: builtins.int
    HATCH_SPACING_FIELD_NUMBER: builtins.int
    SLICING_STRIPE_WIDTH_FIELD_NUMBER: builtins.int
    HEAT_SOURCE_MODEL_FIELD_NUMBER: builtins.int
    RING_MODE_INDEX_FIELD_NUMBER: builtins.int
    laser_power: builtins.float = ...
    scan_speed: builtins.float = ...
    heater_temperature: builtins.float = ...
    layer_thickness: builtins.float = ...
    beam_diameter: builtins.float = ...
    starting_layer_angle: builtins.float = ...
    layer_rotation_angle: builtins.float = ...
    hatch_spacing: builtins.float = ...
    slicing_stripe_width: builtins.float = ...
    heat_source_model: global___HeatSourceModelType.ValueType = ...
    ring_mode_index: global___RingModeIndex.ValueType = ...
    def __init__(self,
        *,
        laser_power : builtins.float = ...,
        scan_speed : builtins.float = ...,
        heater_temperature : builtins.float = ...,
        layer_thickness : builtins.float = ...,
        beam_diameter : builtins.float = ...,
        starting_layer_angle : builtins.float = ...,
        layer_rotation_angle : builtins.float = ...,
        hatch_spacing : builtins.float = ...,
        slicing_stripe_width : builtins.float = ...,
        heat_source_model : global___HeatSourceModelType.ValueType = ...,
        ring_mode_index : global___RingModeIndex.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["beam_diameter",b"beam_diameter","hatch_spacing",b"hatch_spacing","heat_source_model",b"heat_source_model","heater_temperature",b"heater_temperature","laser_power",b"laser_power","layer_rotation_angle",b"layer_rotation_angle","layer_thickness",b"layer_thickness","ring_mode_index",b"ring_mode_index","scan_speed",b"scan_speed","slicing_stripe_width",b"slicing_stripe_width","starting_layer_angle",b"starting_layer_angle"]) -> None: ...
global___MachineSettings = MachineSettings

class MeltPoolTimeStep(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LASER_X_FIELD_NUMBER: builtins.int
    LASER_Y_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    REFERENCE_WIDTH_FIELD_NUMBER: builtins.int
    DEPTH_FIELD_NUMBER: builtins.int
    REFERENCE_DEPTH_FIELD_NUMBER: builtins.int
    laser_x: builtins.float = ...
    laser_y: builtins.float = ...
    length: builtins.float = ...
    width: builtins.float = ...
    reference_width: builtins.float = ...
    depth: builtins.float = ...
    reference_depth: builtins.float = ...
    def __init__(self,
        *,
        laser_x : builtins.float = ...,
        laser_y : builtins.float = ...,
        length : builtins.float = ...,
        width : builtins.float = ...,
        reference_width : builtins.float = ...,
        depth : builtins.float = ...,
        reference_depth : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["depth",b"depth","laser_x",b"laser_x","laser_y",b"laser_y","length",b"length","reference_depth",b"reference_depth","reference_width",b"reference_width","width",b"width"]) -> None: ...
global___MeltPoolTimeStep = MeltPoolTimeStep

class MeltPool(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIME_STEPS_FIELD_NUMBER: builtins.int
    THERMAL_HISTORY_VTK_ZIP_FIELD_NUMBER: builtins.int
    @property
    def time_steps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MeltPoolTimeStep]: ...
    thermal_history_vtk_zip: typing.Text = ...
    def __init__(self,
        *,
        time_steps : typing.Optional[typing.Iterable[global___MeltPoolTimeStep]] = ...,
        thermal_history_vtk_zip : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["thermal_history_vtk_zip",b"thermal_history_vtk_zip","time_steps",b"time_steps"]) -> None: ...
global___MeltPool = MeltPool

class AdditiveMaterial(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HARDENING_FACTOR_FIELD_NUMBER: builtins.int
    STRAIN_SCALING_FACTOR_FIELD_NUMBER: builtins.int
    SUPPORT_YIELD_STRENGTH_RATIO_FIELD_NUMBER: builtins.int
    POISSON_RATIO_FIELD_NUMBER: builtins.int
    ELASTIC_MODULUS_FIELD_NUMBER: builtins.int
    MATERIAL_YIELD_STRENGTH_FIELD_NUMBER: builtins.int
    ANISOTROPIC_STRAIN_COEFFICIENT_PARALLEL_FIELD_NUMBER: builtins.int
    ANISOTROPIC_STRAIN_COEFFICIENT_PERPENDICULAR_FIELD_NUMBER: builtins.int
    ANISOTROPIC_STRAIN_COEFFICIENT_Z_FIELD_NUMBER: builtins.int
    ABSORPTIVITY_SOLID_COEFFICIENT_A_FIELD_NUMBER: builtins.int
    ABSORPTIVITY_SOLID_COEFFICIENT_B_FIELD_NUMBER: builtins.int
    ABSORPTIVITY_POWDER_COEFFICIENT_A_FIELD_NUMBER: builtins.int
    ABSORPTIVITY_POWDER_COEFFICIENT_B_FIELD_NUMBER: builtins.int
    ABSORPTIVITY_MINIMUM_FIELD_NUMBER: builtins.int
    ABSORPTIVITY_MAXIMUM_FIELD_NUMBER: builtins.int
    PENETRATION_DEPTH_SOLID_COEFFICIENT_A_FIELD_NUMBER: builtins.int
    PENETRATION_DEPTH_SOLID_COEFFICIENT_B_FIELD_NUMBER: builtins.int
    PENETRATION_DEPTH_POWDER_COEFFICIENT_A_FIELD_NUMBER: builtins.int
    PENETRATION_DEPTH_POWDER_COEFFICIENT_B_FIELD_NUMBER: builtins.int
    PENETRATION_DEPTH_MINIMUM_FIELD_NUMBER: builtins.int
    PENETRATION_DEPTH_MAXIMUM_FIELD_NUMBER: builtins.int
    POWDER_PACKING_DENSITY_FIELD_NUMBER: builtins.int
    VAPORIZATION_TEMPERATURE_FIELD_NUMBER: builtins.int
    LIQUIDUS_TEMPERATURE_FIELD_NUMBER: builtins.int
    SOLIDUS_TEMPERATURE_FIELD_NUMBER: builtins.int
    THERMAL_EXPANSION_COEFFICIENT_FIELD_NUMBER: builtins.int
    PURGING_GAS_CONVECTION_COEFFICIENT_FIELD_NUMBER: builtins.int
    SOLID_DENSITY_AT_ROOM_TEMPERATURE_FIELD_NUMBER: builtins.int
    SOLID_SPECIFIC_HEAT_AT_ROOM_TEMPERATURE_FIELD_NUMBER: builtins.int
    SOLID_THERMAL_CONDUCTIVITY_AT_ROOM_TEMPERATURE_FIELD_NUMBER: builtins.int
    NUCLEATION_CONSTANT_BULK_FIELD_NUMBER: builtins.int
    NUCLEATION_CONSTANT_INTERFACE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    THERMAL_PROPERTIES_DATA_POINTS_FIELD_NUMBER: builtins.int
    CHARACTERISTIC_WIDTH_DATA_POINTS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    COOLING_RATE_SIM_COEFF_A_FIELD_NUMBER: builtins.int
    COOLING_RATE_SIM_COEFF_B_FIELD_NUMBER: builtins.int
    hardening_factor: builtins.float = ...
    strain_scaling_factor: builtins.float = ...
    support_yield_strength_ratio: builtins.float = ...
    poisson_ratio: builtins.float = ...
    elastic_modulus: builtins.float = ...
    material_yield_strength: builtins.float = ...
    anisotropic_strain_coefficient_parallel: builtins.float = ...
    anisotropic_strain_coefficient_perpendicular: builtins.float = ...
    anisotropic_strain_coefficient_z: builtins.float = ...
    absorptivity_solid_coefficient_a: builtins.float = ...
    absorptivity_solid_coefficient_b: builtins.float = ...
    absorptivity_powder_coefficient_a: builtins.float = ...
    absorptivity_powder_coefficient_b: builtins.float = ...
    absorptivity_minimum: builtins.float = ...
    absorptivity_maximum: builtins.float = ...
    penetration_depth_solid_coefficient_a: builtins.float = ...
    penetration_depth_solid_coefficient_b: builtins.float = ...
    penetration_depth_powder_coefficient_a: builtins.float = ...
    penetration_depth_powder_coefficient_b: builtins.float = ...
    penetration_depth_minimum: builtins.float = ...
    penetration_depth_maximum: builtins.float = ...
    powder_packing_density: builtins.float = ...
    vaporization_temperature: builtins.float = ...
    liquidus_temperature: builtins.float = ...
    solidus_temperature: builtins.float = ...
    thermal_expansion_coefficient: builtins.float = ...
    purging_gas_convection_coefficient: builtins.float = ...
    solid_density_at_room_temperature: builtins.float = ...
    solid_specific_heat_at_room_temperature: builtins.float = ...
    solid_thermal_conductivity_at_room_temperature: builtins.float = ...
    nucleation_constant_bulk: builtins.float = ...
    nucleation_constant_interface: builtins.float = ...
    name: typing.Text = ...
    @property
    def thermal_properties_data_points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ThermalPropertiesDataPoint]: ...
    @property
    def characteristic_width_data_points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CharacteristicWidthDataPoint]: ...
    description: typing.Text = ...
    cooling_rate_sim_coeff_a: builtins.float = ...
    cooling_rate_sim_coeff_b: builtins.float = ...
    def __init__(self,
        *,
        hardening_factor : builtins.float = ...,
        strain_scaling_factor : builtins.float = ...,
        support_yield_strength_ratio : builtins.float = ...,
        poisson_ratio : builtins.float = ...,
        elastic_modulus : builtins.float = ...,
        material_yield_strength : builtins.float = ...,
        anisotropic_strain_coefficient_parallel : builtins.float = ...,
        anisotropic_strain_coefficient_perpendicular : builtins.float = ...,
        anisotropic_strain_coefficient_z : builtins.float = ...,
        absorptivity_solid_coefficient_a : builtins.float = ...,
        absorptivity_solid_coefficient_b : builtins.float = ...,
        absorptivity_powder_coefficient_a : builtins.float = ...,
        absorptivity_powder_coefficient_b : builtins.float = ...,
        absorptivity_minimum : builtins.float = ...,
        absorptivity_maximum : builtins.float = ...,
        penetration_depth_solid_coefficient_a : builtins.float = ...,
        penetration_depth_solid_coefficient_b : builtins.float = ...,
        penetration_depth_powder_coefficient_a : builtins.float = ...,
        penetration_depth_powder_coefficient_b : builtins.float = ...,
        penetration_depth_minimum : builtins.float = ...,
        penetration_depth_maximum : builtins.float = ...,
        powder_packing_density : builtins.float = ...,
        vaporization_temperature : builtins.float = ...,
        liquidus_temperature : builtins.float = ...,
        solidus_temperature : builtins.float = ...,
        thermal_expansion_coefficient : builtins.float = ...,
        purging_gas_convection_coefficient : builtins.float = ...,
        solid_density_at_room_temperature : builtins.float = ...,
        solid_specific_heat_at_room_temperature : builtins.float = ...,
        solid_thermal_conductivity_at_room_temperature : builtins.float = ...,
        nucleation_constant_bulk : builtins.float = ...,
        nucleation_constant_interface : builtins.float = ...,
        name : typing.Text = ...,
        thermal_properties_data_points : typing.Optional[typing.Iterable[global___ThermalPropertiesDataPoint]] = ...,
        characteristic_width_data_points : typing.Optional[typing.Iterable[global___CharacteristicWidthDataPoint]] = ...,
        description : typing.Text = ...,
        cooling_rate_sim_coeff_a : builtins.float = ...,
        cooling_rate_sim_coeff_b : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["absorptivity_maximum",b"absorptivity_maximum","absorptivity_minimum",b"absorptivity_minimum","absorptivity_powder_coefficient_a",b"absorptivity_powder_coefficient_a","absorptivity_powder_coefficient_b",b"absorptivity_powder_coefficient_b","absorptivity_solid_coefficient_a",b"absorptivity_solid_coefficient_a","absorptivity_solid_coefficient_b",b"absorptivity_solid_coefficient_b","anisotropic_strain_coefficient_parallel",b"anisotropic_strain_coefficient_parallel","anisotropic_strain_coefficient_perpendicular",b"anisotropic_strain_coefficient_perpendicular","anisotropic_strain_coefficient_z",b"anisotropic_strain_coefficient_z","characteristic_width_data_points",b"characteristic_width_data_points","cooling_rate_sim_coeff_a",b"cooling_rate_sim_coeff_a","cooling_rate_sim_coeff_b",b"cooling_rate_sim_coeff_b","description",b"description","elastic_modulus",b"elastic_modulus","hardening_factor",b"hardening_factor","liquidus_temperature",b"liquidus_temperature","material_yield_strength",b"material_yield_strength","name",b"name","nucleation_constant_bulk",b"nucleation_constant_bulk","nucleation_constant_interface",b"nucleation_constant_interface","penetration_depth_maximum",b"penetration_depth_maximum","penetration_depth_minimum",b"penetration_depth_minimum","penetration_depth_powder_coefficient_a",b"penetration_depth_powder_coefficient_a","penetration_depth_powder_coefficient_b",b"penetration_depth_powder_coefficient_b","penetration_depth_solid_coefficient_a",b"penetration_depth_solid_coefficient_a","penetration_depth_solid_coefficient_b",b"penetration_depth_solid_coefficient_b","poisson_ratio",b"poisson_ratio","powder_packing_density",b"powder_packing_density","purging_gas_convection_coefficient",b"purging_gas_convection_coefficient","solid_density_at_room_temperature",b"solid_density_at_room_temperature","solid_specific_heat_at_room_temperature",b"solid_specific_heat_at_room_temperature","solid_thermal_conductivity_at_room_temperature",b"solid_thermal_conductivity_at_room_temperature","solidus_temperature",b"solidus_temperature","strain_scaling_factor",b"strain_scaling_factor","support_yield_strength_ratio",b"support_yield_strength_ratio","thermal_expansion_coefficient",b"thermal_expansion_coefficient","thermal_properties_data_points",b"thermal_properties_data_points","vaporization_temperature",b"vaporization_temperature"]) -> None: ...
global___AdditiveMaterial = AdditiveMaterial

class CharacteristicWidthDataPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SCAN_SPEED_FIELD_NUMBER: builtins.int
    LASER_POWER_FIELD_NUMBER: builtins.int
    CHARACTERISTIC_WIDTH_FIELD_NUMBER: builtins.int
    scan_speed: builtins.float = ...
    laser_power: builtins.float = ...
    characteristic_width: builtins.float = ...
    def __init__(self,
        *,
        scan_speed : builtins.float = ...,
        laser_power : builtins.float = ...,
        characteristic_width : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["characteristic_width",b"characteristic_width","laser_power",b"laser_power","scan_speed",b"scan_speed"]) -> None: ...
global___CharacteristicWidthDataPoint = CharacteristicWidthDataPoint

class ThermalPropertiesDataPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEMPERATURE_FIELD_NUMBER: builtins.int
    THERMAL_CONDUCTIVITY_FIELD_NUMBER: builtins.int
    SPECIFIC_HEAT_FIELD_NUMBER: builtins.int
    DENSITY_FIELD_NUMBER: builtins.int
    THERMAL_CONDUCTIVITY_RATIO_FIELD_NUMBER: builtins.int
    DENSITY_RATIO_FIELD_NUMBER: builtins.int
    SPECIFIC_HEAT_RATIO_FIELD_NUMBER: builtins.int
    temperature: builtins.float = ...
    thermal_conductivity: builtins.float = ...
    specific_heat: builtins.float = ...
    density: builtins.float = ...
    thermal_conductivity_ratio: builtins.float = ...
    density_ratio: builtins.float = ...
    specific_heat_ratio: builtins.float = ...
    def __init__(self,
        *,
        temperature : builtins.float = ...,
        thermal_conductivity : builtins.float = ...,
        specific_heat : builtins.float = ...,
        density : builtins.float = ...,
        thermal_conductivity_ratio : builtins.float = ...,
        density_ratio : builtins.float = ...,
        specific_heat_ratio : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["density",b"density","density_ratio",b"density_ratio","specific_heat",b"specific_heat","specific_heat_ratio",b"specific_heat_ratio","temperature",b"temperature","thermal_conductivity",b"thermal_conductivity","thermal_conductivity_ratio",b"thermal_conductivity_ratio"]) -> None: ...
global___ThermalPropertiesDataPoint = ThermalPropertiesDataPoint

class Progress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATE_FIELD_NUMBER: builtins.int
    PERCENT_COMPLETE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    state: global___ProgressState.ValueType = ...
    percent_complete: builtins.int = ...
    """0 - 100"""

    message: typing.Text = ...
    context: typing.Text = ...
    def __init__(self,
        *,
        state : global___ProgressState.ValueType = ...,
        percent_complete : builtins.int = ...,
        message : typing.Text = ...,
        context : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["context",b"context","message",b"message","percent_complete",b"percent_complete","state",b"state"]) -> None: ...
global___Progress = Progress

class Range(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MIN_FIELD_NUMBER: builtins.int
    MAX_FIELD_NUMBER: builtins.int
    min: builtins.float = ...
    max: builtins.float = ...
    def __init__(self,
        *,
        min : builtins.float = ...,
        max : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max",b"max","min",b"min"]) -> None: ...
global___Range = Range

class CoaxialAverageSensorInputs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENSOR_RADIUS_FIELD_NUMBER: builtins.int
    Z_HEIGHTS_FIELD_NUMBER: builtins.int
    sensor_radius: builtins.float = ...
    @property
    def z_heights(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Range]: ...
    def __init__(self,
        *,
        sensor_radius : builtins.float = ...,
        z_heights : typing.Optional[typing.Iterable[global___Range]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sensor_radius",b"sensor_radius","z_heights",b"z_heights"]) -> None: ...
global___CoaxialAverageSensorInputs = CoaxialAverageSensorInputs

class BuildFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    type: global___BuildFileMachineType.ValueType = ...
    name: typing.Text = ...
    def __init__(self,
        *,
        type : global___BuildFileMachineType.ValueType = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","type",b"type"]) -> None: ...
global___BuildFile = BuildFile

class StlFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___StlFile = StlFile

class SingleBeadInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BEAD_LENGTH_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    OUTPUT_THERMAL_HISTORY_FIELD_NUMBER: builtins.int
    THERMAL_HISTORY_INTERVAL_FIELD_NUMBER: builtins.int
    bead_length: builtins.float = ...
    @property
    def machine(self) -> global___MachineSettings: ...
    @property
    def material(self) -> global___AdditiveMaterial: ...
    output_thermal_history: builtins.bool = ...
    thermal_history_interval: builtins.int = ...
    def __init__(self,
        *,
        bead_length : builtins.float = ...,
        machine : typing.Optional[global___MachineSettings] = ...,
        material : typing.Optional[global___AdditiveMaterial] = ...,
        output_thermal_history : builtins.bool = ...,
        thermal_history_interval : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["machine",b"machine","material",b"material"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bead_length",b"bead_length","machine",b"machine","material",b"material","output_thermal_history",b"output_thermal_history","thermal_history_interval",b"thermal_history_interval"]) -> None: ...
global___SingleBeadInput = SingleBeadInput

class PorosityInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIZE_X_FIELD_NUMBER: builtins.int
    SIZE_Y_FIELD_NUMBER: builtins.int
    SIZE_Z_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    size_x: builtins.float = ...
    size_y: builtins.float = ...
    size_z: builtins.float = ...
    @property
    def machine(self) -> global___MachineSettings: ...
    @property
    def material(self) -> global___AdditiveMaterial: ...
    def __init__(self,
        *,
        size_x : builtins.float = ...,
        size_y : builtins.float = ...,
        size_z : builtins.float = ...,
        machine : typing.Optional[global___MachineSettings] = ...,
        material : typing.Optional[global___AdditiveMaterial] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["machine",b"machine","material",b"material"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["machine",b"machine","material",b"material","size_x",b"size_x","size_y",b"size_y","size_z",b"size_z"]) -> None: ...
global___PorosityInput = PorosityInput

class PorosityResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VOID_RATIO_FIELD_NUMBER: builtins.int
    POWDER_RATIO_FIELD_NUMBER: builtins.int
    SOLID_RATIO_FIELD_NUMBER: builtins.int
    void_ratio: builtins.float = ...
    powder_ratio: builtins.float = ...
    solid_ratio: builtins.float = ...
    def __init__(self,
        *,
        void_ratio : builtins.float = ...,
        powder_ratio : builtins.float = ...,
        solid_ratio : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["powder_ratio",b"powder_ratio","solid_ratio",b"solid_ratio","void_ratio",b"void_ratio"]) -> None: ...
global___PorosityResult = PorosityResult

class MicrostructureInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CUBE_MIN_X_FIELD_NUMBER: builtins.int
    CUBE_MIN_Y_FIELD_NUMBER: builtins.int
    CUBE_MIN_Z_FIELD_NUMBER: builtins.int
    CUBE_SIZE_X_FIELD_NUMBER: builtins.int
    CUBE_SIZE_Y_FIELD_NUMBER: builtins.int
    CUBE_SIZE_Z_FIELD_NUMBER: builtins.int
    SENSOR_DIMENSION_FIELD_NUMBER: builtins.int
    USE_PROVIDED_THERMAL_PARAMETERS_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    COOLING_RATE_FIELD_NUMBER: builtins.int
    THERMAL_GRADIENT_FIELD_NUMBER: builtins.int
    MELT_POOL_WIDTH_FIELD_NUMBER: builtins.int
    MELT_POOL_DEPTH_FIELD_NUMBER: builtins.int
    USE_RANDOM_SEED_FIELD_NUMBER: builtins.int
    RANDOM_SEED_FIELD_NUMBER: builtins.int
    cube_min_x: builtins.float = ...
    cube_min_y: builtins.float = ...
    cube_min_z: builtins.float = ...
    cube_size_x: builtins.float = ...
    cube_size_y: builtins.float = ...
    cube_size_z: builtins.float = ...
    sensor_dimension: builtins.float = ...
    use_provided_thermal_parameters: builtins.bool = ...
    """indicates that cooling_rate, thermal_gradient, melt_pool* have been provided by user"""

    @property
    def machine(self) -> global___MachineSettings: ...
    @property
    def material(self) -> global___AdditiveMaterial: ...
    cooling_rate: builtins.float = ...
    """K/s"""

    thermal_gradient: builtins.float = ...
    """K/m"""

    melt_pool_width: builtins.float = ...
    melt_pool_depth: builtins.float = ...
    use_random_seed: builtins.bool = ...
    """indicates that random_seed has been provided by the user"""

    random_seed: builtins.int = ...
    def __init__(self,
        *,
        cube_min_x : builtins.float = ...,
        cube_min_y : builtins.float = ...,
        cube_min_z : builtins.float = ...,
        cube_size_x : builtins.float = ...,
        cube_size_y : builtins.float = ...,
        cube_size_z : builtins.float = ...,
        sensor_dimension : builtins.float = ...,
        use_provided_thermal_parameters : builtins.bool = ...,
        machine : typing.Optional[global___MachineSettings] = ...,
        material : typing.Optional[global___AdditiveMaterial] = ...,
        cooling_rate : builtins.float = ...,
        thermal_gradient : builtins.float = ...,
        melt_pool_width : builtins.float = ...,
        melt_pool_depth : builtins.float = ...,
        use_random_seed : builtins.bool = ...,
        random_seed : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["machine",b"machine","material",b"material"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cooling_rate",b"cooling_rate","cube_min_x",b"cube_min_x","cube_min_y",b"cube_min_y","cube_min_z",b"cube_min_z","cube_size_x",b"cube_size_x","cube_size_y",b"cube_size_y","cube_size_z",b"cube_size_z","machine",b"machine","material",b"material","melt_pool_depth",b"melt_pool_depth","melt_pool_width",b"melt_pool_width","random_seed",b"random_seed","sensor_dimension",b"sensor_dimension","thermal_gradient",b"thermal_gradient","use_provided_thermal_parameters",b"use_provided_thermal_parameters","use_random_seed",b"use_random_seed"]) -> None: ...
global___MicrostructureInput = MicrostructureInput

class GrainStatistics(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GRAIN_NUMBER_FIELD_NUMBER: builtins.int
    AREA_FRACTION_FIELD_NUMBER: builtins.int
    DIAMETER_UM_FIELD_NUMBER: builtins.int
    ORIENTATION_ANGLE_FIELD_NUMBER: builtins.int
    grain_number: builtins.int = ...
    area_fraction: builtins.float = ...
    diameter_um: builtins.float = ...
    """microns"""

    orientation_angle: builtins.float = ...
    def __init__(self,
        *,
        grain_number : builtins.int = ...,
        area_fraction : builtins.float = ...,
        diameter_um : builtins.float = ...,
        orientation_angle : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["area_fraction",b"area_fraction","diameter_um",b"diameter_um","grain_number",b"grain_number","orientation_angle",b"orientation_angle"]) -> None: ...
global___GrainStatistics = GrainStatistics

class MicrostructureResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    XY_CIRCLE_EQUIVALENCE_FIELD_NUMBER: builtins.int
    XZ_CIRCLE_EQUIVALENCE_FIELD_NUMBER: builtins.int
    YZ_CIRCLE_EQUIVALENCE_FIELD_NUMBER: builtins.int
    XY_VTK_FIELD_NUMBER: builtins.int
    XZ_VTK_FIELD_NUMBER: builtins.int
    YZ_VTK_FIELD_NUMBER: builtins.int
    @property
    def xy_circle_equivalence(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GrainStatistics]: ...
    @property
    def xz_circle_equivalence(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GrainStatistics]: ...
    @property
    def yz_circle_equivalence(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GrainStatistics]: ...
    xy_vtk: builtins.bytes = ...
    xz_vtk: builtins.bytes = ...
    yz_vtk: builtins.bytes = ...
    def __init__(self,
        *,
        xy_circle_equivalence : typing.Optional[typing.Iterable[global___GrainStatistics]] = ...,
        xz_circle_equivalence : typing.Optional[typing.Iterable[global___GrainStatistics]] = ...,
        yz_circle_equivalence : typing.Optional[typing.Iterable[global___GrainStatistics]] = ...,
        xy_vtk : builtins.bytes = ...,
        xz_vtk : builtins.bytes = ...,
        yz_vtk : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["xy_circle_equivalence",b"xy_circle_equivalence","xy_vtk",b"xy_vtk","xz_circle_equivalence",b"xz_circle_equivalence","xz_vtk",b"xz_vtk","yz_circle_equivalence",b"yz_circle_equivalence","yz_vtk",b"yz_vtk"]) -> None: ...
global___MicrostructureResult = MicrostructureResult

class ThermalHistoryInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STL_FILE_FIELD_NUMBER: builtins.int
    BUILD_FILE_FIELD_NUMBER: builtins.int
    COAX_AVE_SENSOR_INPUTS_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    @property
    def stl_file(self) -> global___StlFile: ...
    @property
    def build_file(self) -> global___BuildFile: ...
    @property
    def coax_ave_sensor_inputs(self) -> global___CoaxialAverageSensorInputs: ...
    @property
    def machine(self) -> global___MachineSettings: ...
    @property
    def material(self) -> global___AdditiveMaterial: ...
    def __init__(self,
        *,
        stl_file : typing.Optional[global___StlFile] = ...,
        build_file : typing.Optional[global___BuildFile] = ...,
        coax_ave_sensor_inputs : typing.Optional[global___CoaxialAverageSensorInputs] = ...,
        machine : typing.Optional[global___MachineSettings] = ...,
        material : typing.Optional[global___AdditiveMaterial] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["FileType",b"FileType","build_file",b"build_file","coax_ave_sensor_inputs",b"coax_ave_sensor_inputs","machine",b"machine","material",b"material","stl_file",b"stl_file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["FileType",b"FileType","build_file",b"build_file","coax_ave_sensor_inputs",b"coax_ave_sensor_inputs","machine",b"machine","material",b"material","stl_file",b"stl_file"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["FileType",b"FileType"]) -> typing.Optional[typing_extensions.Literal["stl_file","build_file"]]: ...
global___ThermalHistoryInput = ThermalHistoryInput

class ThermalHistoryResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COAX_AVE_ZIP_FILE_FIELD_NUMBER: builtins.int
    coax_ave_zip_file: typing.Text = ...
    def __init__(self,
        *,
        coax_ave_zip_file : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["coax_ave_zip_file",b"coax_ave_zip_file"]) -> None: ...
global___ThermalHistoryResult = ThermalHistoryResult

class MaterialTuningInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALLOWABLE_ERROR_FIELD_NUMBER: builtins.int
    MAX_ITERATIONS_FIELD_NUMBER: builtins.int
    EXPERIMENT_DATA_FIELD_NUMBER: builtins.int
    MATERIAL_PARAMETERS_FIELD_NUMBER: builtins.int
    THERMAL_PROPERTIES_LOOKUP_FIELD_NUMBER: builtins.int
    CHARACTERISTIC_WIDTH_LOOKUP_FIELD_NUMBER: builtins.int
    BASE_PLATE_TEMPERATURE_FIELD_NUMBER: builtins.int
    allowable_error: builtins.float = ...
    max_iterations: builtins.int = ...
    experiment_data: builtins.bytes = ...
    material_parameters: builtins.bytes = ...
    thermal_properties_lookup: builtins.bytes = ...
    characteristic_width_lookup: builtins.bytes = ...
    base_plate_temperature: builtins.float = ...
    def __init__(self,
        *,
        allowable_error : builtins.float = ...,
        max_iterations : builtins.int = ...,
        experiment_data : builtins.bytes = ...,
        material_parameters : builtins.bytes = ...,
        thermal_properties_lookup : builtins.bytes = ...,
        characteristic_width_lookup : builtins.bytes = ...,
        base_plate_temperature : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allowable_error",b"allowable_error","base_plate_temperature",b"base_plate_temperature","characteristic_width_lookup",b"characteristic_width_lookup","experiment_data",b"experiment_data","material_parameters",b"material_parameters","max_iterations",b"max_iterations","thermal_properties_lookup",b"thermal_properties_lookup"]) -> None: ...
global___MaterialTuningInput = MaterialTuningInput

class MaterialTuningResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOG_FIELD_NUMBER: builtins.int
    OPTIMIZED_PARAMETERS_FIELD_NUMBER: builtins.int
    CHARACTERISTIC_WIDTH_LOOKUP_FIELD_NUMBER: builtins.int
    COEFFICIENTS_FIELD_NUMBER: builtins.int
    MATERIAL_PARAMETERS_FIELD_NUMBER: builtins.int
    log: builtins.bytes = ...
    optimized_parameters: builtins.bytes = ...
    characteristic_width_lookup: builtins.bytes = ...
    coefficients: builtins.bytes = ...
    material_parameters: builtins.bytes = ...
    def __init__(self,
        *,
        log : builtins.bytes = ...,
        optimized_parameters : builtins.bytes = ...,
        characteristic_width_lookup : builtins.bytes = ...,
        coefficients : builtins.bytes = ...,
        material_parameters : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["characteristic_width_lookup",b"characteristic_width_lookup","coefficients",b"coefficients","log",b"log","material_parameters",b"material_parameters","optimized_parameters",b"optimized_parameters"]) -> None: ...
global___MaterialTuningResult = MaterialTuningResult

class ThermalStrainInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STL_FILE_FIELD_NUMBER: builtins.int
    BUILD_FILE_FIELD_NUMBER: builtins.int
    SOLVE_TYPE_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    @property
    def stl_file(self) -> global___StlFile: ...
    @property
    def build_file(self) -> global___BuildFile: ...
    solve_type: global___ThermalSolveType.ValueType = ...
    @property
    def machine(self) -> global___MachineSettings: ...
    @property
    def material(self) -> global___AdditiveMaterial: ...
    def __init__(self,
        *,
        stl_file : typing.Optional[global___StlFile] = ...,
        build_file : typing.Optional[global___BuildFile] = ...,
        solve_type : global___ThermalSolveType.ValueType = ...,
        machine : typing.Optional[global___MachineSettings] = ...,
        material : typing.Optional[global___AdditiveMaterial] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["FileType",b"FileType","build_file",b"build_file","machine",b"machine","material",b"material","stl_file",b"stl_file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["FileType",b"FileType","build_file",b"build_file","machine",b"machine","material",b"material","solve_type",b"solve_type","stl_file",b"stl_file"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["FileType",b"FileType"]) -> typing.Optional[typing_extensions.Literal["stl_file","build_file"]]: ...
global___ThermalStrainInput = ThermalStrainInput

class ThermalStrainResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SHRINKAGE_FILE_FIELD_NUMBER: builtins.int
    NUMBER_OF_DEPOSIT_LAYERS_FIELD_NUMBER: builtins.int
    LAYER_THICKNESS_FIELD_NUMBER: builtins.int
    shrinkage_file: typing.Text = ...
    """name of zip archive on server"""

    number_of_deposit_layers: builtins.int = ...
    layer_thickness: builtins.float = ...
    def __init__(self,
        *,
        shrinkage_file : typing.Text = ...,
        number_of_deposit_layers : builtins.int = ...,
        layer_thickness : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["layer_thickness",b"layer_thickness","number_of_deposit_layers",b"number_of_deposit_layers","shrinkage_file",b"shrinkage_file"]) -> None: ...
global___ThermalStrainResult = ThermalStrainResult

class VoxelMeshInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STL_FILE_FIELD_NUMBER: builtins.int
    BUILD_FILE_FIELD_NUMBER: builtins.int
    VOXEL_SIZE_FIELD_NUMBER: builtins.int
    @property
    def stl_file(self) -> global___StlFile: ...
    @property
    def build_file(self) -> global___BuildFile: ...
    voxel_size: builtins.float = ...
    def __init__(self,
        *,
        stl_file : typing.Optional[global___StlFile] = ...,
        build_file : typing.Optional[global___BuildFile] = ...,
        voxel_size : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["FileType",b"FileType","build_file",b"build_file","stl_file",b"stl_file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["FileType",b"FileType","build_file",b"build_file","stl_file",b"stl_file","voxel_size",b"voxel_size"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["FileType",b"FileType"]) -> typing.Optional[typing_extensions.Literal["stl_file","build_file"]]: ...
global___VoxelMeshInput = VoxelMeshInput

class VoxelMeshResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VOXEL_FILE_FIELD_NUMBER: builtins.int
    voxel_file: typing.Text = ...
    """name of voxel file on server"""

    def __init__(self,
        *,
        voxel_file : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["voxel_file",b"voxel_file"]) -> None: ...
global___VoxelMeshResult = VoxelMeshResult

class Microstructure3DInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_LENGTH_FIELD_NUMBER: builtins.int
    Y_LENGTH_FIELD_NUMBER: builtins.int
    Z_LENGTH_FIELD_NUMBER: builtins.int
    INITIAL_GRAIN_DATA_FIELD_NUMBER: builtins.int
    INITIAL_EULER_ANGLE_DATA_FIELD_NUMBER: builtins.int
    X_ORIGIN_FIELD_NUMBER: builtins.int
    Y_ORIGIN_FIELD_NUMBER: builtins.int
    Z_ORIGIN_FIELD_NUMBER: builtins.int
    NUM_DEPOSIT_LAYERS_FIELD_NUMBER: builtins.int
    FIRST_DEPOSIT_LAYER_FIELD_NUMBER: builtins.int
    X_THERMAL_DOMAIN_GRID_SPACING_FIELD_NUMBER: builtins.int
    Y_THERMAL_DOMAIN_GRID_SPACING_FIELD_NUMBER: builtins.int
    Z_THERMAL_DOMAIN_GRID_SPACING_FIELD_NUMBER: builtins.int
    USE_TRANSIENT_BULK_NUCLEATION_FIELD_NUMBER: builtins.int
    MAX_BULK_NUCLEATION_DENSITY_FIELD_NUMBER: builtins.int
    RUN_INITIAL_MICROSTRUCTURE_FIELD_NUMBER: builtins.int
    NUM_RANDOM_NUCLEI_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    USE_PROVIDED_INITIAL_MICROSTRUCTURE_DATA_FIELD_NUMBER: builtins.int
    x_length: builtins.float = ...
    """Thermal and microstructure domains are assumed to be coincident.
    length of the domain cuboid in the x direction
    """

    y_length: builtins.float = ...
    """length of the domain cuboid in the y direction"""

    z_length: builtins.float = ...
    """length of the domain cuboid in the z direction"""

    initial_grain_data: builtins.bytes = ...
    initial_euler_angle_data: builtins.bytes = ...
    x_origin: builtins.float = ...
    """domain offset from base plate origin in x direction"""

    y_origin: builtins.float = ...
    """domain offset from base plate origin in y direction"""

    z_origin: builtins.float = ...
    """domain offset from base plate origin in z direction"""

    num_deposit_layers: builtins.int = ...
    first_deposit_layer: builtins.int = ...
    x_thermal_domain_grid_spacing: builtins.float = ...
    y_thermal_domain_grid_spacing: builtins.float = ...
    z_thermal_domain_grid_spacing: builtins.float = ...
    use_transient_bulk_nucleation: builtins.bool = ...
    max_bulk_nucleation_density: builtins.float = ...
    run_initial_microstructure: builtins.bool = ...
    num_random_nuclei: builtins.int = ...
    """only used if run_initial_microstructure is true"""

    @property
    def machine(self) -> global___MachineSettings: ...
    @property
    def material(self) -> global___AdditiveMaterial: ...
    use_provided_initial_microstructure_data: builtins.bool = ...
    def __init__(self,
        *,
        x_length : builtins.float = ...,
        y_length : builtins.float = ...,
        z_length : builtins.float = ...,
        initial_grain_data : typing.Optional[builtins.bytes] = ...,
        initial_euler_angle_data : typing.Optional[builtins.bytes] = ...,
        x_origin : typing.Optional[builtins.float] = ...,
        y_origin : typing.Optional[builtins.float] = ...,
        z_origin : typing.Optional[builtins.float] = ...,
        num_deposit_layers : typing.Optional[builtins.int] = ...,
        first_deposit_layer : typing.Optional[builtins.int] = ...,
        x_thermal_domain_grid_spacing : typing.Optional[builtins.float] = ...,
        y_thermal_domain_grid_spacing : typing.Optional[builtins.float] = ...,
        z_thermal_domain_grid_spacing : typing.Optional[builtins.float] = ...,
        use_transient_bulk_nucleation : typing.Optional[builtins.bool] = ...,
        max_bulk_nucleation_density : typing.Optional[builtins.float] = ...,
        run_initial_microstructure : typing.Optional[builtins.bool] = ...,
        num_random_nuclei : typing.Optional[builtins.int] = ...,
        machine : typing.Optional[global___MachineSettings] = ...,
        material : typing.Optional[global___AdditiveMaterial] = ...,
        use_provided_initial_microstructure_data : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_first_deposit_layer",b"_first_deposit_layer","_initial_euler_angle_data",b"_initial_euler_angle_data","_initial_grain_data",b"_initial_grain_data","_machine",b"_machine","_material",b"_material","_max_bulk_nucleation_density",b"_max_bulk_nucleation_density","_num_deposit_layers",b"_num_deposit_layers","_num_random_nuclei",b"_num_random_nuclei","_run_initial_microstructure",b"_run_initial_microstructure","_use_provided_initial_microstructure_data",b"_use_provided_initial_microstructure_data","_use_transient_bulk_nucleation",b"_use_transient_bulk_nucleation","_x_origin",b"_x_origin","_x_thermal_domain_grid_spacing",b"_x_thermal_domain_grid_spacing","_y_origin",b"_y_origin","_y_thermal_domain_grid_spacing",b"_y_thermal_domain_grid_spacing","_z_origin",b"_z_origin","_z_thermal_domain_grid_spacing",b"_z_thermal_domain_grid_spacing","first_deposit_layer",b"first_deposit_layer","initial_euler_angle_data",b"initial_euler_angle_data","initial_grain_data",b"initial_grain_data","machine",b"machine","material",b"material","max_bulk_nucleation_density",b"max_bulk_nucleation_density","num_deposit_layers",b"num_deposit_layers","num_random_nuclei",b"num_random_nuclei","run_initial_microstructure",b"run_initial_microstructure","use_provided_initial_microstructure_data",b"use_provided_initial_microstructure_data","use_transient_bulk_nucleation",b"use_transient_bulk_nucleation","x_origin",b"x_origin","x_thermal_domain_grid_spacing",b"x_thermal_domain_grid_spacing","y_origin",b"y_origin","y_thermal_domain_grid_spacing",b"y_thermal_domain_grid_spacing","z_origin",b"z_origin","z_thermal_domain_grid_spacing",b"z_thermal_domain_grid_spacing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_first_deposit_layer",b"_first_deposit_layer","_initial_euler_angle_data",b"_initial_euler_angle_data","_initial_grain_data",b"_initial_grain_data","_machine",b"_machine","_material",b"_material","_max_bulk_nucleation_density",b"_max_bulk_nucleation_density","_num_deposit_layers",b"_num_deposit_layers","_num_random_nuclei",b"_num_random_nuclei","_run_initial_microstructure",b"_run_initial_microstructure","_use_provided_initial_microstructure_data",b"_use_provided_initial_microstructure_data","_use_transient_bulk_nucleation",b"_use_transient_bulk_nucleation","_x_origin",b"_x_origin","_x_thermal_domain_grid_spacing",b"_x_thermal_domain_grid_spacing","_y_origin",b"_y_origin","_y_thermal_domain_grid_spacing",b"_y_thermal_domain_grid_spacing","_z_origin",b"_z_origin","_z_thermal_domain_grid_spacing",b"_z_thermal_domain_grid_spacing","first_deposit_layer",b"first_deposit_layer","initial_euler_angle_data",b"initial_euler_angle_data","initial_grain_data",b"initial_grain_data","machine",b"machine","material",b"material","max_bulk_nucleation_density",b"max_bulk_nucleation_density","num_deposit_layers",b"num_deposit_layers","num_random_nuclei",b"num_random_nuclei","run_initial_microstructure",b"run_initial_microstructure","use_provided_initial_microstructure_data",b"use_provided_initial_microstructure_data","use_transient_bulk_nucleation",b"use_transient_bulk_nucleation","x_length",b"x_length","x_origin",b"x_origin","x_thermal_domain_grid_spacing",b"x_thermal_domain_grid_spacing","y_length",b"y_length","y_origin",b"y_origin","y_thermal_domain_grid_spacing",b"y_thermal_domain_grid_spacing","z_length",b"z_length","z_origin",b"z_origin","z_thermal_domain_grid_spacing",b"z_thermal_domain_grid_spacing"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_first_deposit_layer",b"_first_deposit_layer"]) -> typing.Optional[typing_extensions.Literal["first_deposit_layer"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_initial_euler_angle_data",b"_initial_euler_angle_data"]) -> typing.Optional[typing_extensions.Literal["initial_euler_angle_data"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_initial_grain_data",b"_initial_grain_data"]) -> typing.Optional[typing_extensions.Literal["initial_grain_data"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_machine",b"_machine"]) -> typing.Optional[typing_extensions.Literal["machine"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_material",b"_material"]) -> typing.Optional[typing_extensions.Literal["material"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_bulk_nucleation_density",b"_max_bulk_nucleation_density"]) -> typing.Optional[typing_extensions.Literal["max_bulk_nucleation_density"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_deposit_layers",b"_num_deposit_layers"]) -> typing.Optional[typing_extensions.Literal["num_deposit_layers"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_random_nuclei",b"_num_random_nuclei"]) -> typing.Optional[typing_extensions.Literal["num_random_nuclei"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_run_initial_microstructure",b"_run_initial_microstructure"]) -> typing.Optional[typing_extensions.Literal["run_initial_microstructure"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_use_provided_initial_microstructure_data",b"_use_provided_initial_microstructure_data"]) -> typing.Optional[typing_extensions.Literal["use_provided_initial_microstructure_data"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_use_transient_bulk_nucleation",b"_use_transient_bulk_nucleation"]) -> typing.Optional[typing_extensions.Literal["use_transient_bulk_nucleation"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_x_origin",b"_x_origin"]) -> typing.Optional[typing_extensions.Literal["x_origin"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_x_thermal_domain_grid_spacing",b"_x_thermal_domain_grid_spacing"]) -> typing.Optional[typing_extensions.Literal["x_thermal_domain_grid_spacing"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_y_origin",b"_y_origin"]) -> typing.Optional[typing_extensions.Literal["y_origin"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_y_thermal_domain_grid_spacing",b"_y_thermal_domain_grid_spacing"]) -> typing.Optional[typing_extensions.Literal["y_thermal_domain_grid_spacing"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_z_origin",b"_z_origin"]) -> typing.Optional[typing_extensions.Literal["z_origin"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_z_thermal_domain_grid_spacing",b"_z_thermal_domain_grid_spacing"]) -> typing.Optional[typing_extensions.Literal["z_thermal_domain_grid_spacing"]]: ...
global___Microstructure3DInput = Microstructure3DInput

class Microstructure3DResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    THREE_D_VTK_FIELD_NUMBER: builtins.int
    TWO_D_RESULT_FIELD_NUMBER: builtins.int
    three_d_vtk: builtins.bytes = ...
    @property
    def two_d_result(self) -> global___MicrostructureResult: ...
    def __init__(self,
        *,
        three_d_vtk : builtins.bytes = ...,
        two_d_result : typing.Optional[global___MicrostructureResult] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["two_d_result",b"two_d_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["three_d_vtk",b"three_d_vtk","two_d_result",b"two_d_result"]) -> None: ...
global___Microstructure3DResult = Microstructure3DResult

class DownloadFileResponse(google.protobuf.message.Message):
    """DownloadFileResponse is used to transfer a file in chunks from
    the server to a client. Content and content_md5 may be empty
    if only a progress message is sent. It is defined here because
    it is used in multiple services.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILE_NAME_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    CONTENT_MD5_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    file_name: typing.Text = ...
    """name of file without path"""

    total_size: builtins.int = ...
    """total file size in bytes"""

    content: builtins.bytes = ...
    """chunk of file content"""

    content_md5: typing.Text = ...
    """md5 hash of content"""

    @property
    def progress(self) -> global___Progress:
        """download progress"""
        pass
    def __init__(self,
        *,
        file_name : typing.Text = ...,
        total_size : builtins.int = ...,
        content : builtins.bytes = ...,
        content_md5 : typing.Text = ...,
        progress : typing.Optional[global___Progress] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["progress",b"progress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content",b"content","content_md5",b"content_md5","file_name",b"file_name","progress",b"progress","total_size",b"total_size"]) -> None: ...
global___DownloadFileResponse = DownloadFileResponse
