name: Release Packages

on:
  push:
    tags:
      - '*-keycardai'
      - '*-keycardai-oauth'
      - '*-keycardai-mcp'
      - '*-keycardai-mcp-fastmcp'

jobs:
  detect-package:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      package: ${{ steps.detect.outputs.package }}
      version: ${{ steps.detect.outputs.version }}
      package-dir: ${{ steps.detect.outputs.package-dir }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Detect package from tag
        id: detect
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "Tag: $TAG_NAME"
          
          # Use the changelog.py script to extract package information
          PACKAGE_INFO=$(uv run python scripts/changelog.py package "$TAG_NAME" --output-format github)
          
          # Parse the JSON output
          PACKAGE=$(echo "$PACKAGE_INFO" | jq -r '.package_name')
          VERSION=$(echo "$PACKAGE_INFO" | jq -r '.version')
          PACKAGE_DIR=$(echo "$PACKAGE_INFO" | jq -r '.package_dir')
          
          echo "package=$PACKAGE" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "package-dir=$PACKAGE_DIR" >> $GITHUB_OUTPUT
          
          echo "Detected package: $PACKAGE"
          echo "Version: $VERSION"
          echo "Package directory: $PACKAGE_DIR"

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [detect-package]
    environment: pypi-release
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: uv sync --all-extras --all-packages

      - name: Build package
        run: |
          uv build --package ${{ needs.detect-package.outputs.package }} 

      - name: Publish to PyPI
        run: |
          uv publish
