# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.anomalies_by_rule_response import AnomaliesByRuleResponse

class TestAnomaliesByRuleResponse(unittest.TestCase):
    """AnomaliesByRuleResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnomaliesByRuleResponse:
        """Test AnomaliesByRuleResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnomaliesByRuleResponse`
        """
        model = AnomaliesByRuleResponse()
        if include_optional:
            return AnomaliesByRuleResponse(
                anomalies_by_rule = [
                    openapi_client.models.anomaly_rule_data.AnomalyRuleData(
                        rule_name = '', 
                        anomalies = [
                            openapi_client.models.anomaly_row.AnomalyRow(
                                __rule__ = '', 
                                __id__ = '', 
                                __column__ = '', 
                                __type__ = '', 
                                __bad_value__ = null, 
                                __status__ = 'NEW', )
                            ], 
                        pagination = openapi_client.models.pagination_meta.PaginationMeta(
                            page = 1, 
                            page_size = 50, 
                            total_items = 150, 
                            total_pages = 3, ), )
                    ]
            )
        else:
            return AnomaliesByRuleResponse(
                anomalies_by_rule = [
                    openapi_client.models.anomaly_rule_data.AnomalyRuleData(
                        rule_name = '', 
                        anomalies = [
                            openapi_client.models.anomaly_row.AnomalyRow(
                                __rule__ = '', 
                                __id__ = '', 
                                __column__ = '', 
                                __type__ = '', 
                                __bad_value__ = null, 
                                __status__ = 'NEW', )
                            ], 
                        pagination = openapi_client.models.pagination_meta.PaginationMeta(
                            page = 1, 
                            page_size = 50, 
                            total_items = 150, 
                            total_pages = 3, ), )
                    ],
        )
        """

    def testAnomaliesByRuleResponse(self):
        """Test AnomaliesByRuleResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
