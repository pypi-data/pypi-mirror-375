[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aihpi"
version = "0.1.3"
authors = [
    {name = "Felix Boelter", email = "felix.boelter@hpi.de"},
]
description = "AI High Performance Infrastructure - Distributed job submission for SLURM clusters"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
keywords = ["slurm", "distributed", "training", "ai", "ml", "pytorch", "llamafactory"]
dependencies = [
    "submitit>=1.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-mock",
    "black",
    "flake8",
    "mypy",
    "isort",
]
huggingface = [
    "huggingface_hub",
]
tracking = [
    "wandb",
    "mlflow",
]
torch = [
    "torch",
    "torchvision",
    "torchaudio",
]
metrics = [
    "tensorboard",
    "matplotlib",
    "seaborn",
]
all = [
    "huggingface_hub",
    "wandb",
    "mlflow",
    "torch",
    "torchvision", 
    "torchaudio",
    "tensorboard",
    "matplotlib",
    "seaborn",
]

[project.scripts]
aihpi = "aihpi.cli:main"

[project.urls]
Homepage = "https://github.com/aihpi/aihpi-cluster"
"Bug Reports" = "https://github.com/aihpi/aihpi-cluster/issues"
"Source" = "https://github.com/aihpi/aihpi-cluster"
"Documentation" = "https://github.com/aihpi/aihpi-cluster#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["aihpi*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=aihpi",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "submitit.*",
    "wandb.*",
    "mlflow.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["aihpi"]
omit = [
    "tests/*",
    "aihpi/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]