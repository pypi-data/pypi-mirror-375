# automatically generated by the FlatBuffers compiler, do not modify

# namespace: circle

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RandomOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RandomOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRandomOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def RandomOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x43\x49\x52\x30", size_prefixed=size_prefixed)

    # RandomOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RandomOptions
    def Seed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # RandomOptions
    def Seed2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(2)
def RandomOptionsStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddSeed(builder, seed): builder.PrependInt64Slot(0, seed, 0)
def RandomOptionsAddSeed(builder, seed):
    """This method is deprecated. Please switch to AddSeed."""
    return AddSeed(builder, seed)
def AddSeed2(builder, seed2): builder.PrependInt64Slot(1, seed2, 0)
def RandomOptionsAddSeed2(builder, seed2):
    """This method is deprecated. Please switch to AddSeed2."""
    return AddSeed2(builder, seed2)
def End(builder): return builder.EndObject()
def RandomOptionsEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)

class RandomOptionsT(object):

    # RandomOptionsT
    def __init__(self):
        self.seed = 0  # type: int
        self.seed2 = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        randomOptions = RandomOptions()
        randomOptions.Init(buf, pos)
        return cls.InitFromObj(randomOptions)

    @classmethod
    def InitFromObj(cls, randomOptions):
        x = RandomOptionsT()
        x._UnPack(randomOptions)
        return x

    # RandomOptionsT
    def _UnPack(self, randomOptions):
        if randomOptions is None:
            return
        self.seed = randomOptions.Seed()
        self.seed2 = randomOptions.Seed2()

    # RandomOptionsT
    def Pack(self, builder):
        Start(builder)
        AddSeed(builder, self.seed)
        AddSeed2(builder, self.seed2)
        randomOptions = End(builder)
        return randomOptions
