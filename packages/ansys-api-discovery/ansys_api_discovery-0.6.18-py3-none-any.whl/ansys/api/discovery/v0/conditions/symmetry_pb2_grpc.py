# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.discovery.v0.conditions import symmetry_pb2 as ansys_dot_api_dot_discovery_dot_v0_dot_conditions_dot_symmetry__pb2
from ansys.api.discovery.v0 import discoverymodels_pb2 as ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2


class SymmetryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSymmetry = channel.unary_unary(
                '/ansys.api.discovery.v0.conditions.symmetry.Symmetry/CreateSymmetry',
                request_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_conditions_dot_symmetry__pb2.SymmetryCreationRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_conditions_dot_symmetry__pb2.SymmetryCreationResponse.FromString,
                )
        self.ChangeSymmetryLocation = channel.unary_unary(
                '/ansys.api.discovery.v0.conditions.symmetry.Symmetry/ChangeSymmetryLocation',
                request_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.ChangeLocationRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.ChangeResponse.FromString,
                )


class SymmetryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateSymmetry(self, request, context):
        """Symmetry condition methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeSymmetryLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SymmetryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSymmetry': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSymmetry,
                    request_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_conditions_dot_symmetry__pb2.SymmetryCreationRequest.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_conditions_dot_symmetry__pb2.SymmetryCreationResponse.SerializeToString,
            ),
            'ChangeSymmetryLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeSymmetryLocation,
                    request_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.ChangeLocationRequest.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.ChangeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.discovery.v0.conditions.symmetry.Symmetry', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Symmetry(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateSymmetry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.conditions.symmetry.Symmetry/CreateSymmetry',
            ansys_dot_api_dot_discovery_dot_v0_dot_conditions_dot_symmetry__pb2.SymmetryCreationRequest.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_conditions_dot_symmetry__pb2.SymmetryCreationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeSymmetryLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.conditions.symmetry.Symmetry/ChangeSymmetryLocation',
            ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.ChangeLocationRequest.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_discoverymodels__pb2.ChangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
