# coding: utf-8

"""
    Selling Partner API for Retail Procurement Orders

    The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class AcknowledgementStatusDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'acknowledgement_date': 'datetime',
        'accepted_quantity': 'ItemQuantity',
        'rejected_quantity': 'ItemQuantity',
    }

    attribute_map = {
        'acknowledgement_date': 'acknowledgementDate',
        'accepted_quantity': 'acceptedQuantity',
        'rejected_quantity': 'rejectedQuantity',
    }

    def __init__(self, acknowledgement_date=None, accepted_quantity=None, rejected_quantity=None, _configuration=None):  # noqa: E501
        """AcknowledgementStatusDetails - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._acknowledgement_date = None
        self._accepted_quantity = None
        self._rejected_quantity = None
        self.discriminator = None

        if acknowledgement_date is not None:
            self.acknowledgement_date = acknowledgement_date
        if accepted_quantity is not None:
            self.accepted_quantity = accepted_quantity
        if rejected_quantity is not None:
            self.rejected_quantity = rejected_quantity

    @property
    def acknowledgement_date(self):
        """Gets the acknowledgement_date of this AcknowledgementStatusDetails.  # noqa: E501

        The date when the line item was confirmed by vendor. Must be in ISO-8601 date/time format.  # noqa: E501

        :return: The acknowledgement_date of this AcknowledgementStatusDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._acknowledgement_date

    @acknowledgement_date.setter
    def acknowledgement_date(self, acknowledgement_date):
        """Sets the acknowledgement_date of this AcknowledgementStatusDetails.

        The date when the line item was confirmed by vendor. Must be in ISO-8601 date/time format.  # noqa: E501

        :param acknowledgement_date: The acknowledgement_date of this AcknowledgementStatusDetails.  # noqa: E501
        :type: datetime
        """

        self._acknowledgement_date = acknowledgement_date

    @property
    def accepted_quantity(self):
        """Gets the accepted_quantity of this AcknowledgementStatusDetails.  # noqa: E501


        :return: The accepted_quantity of this AcknowledgementStatusDetails.  # noqa: E501
        :rtype: ItemQuantity
        """
        return self._accepted_quantity

    @accepted_quantity.setter
    def accepted_quantity(self, accepted_quantity):
        """Sets the accepted_quantity of this AcknowledgementStatusDetails.


        :param accepted_quantity: The accepted_quantity of this AcknowledgementStatusDetails.  # noqa: E501
        :type: ItemQuantity
        """

        self._accepted_quantity = accepted_quantity

    @property
    def rejected_quantity(self):
        """Gets the rejected_quantity of this AcknowledgementStatusDetails.  # noqa: E501


        :return: The rejected_quantity of this AcknowledgementStatusDetails.  # noqa: E501
        :rtype: ItemQuantity
        """
        return self._rejected_quantity

    @rejected_quantity.setter
    def rejected_quantity(self, rejected_quantity):
        """Sets the rejected_quantity of this AcknowledgementStatusDetails.


        :param rejected_quantity: The rejected_quantity of this AcknowledgementStatusDetails.  # noqa: E501
        :type: ItemQuantity
        """

        self._rejected_quantity = rejected_quantity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AcknowledgementStatusDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AcknowledgementStatusDetails):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AcknowledgementStatusDetails):
            return True

        return self.to_dict() != other.to_dict()
