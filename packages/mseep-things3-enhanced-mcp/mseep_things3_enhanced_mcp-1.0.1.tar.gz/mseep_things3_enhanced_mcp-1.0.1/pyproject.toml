[project]
name = "mseep-things3-enhanced-mcp"
version = "1.0.1"
description = "Enhanced FastMCP server for Things 3 app integration with Claude Desktop and Windsurf - featuring reliability improvements, caching, and AppleScript bridge"
requires-python = ">=3.12"
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
keywords = [
    "mcp",
    "anthropic",
    "claude",
    "things3",
    "things",
    "task-management",
    "productivity",
    "fastmcp",
    "macos",
    "apple",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: MacOS",
]
dependencies = [
    "httpx>=0.28.1",
    "mcp[cli]>=1.2.0",
    "things-py>=0.0.15",
]

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[project.license]
text = "MIT License"

[project.scripts]
things3-enhanced-mcp = "src.things_mcp.fast_server:run_things_mcp_server"

[project.urls]
Homepage = "https://github.com/excelsier/things-fastmcp"
"Bug Tracker" = "https://github.com/excelsier/things-fastmcp/issues"
Documentation = "https://github.com/excelsier/things-fastmcp#readme"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "src/things_mcp",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/things_mcp",
    "README.md",
    "LICENSE",
    "pyproject.toml",
    "things_fast_server.py",
    "things_server.py",
]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "ruff",
    "build",
    "twine",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
lint = "ruff check ."
format = "ruff format ."
build = "python -m build"
publish = "twine upload dist/*"
clean = "rm -rf dist build *.egg-info"
