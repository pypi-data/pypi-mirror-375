[project]
name = "iudicium"
dynamic = ["version"]
description = "Evaluations for Apertus."
readme = "README.md"
requires-python = ">=3.11,<3.14"
dependencies = [
    "python-dotenv>=1.1.1",
    "sacrebleu>=2.5.1",
    "tqdm>=4.67.1",
]

[project.optional-dependencies]
openrouter = [
    "openai>=1.106.1",
]
transformers = [
    "transformers>=4.56.1",
]
transformers-cpu = [
    "transformers>=4.56.1",
    "torch>=2.8.0",
    "torchvision>=0.23"
]
transformers-cu129 = [
    "transformers>=4.56.1",
    "torch>=2.8.0",
    "torchvision>=0.23"
]

# Declare these extras as conflicting so users can't pick 2 backends at once.
[tool.uv]
conflicts = [
  [{extra="transformers-cpu"},   {extra="transformers-cu129"}],
]

# Pin torch-family packages to the correct index PER extra (and platform).
# CUDA wheels are Linux/Windows only; macOS should fall back to PyPI CPU wheels.
[tool.uv.sources]
torch = [
  { index = "pytorch-cpu",  extra = "transformers-cpu" },
  { index = "pytorch-cu129", extra = "transformers-cu129", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
torchvision = [
  { index = "pytorch-cpu",  extra = "transformers-cpu" },
  { index = "pytorch-cu129", extra = "transformers-cu129", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]

# Define the named indexes. "explicit = true" ensures ONLY torch-family uses them.
[[tool.uv.index]]
name = "pytorch-cpu"
url  = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu129"
url  = "https://download.pytorch.org/whl/cu129"
explicit = true

[dependency-groups]
dev = [
    "jupyter>=1.1.1",
    "mypy>=1.17.1",
    "pytest>=8.4.2",
    "ruff>=0.12.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/iudicium/__init__.py"

[project.scripts]
iudicium = "iudicium.__main__:main"

[tool.ruff.lint]
select = ["D", "I"]

[tool.ruff.lint.pydocstyle]
convention = "google"
