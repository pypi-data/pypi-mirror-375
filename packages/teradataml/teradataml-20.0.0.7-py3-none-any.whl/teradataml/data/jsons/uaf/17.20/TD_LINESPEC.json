{
        "FuncName": "TD_LINESPEC",
        "FuncDescriptionShort": "Transforms a series from time or spatial domain to temporal or spatial frequency domain, respectively",
        "FuncDescriptionLong": [
                "The Line Spectrum function is one of the tools that the data scientist may employ in identifying periodicities that may be inherent in the dataset"
        ],
        "FunctionVersion": "...",
        "FunctionCategory": "Temporal and Spatial",
        "JSONVersion": "1",
        "FuncRName": "td_Line_Spec",
        "MaxInputFiles": 1,
        "Input": [
                {
                        "Type": "SERIES",
                        "Description": [
                                "At its core, this function takes a logical-runtime series as an input and transforms the series from the time or spatial domain to the temporal frequency or spatial frequency domain, respectively.  The input series can be composed of individual elements which are of type real (PAYLOAD(CONTENT(REAL))), multi-variate real (PAYLOAD(CONTENT(MULTIVAR_REAL))).  "
                        ],
                        "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
                        "Optional": false
                }
        ],
        "Output": [
                {
                        "Type": "ART",
                        "PrimaryLayer": true,
                        "LayerName": "ARTPRIMARY",
                        "ResultTableColumnTypes": [
                                "float",
                                "float",
                                "float",
                                "float"
                        ],
                        "Description": [
                                "The TD_LINESPEC function returns only a primary result set.   There are no secondary or tertiary result sets produced by this function.  The primary result set can be retrieved by issuing a SELECT against the analytical table containing the results.",
                                "The frequency, ROW_AXIS.  Depends on passed in value of FREQ_STYLE. FREQ_STYLE(K_RADIAN) means the ROW_AXIS is the angular frequency, 2πk/N, which varies from 0 to π.   FREQ_STYLE(K_SAMPLE_RATE) means the ROW_AXIS is the frequency k/N, which varies from 0 to 1/2.  FREQ_STYLE(K_PERIODICITY) means the ROW_AXIS is the Periodicity.",
                                " Calculate magnitude: Line_Spectrum =  N/2 (ALPHA_K2  +  BETA_K2 )",
                                "Only output if OUTPUT_FMT(CONTENT(AMPL_PHASE)).   Fourier Amplitude coefficient corresponding to ROW_I index",
                                "Only output if OUTPUT_FMT(CONTENT(AMPL_PHASE)).   Fourier Phase coefficient corresponding to ROW_I index"
                        ],
                        "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field"
                }
        ],
        "IsPlottable": true,
        "Params": [
                {
                        "Name": "FREQ_STYLE",
                        "Type": "string",
                        "Optional": true,
                        "DefaultValue": "K_INTEGRAL",
                        "PermittedValues": [
                                "K_INTEGRAL",
                                "K_SAMPLE_RATE",
                                "K_RADIANS",
                                "K_HERTZ",
                                "K_PERIODICITY"
                        ],
                        "Description": [
                                "FREQ_STYLE(K_INTEGRAL) - The ROW_AXIS scale if frequency:  fk  =  0, 1,2,…N/2 or  (N-1)/2",
                                "FREQ_STYLE(K_SAMPLE_RATE) - The ROW_AXIS scale if frequency:  fk  =  k/N =  wk/2π  =  1/P    ",
                                "FREQ_STYLE(K_RADIANS) - The ROW_AXIS scale if angular frequency:  wk  =  2πk/N =  2πfk  =  2π/P     ",
                                "FREQ_STYLE(K_PERIODICITY) -  Periodicity = P = 1/fk  = 2π/wk  = N/k"
                        ]
                },
                {
                        "Name": "INCLUDE_COEFF",
                        "Type": "integer",
                        "Optional": true,
                        "DefaultValue": 0,
                        "PermittedValues": [
                                0,
                                1
                        ],
                        "Description": [
                                "Flag indicating whether the data scientist wishes to include the calculated, αk and βk,  values with the results."
                        ]
                },
                {
                        "Name": "ZERO_PADDING_OK",
                        "Type": "integer",
                        "Optional": true,
                        "DefaultValue": 1,
                        "PermittedValues": [
                                0,
                                1
                        ],
                        "Description": [
                                "Determines whether it is OK to add zeros to the end of a given Series to achieve a more efficient computation of the FFT coefficients.  A value of '1' means true; a value of '0' means false.  Default is true."
                        ]
                },
                {
                        "Name": "HERTZ_SAMPLE_RATE",
                        "Type": "float",
                        "Optional": true,
                        "LowerBound": 0,
                        "LowerBoundType": "EXCLUSIVE",
                        "Description": [
                                "Optional Parameter.  Only valid with a FREQ_STYLE(K_HERTZ).  A Floating point constant representing the sample rate, in hertz.  A value of 10000.0 means that the sample points were obtained by sampling at a rate of 10,000 hertz."
                        ]
                }
        ],
        "InputFmt": false,
        "OutputFmt": false
}