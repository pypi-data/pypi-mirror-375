CLOSE

;####################################################
; Autogenerated Homing PLC for GeoBrick, DO NOT MODIFY
; Group 2:
;  Axis 2: htype = HSW, jdist = -1000, post = None
;  Axis 3: htype = HSW, jdist = -1000, post = None
; Group 3:
;  Axis 4: htype = HSW, jdist = -1000, post = None
;  Axis 5: htype = HSW, jdist = -1000, post = None
;  Axis 6: htype = HSW, jdist = -1000, post = None
; Group 4:
;  Axis 7: htype = RLIM, jdist = 0, post = None
;  Axis 8: htype = RLIM, jdist = 0, post = None
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(11&30)*50+11%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1100
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1101
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1102
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1103
HomingBackupGroup = 0

OPEN PLC11 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1104=i213 P1105=i313 P1106=i413 P1107=i513 P1108=i613 P1109=i713 P1110=i813
;Save the low soft limits to P variables px20..x35
P1120=i214 P1121=i314 P1122=i414 P1123=i514 P1124=i614 P1125=i714 P1126=i814
;Save the home capture flags to P variables px36..x51
P1136=i7022 P1137=i7032 P1138=i7042 P1139=i7112 P1140=i7122 P1141=i7132 P1142=i7142
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1152=P1136^$C P1153=P1137^$C P1154=P1138^$C P1155=P1139^$C P1156=P1140^$C P1157=P1141^$C P1158=P1142^$C
;Save the limit flags to P variables px68..x83
P1168=i224 P1169=i324 P1170=i424 P1171=i524 P1172=i624 P1173=i724 P1174=i824
;Save the current position to P variables px84..x99
P1184=M262 P1185=M362 P1186=M462 P1187=M562 P1188=M662 P1189=M762 P1190=M862
;Clear the soft limits
i213=0 i313=0 i413=0 i513=0 i613=0 i713=0 i813=0
i214=0 i314=0 i414=0 i514=0 i614=0 i714=0 i814=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m245=0 m345=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m272=100000000*(-i223/ABS(i223)) 		m372=100000000*(-i323/ABS(i323))
		cmd "#2J^*^-1000 #3J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240&m340=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m272=100000000*(i223/ABS(i223)) 		m372=100000000*(i323/ABS(i323))
		cmd "#2J^*^-1000 #3J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240&m340=0) ; At least one motor should not be In Position
		and (m242|m342 = 0) ; Following error check
		and (m230|m330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242|m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230|m330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1184=(P1184-M262)/(I208*32)+-1000-(i226/16)
		P1185=(P1185-M362)/(I308*32)+-1000-(i326/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		i7022=P1152 i7032=P1153 		m272=100000000*(-i223/ABS(i223)) 		m372=100000000*(-i323/ABS(i323))
		cmd "#2J^*^-1000 #3J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240&m340=0) ; At least one motor should not be In Position
		and (m242|m342 = 0) ; Following error check
		and (m230|m330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242|m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230|m330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7022=P1136 i7032=P1137
		cmd "#2hm #3hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m240&m340=0) ; At least one motor should not be In Position
		and (m242|m342 = 0) ; Following error check
		and (m230|m330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242|m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230|m330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m245&m345=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m445=0 m545=0 m645=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m472=100000000*(-i423/ABS(i423)) 		m572=100000000*(-i523/ABS(i523)) 		m672=100000000*(-i623/ABS(i623))
		cmd "#4J^*^-1000 #5J^*^-1000 #6J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440&m540&m640=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m472=100000000*(i423/ABS(i423)) 		m572=100000000*(i523/ABS(i523)) 		m672=100000000*(i623/ABS(i623))
		cmd "#4J^*^-1000 #5J^*^-1000 #6J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440&m540&m640=0) ; At least one motor should not be In Position
		and (m442|m542|m642 = 0) ; Following error check
		and (m430|m530|m630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442|m542|m642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430|m530|m630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1186=(P1186-M462)/(I408*32)+-1000-(i426/16)
		P1187=(P1187-M562)/(I508*32)+-1000-(i526/16)
		P1188=(P1188-M662)/(I608*32)+-1000-(i626/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		i7042=P1154 i7112=P1155 i7122=P1156 		m472=100000000*(-i423/ABS(i423)) 		m572=100000000*(-i523/ABS(i523)) 		m672=100000000*(-i623/ABS(i623))
		cmd "#4J^*^-1000 #5J^*^-1000 #6J^*^-1000"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440&m540&m640=0) ; At least one motor should not be In Position
		and (m442|m542|m642 = 0) ; Following error check
		and (m430|m530|m630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442|m542|m642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430|m530|m630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7042=P1138 i7112=P1139 i7122=P1140
		cmd "#4hm #5hm #6hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m440&m540&m640=0) ; At least one motor should not be In Position
		and (m442|m542|m642 = 0) ; Following error check
		and (m430|m530|m630 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442|m542|m642 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430|m530|m630 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m445&m545&m645=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 4)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=4

	;Clear home flags
	m745=0 m845=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- PreHomeMove State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StatePreHomeMove
		; Execute the move commands
				m772=100000000*(-i723/ABS(i723)) 		m872=100000000*(-i823/ABS(i823))
		cmd "#7J^* #8J^*"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740&m840=0) ; At least one motor should not be In Position
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastSearch State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastSearch
		; Execute the move commands
				m772=100000000*(i723/ABS(i723)) 		m872=100000000*(i823/ABS(i823))
		cmd "#7J^*^0 #8J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740&m840=0) ; At least one motor should not be In Position
		and (m742|m842 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m742|m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		P1189=(P1189-M762)/(I708*32)+0-(i726/16)
		P1190=(P1190-M862)/(I808*32)+0-(i826/16)
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- FastRetrace State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateFastRetrace
		; Execute the move commands
		i7132=P1157 i7142=P1158 		m772=100000000*(-i723/ABS(i723)) 		m872=100000000*(-i823/ABS(i823))
		cmd "#7J^*^0 #8J^*^0"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740&m840=0) ; At least one motor should not be In Position
		and (m742|m842 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m742|m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7132=P1141 i7142=P1142
		cmd "#7hm #8hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 600000 MilliSeconds ; Now start checking the conditions
		while (m740&m840=0) ; At least one motor should not be In Position
		and (m742|m842 = 0) ; Following error check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m742|m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m745&m845=0)
		HomingStatus=StatusIncomplete
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m242=0)
	cmd "#2J/"
endif
if (m342=0)
	cmd "#3J/"
endif
if (m442=0)
	cmd "#4J/"
endif
if (m542=0)
	cmd "#5J/"
endif
if (m642=0)
	cmd "#6J/"
endif
if (m742=0)
	cmd "#7J/"
endif
if (m842=0)
	cmd "#8J/"
endif
;Restore the high soft limits from P variables px04..x19
i213=P1104 i313=P1105 i413=P1106 i513=P1107 i613=P1108 i713=P1109 i813=P1110
;Restore the low soft limits from P variables px20..x35
i214=P1120 i314=P1121 i414=P1122 i514=P1123 i614=P1124 i714=P1125 i814=P1126
;Restore the home capture flags from P variables px36..x51
i7022=P1136 i7032=P1137 i7042=P1138 i7112=P1139 i7122=P1140 i7132=P1141 i7142=P1142
;Restore the limit flags to P variables px68..x83
i224=P1168 i324=P1169 i424=P1170 i524=P1171 i624=P1172 i724=P1173 i824=P1174

DISABLE PLC11
CLOSE
