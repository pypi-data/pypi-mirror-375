---
description:
globs:
alwaysApply: false
---
# Project Structure and Key Components

This is a Python project implementing a Multi-Agent System (MAS) for sequential thinking using the **Agno** framework and served via **MCP**.

## Core Files & Logic

*   **Main Entry Point & Server Logic:** [`main.py`](mdc:main.py) - Sets up the FastMCP server, defines the `sequentialthinking` tool, instantiates the agents, defines the `ThoughtData` Pydantic model for input validation, configures logging, and contains the primary coordination logic using the `Team` object from Agno in `coordinate` mode.
*   **Dependencies:** [`pyproject.toml`](mdc:pyproject.toml) and [`uv.lock`](mdc:uv.lock) define and lock project dependencies, managed preferably with `uv`.
*   **Configuration:** Relies on environment variables (often stored in a `.env` file, which is excluded by [`.gitignore`](mdc:.gitignore)) for API keys (Groq, DeepSeek, OpenRouter, Exa) and LLM model selection (`LLM_PROVIDER`, `*_MODEL_ID`, etc.). Environment variable checks occur at startup in [`main.py`](mdc:main.py).

## Key Concepts & Libraries

*   **Multi-Agent System (MAS):** Built using the **Agno** framework.
    *   **Coordinator:** A `Team` object operating in `coordinate` mode manages the workflow within [`main.py`](mdc:main.py).
    *   **Specialist Agents:** Roles like Planner, Researcher, Analyzer, Critic, Synthesizer handle sub-tasks delegated by the Coordinator. These are defined in [`main.py`](mdc:main.py).
*   **Sequential Thinking Tool:** The primary functionality exposed is the `sequentialthinking` MCP tool, defined in [`main.py`](mdc:main.py). It takes `ThoughtData` as input.
*   **Data Validation:** Uses **Pydantic** via the `ThoughtData` model in [`main.py`](mdc:main.py) for robust input and data structure validation.
*   **External Tools:** Integrates with tools like Exa via the Researcher agent's configuration in [`main.py`](mdc:main.py).
*   **Logging:** Custom logging setup in [`main.py`](mdc:main.py) directs logs to `~/.sequential_thinking/logs/`.

## Documentation

*   **Primary README:** [`README.md`](mdc:README.md)
*   **Chinese README:** [`README.zh-CN.md`](mdc:README.zh-CN.md)

Understanding the interaction between the Coordinator (`Team` in `coordinate` mode) and the specialist agents within [`main.py`](mdc:main.py) is crucial for modifying the core sequential thinking logic. Refer to the [`README.md`](mdc:README.md) for detailed workflow explanations.
