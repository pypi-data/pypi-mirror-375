[project]
name = "mseep-prometheus_mcp_server"
version = "1.2.6"
description = "MCP server for Prometheus integration"
requires-python = ">=3.10"
dependencies = [
    "mcp[cli]",
    "prometheus-api-client",
    "python-dotenv",
    "pyproject-toml>=0.1.0",
    "requests",
    "structlog>=23.0.0",
    "fastmcp>=2.11.3",
]
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "docker>=7.0.0",
    "requests>=2.31.0",
]

[project.scripts]
prometheus-mcp-server = "prometheus_mcp_server.main:run_server"

[tool.setuptools]
packages = [
    "prometheus_mcp_server",
]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=src --cov-report=term-missing"

[tool.coverage.run]
source = [
    "src/prometheus_mcp_server",
]
omit = [
    "*/__pycache__/*",
    "*/tests/*",
    "*/.venv/*",
    "*/venv/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
precision = 1
show_missing = true
skip_covered = false
fail_under = 89

[tool.coverage.json]
show_contexts = true

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = [
    "setuptools>=61.0",
]
build-backend = "setuptools.build_meta"
