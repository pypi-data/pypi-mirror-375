# coding: utf-8

"""
    searcher

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.3.6
    Contact: kaka@cingta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from searcher_py_async.models.search_request_body_position_search_filter import SearchRequestBodyPositionSearchFilter

class TestSearchRequestBodyPositionSearchFilter(unittest.TestCase):
    """SearchRequestBodyPositionSearchFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchRequestBodyPositionSearchFilter:
        """Test SearchRequestBodyPositionSearchFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchRequestBodyPositionSearchFilter`
        """
        model = SearchRequestBodyPositionSearchFilter()
        if include_optional:
            return SearchRequestBodyPositionSearchFilter(
                filter = searcher_py_async.models.search_request_body_position_search_filter_filter.SearchRequestBody_PositionSearchFilter_filter(
                    city = 0, 
                    province = 0, 
                    edu_level = [
                        0
                        ], 
                    work_exp = [
                        0
                        ], 
                    salary_min = 0, 
                    salary_max = 0, 
                    salary_range = [
                        0
                        ], 
                    cp_type = [
                        0
                        ], 
                    cp_scale = [
                        0
                        ], 
                    company = 0, 
                    pos_type = 0, 
                    pos_type_name = '', )
            )
        else:
            return SearchRequestBodyPositionSearchFilter(
                filter = searcher_py_async.models.search_request_body_position_search_filter_filter.SearchRequestBody_PositionSearchFilter_filter(
                    city = 0, 
                    province = 0, 
                    edu_level = [
                        0
                        ], 
                    work_exp = [
                        0
                        ], 
                    salary_min = 0, 
                    salary_max = 0, 
                    salary_range = [
                        0
                        ], 
                    cp_type = [
                        0
                        ], 
                    cp_scale = [
                        0
                        ], 
                    company = 0, 
                    pos_type = 0, 
                    pos_type_name = '', ),
        )
        """

    def testSearchRequestBodyPositionSearchFilter(self):
        """Test SearchRequestBodyPositionSearchFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
