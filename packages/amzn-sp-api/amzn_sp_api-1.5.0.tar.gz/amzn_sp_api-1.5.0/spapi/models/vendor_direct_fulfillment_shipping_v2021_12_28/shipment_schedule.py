# coding: utf-8

"""
    Selling Partner API for Direct Fulfillment Shipping

    Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.

    The version of the OpenAPI document: 2021-12-28
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class ShipmentSchedule(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'estimated_delivery_date_time': 'datetime',
        'appt_window_start_date_time': 'datetime',
        'appt_window_end_date_time': 'datetime',
    }

    attribute_map = {
        'estimated_delivery_date_time': 'estimatedDeliveryDateTime',
        'appt_window_start_date_time': 'apptWindowStartDateTime',
        'appt_window_end_date_time': 'apptWindowEndDateTime',
    }

    def __init__(self, estimated_delivery_date_time=None, appt_window_start_date_time=None, appt_window_end_date_time=None, _configuration=None):  # noqa: E501
        """ShipmentSchedule - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._estimated_delivery_date_time = None
        self._appt_window_start_date_time = None
        self._appt_window_end_date_time = None
        self.discriminator = None

        if estimated_delivery_date_time is not None:
            self.estimated_delivery_date_time = estimated_delivery_date_time
        if appt_window_start_date_time is not None:
            self.appt_window_start_date_time = appt_window_start_date_time
        if appt_window_end_date_time is not None:
            self.appt_window_end_date_time = appt_window_end_date_time

    @property
    def estimated_delivery_date_time(self):
        """Gets the estimated_delivery_date_time of this ShipmentSchedule.  # noqa: E501

        Date on which the shipment is expected to reach the customer delivery location. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.  # noqa: E501

        :return: The estimated_delivery_date_time of this ShipmentSchedule.  # noqa: E501
        :rtype: datetime
        """
        return self._estimated_delivery_date_time

    @estimated_delivery_date_time.setter
    def estimated_delivery_date_time(self, estimated_delivery_date_time):
        """Sets the estimated_delivery_date_time of this ShipmentSchedule.

        Date on which the shipment is expected to reach the customer delivery location. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.  # noqa: E501

        :param estimated_delivery_date_time: The estimated_delivery_date_time of this ShipmentSchedule.  # noqa: E501
        :type: datetime
        """

        self._estimated_delivery_date_time = estimated_delivery_date_time

    @property
    def appt_window_start_date_time(self):
        """Gets the appt_window_start_date_time of this ShipmentSchedule.  # noqa: E501

        The date and time at the start of the appointment window when the shipment is expected to be delivered. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.  # noqa: E501

        :return: The appt_window_start_date_time of this ShipmentSchedule.  # noqa: E501
        :rtype: datetime
        """
        return self._appt_window_start_date_time

    @appt_window_start_date_time.setter
    def appt_window_start_date_time(self, appt_window_start_date_time):
        """Sets the appt_window_start_date_time of this ShipmentSchedule.

        The date and time at the start of the appointment window when the shipment is expected to be delivered. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.  # noqa: E501

        :param appt_window_start_date_time: The appt_window_start_date_time of this ShipmentSchedule.  # noqa: E501
        :type: datetime
        """

        self._appt_window_start_date_time = appt_window_start_date_time

    @property
    def appt_window_end_date_time(self):
        """Gets the appt_window_end_date_time of this ShipmentSchedule.  # noqa: E501

        The date and time at the end of the appointment window when the shipment is expected to be delivered. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.  # noqa: E501

        :return: The appt_window_end_date_time of this ShipmentSchedule.  # noqa: E501
        :rtype: datetime
        """
        return self._appt_window_end_date_time

    @appt_window_end_date_time.setter
    def appt_window_end_date_time(self, appt_window_end_date_time):
        """Sets the appt_window_end_date_time of this ShipmentSchedule.

        The date and time at the end of the appointment window when the shipment is expected to be delivered. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.  # noqa: E501

        :param appt_window_end_date_time: The appt_window_end_date_time of this ShipmentSchedule.  # noqa: E501
        :type: datetime
        """

        self._appt_window_end_date_time = appt_window_end_date_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ShipmentSchedule, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ShipmentSchedule):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ShipmentSchedule):
            return True

        return self.to_dict() != other.to_dict()
