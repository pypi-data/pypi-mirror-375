[project]
name = "open-stocks-mcp"
version = "0.6.4"
description = "MCP Server based on open stock API packages like Robin Stocks"
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [
    { name = "Wes Etheredge", email = "jwesleye@gmail.com" }
]
maintainers = [
    { name = "Wes Etheredge", email = "jwesleye@gmail.com" }
]
keywords = ["mcp", "stocks", "robin-stocks", "trading", "finance", "api"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]

dependencies = [
    "mcp>=1.0.0",
    "robin-stocks>=3.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "anyio>=4.5",
    "click>=8.0.0",
    "cachetools>=5.3.0",
    "requests>=2.31.0",
    "aiofiles>=23.2.0",
    "cryptography>=41.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "sse-starlette>=1.8.0",
    "jsonrpclib-pelix>=0.4.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.7.0",
    "mypy>=1.13.0",
    "black>=24.0.0",
    "pre-commit>=4.0.0",
    "httpx>=0.26.0",
]

[project.urls]
"Homepage" = "https://github.com/Open-Agent-Tools/open-stocks-mcp"
"Bug Tracker" = "https://github.com/Open-Agent-Tools/open-stocks-mcp/issues"
"Documentation" = "https://github.com/Open-Agent-Tools/open-stocks-mcp#readme"
"Source Code" = "https://github.com/Open-Agent-Tools/open-stocks-mcp"

[project.scripts]
open-stocks-mcp = "open_stocks_mcp.server.app:main"
open-stocks-mcp-server = "open_stocks_mcp.server.app:main"
open-stocks-mcp-client = "open_stocks_mcp.client.app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]
exclude = [
    "/.git",
    "/.github",
    "/__pycache__",
    "/.pytest_cache",
    "/.mypy_cache",
    "/.ruff_cache",
    "/.venv",
    "/.env",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".DS_Store",
]

[tool.hatch.version]
path = "src/open_stocks_mcp/__init__.py"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "B", "A", "C4", "SIM", "RUF"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_ignores = true
exclude = ["examples/"]

[[tool.mypy.overrides]]
module = "robin_stocks.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google.adk.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests (may require credentials)",
    "live_market: marks tests that require live market data",
    "login_flow: marks tests for the complete login flow with real credentials",
    "asyncio: marks tests as asyncio tests",
    "agent_evaluation: marks tests as ADK agent evaluation tests",
    "exception_test: marks tests that handle exceptions and error states (skipped by default for faster test runs)",
    "unit: marks tests as fast unit tests",
    "performance: marks tests as performance/benchmark tests",
    "auth_required: marks tests that require authentication",
    "rate_limited: marks tests that may hit rate limits",
    "journey_account: Account management tests (account_info, profiles, settings)",
    "journey_portfolio: Portfolio & holdings tests (portfolio, positions, build_holdings)",
    "journey_market_data: Stock quotes & market info tests (stock_price, market_hours, search)",
    "journey_research: Earnings, ratings, news tests (stock_earnings, dividends, ratings)",
    "journey_watchlists: Watchlist management tests (all_watchlists, add/remove)",
    "journey_options: Options analysis tests (options_chains, positions, market_data)",
    "journey_notifications: Alerts & notifications tests (notifications, margin_calls)",
    "journey_system: Health & monitoring tests (health_check, metrics, session_status)",
    "journey_advanced_data: Level II & premium features tests (pricebook, level2_data)",
    "journey_market_intelligence: Movers & trends tests (top_movers, top_100_stocks)",
    "journey_trading: Trading operations tests (buy/sell orders, cancellation)",
]

[tool.uv]
managed = true

[dependency-groups]
dev = [
    "pytest-cov>=6.2.1",
]

[tool.hatch.build]

[tool.hatch.build.sources]
"src" = ""

