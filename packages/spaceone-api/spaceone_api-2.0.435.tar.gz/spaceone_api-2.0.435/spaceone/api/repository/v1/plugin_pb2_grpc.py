# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from spaceone.api.repository.v1 import plugin_pb2 as spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in spaceone/api/repository/v1/plugin_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class PluginStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.register = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/register',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RegisterPluginRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
                _registered_method=True)
        self.update = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/update',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.UpdatePluginRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
                _registered_method=True)
        self.deregister = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/deregister',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.enable = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/enable',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
                _registered_method=True)
        self.disable = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/disable',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
                _registered_method=True)
        self.get_versions = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/get_versions',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RepositoryPluginRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.VersionsInfo.FromString,
                _registered_method=True)
        self.get = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/get',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RepositoryPluginRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
                _registered_method=True)
        self.list = channel.unary_unary(
                '/spaceone.api.repository.v1.Plugin/list',
                request_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginQuery.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginsInfo.FromString,
                _registered_method=True)


class PluginServicer(object):
    """Missing associated documentation comment in .proto file."""

    def register(self, request, context):
        """Registers a Plugin. The parameter `registry_type`, meaning container registry type, can be either `DOCKER_HUB` or `AWS_PRIVATE_ECR`. The default value of the `registry_type` is `DOCKER_HUB`. The parameter `registry_url` is required if the `registry_type` is not `DOCKER_HUB`. The parameter `image` is limited to 40 characters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Updates a specific Plugin registered. A Plugin can be updated only if its Repository's `repository_type` is `local`. You can make changes in Plugin settings, including `template` and its options, `schema`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deregister(self, request, context):
        """Deregisters and deletes a specific Plugin. You must specify the `plugin_id` of the Plugin to deregister.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enable(self, request, context):
        """Enables a specific Plugin. If the Plugin is enabled, the Plugin can be used as its parameter `state` becomes `ENABLED`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disable(self, request, context):
        """Disables a specific Plugin. If the Plugin is disabled, the Plugin cannot be used as its parameter `state` becomes `DISABLED`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_versions(self, request, context):
        """Gets all version data of a specific Plugin from its Repository. The parameter `plugin_id` is used as an identifier of a Plugin to get version data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Gets a specific Plugin. Prints detailed information about the Plugin, including  `image`, `registry_url`, and `state`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list(self, request, context):
        """Gets a list of all Plugins registered in a specific Repository. The parameter `repository_id` is used as an identifier of a Repository to get its list of Plugins. You can use a query to get a filtered list of Plugins.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PluginServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'register': grpc.unary_unary_rpc_method_handler(
                    servicer.register,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RegisterPluginRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.UpdatePluginRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.SerializeToString,
            ),
            'deregister': grpc.unary_unary_rpc_method_handler(
                    servicer.deregister,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'enable': grpc.unary_unary_rpc_method_handler(
                    servicer.enable,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.SerializeToString,
            ),
            'disable': grpc.unary_unary_rpc_method_handler(
                    servicer.disable,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.SerializeToString,
            ),
            'get_versions': grpc.unary_unary_rpc_method_handler(
                    servicer.get_versions,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RepositoryPluginRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.VersionsInfo.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RepositoryPluginRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.SerializeToString,
            ),
            'list': grpc.unary_unary_rpc_method_handler(
                    servicer.list,
                    request_deserializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginQuery.FromString,
                    response_serializer=spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginsInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'spaceone.api.repository.v1.Plugin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('spaceone.api.repository.v1.Plugin', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Plugin(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/register',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RegisterPluginRequest.SerializeToString,
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/update',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.UpdatePluginRequest.SerializeToString,
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deregister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/deregister',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def enable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/enable',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.SerializeToString,
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def disable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/disable',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginRequest.SerializeToString,
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_versions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/get_versions',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RepositoryPluginRequest.SerializeToString,
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.VersionsInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/get',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.RepositoryPluginRequest.SerializeToString,
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/spaceone.api.repository.v1.Plugin/list',
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginQuery.SerializeToString,
            spaceone_dot_api_dot_repository_dot_v1_dot_plugin__pb2.PluginsInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
