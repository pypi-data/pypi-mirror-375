name: Main Pipeline

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

permissions:
  contents: write
  pull-requests: write
  actions: write
  issues: write

jobs:
  test:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/release-test.yml

  release-please:
    if: github.event_name == 'push'
    uses: circlefin/circle-public-github-workflows/.github/workflows/conventional-commit-release.yaml@v1
    with:
      release_type: python
      additional_unqualified_tags: true
      extra_tags: stable
    secrets:
      RELEASE_TOKEN: ${{ secrets.PUBLIC_RELEASES_TOKEN }}
      RELEASE_ACTOR_GPG_PRIVATE_KEY: ${{ secrets.PUBLIC_RELEASES_GPG_PRIVATE_KEY }}
      RELEASE_ACTOR_GPG_PASSPHRASE: ${{ secrets.PUBLIC_RELEASES_GPG_PASSPHRASE }}
      RELEASE_ACTOR_GPG_KEY_FINGERPRINT: ${{ secrets.PUBLIC_RELEASES_GPG_FINGERPRINT }}

  pypi-publish:
    name: Publish to PyPI
    if: needs.release-please.outputs.release_created == 'true'
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
          
      - name: Build package
        run: python -m build
        
      - name: Check distribution
        run: twine check dist/*
        
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

      - name: Upload build artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  github-release:
    name: Create GitHub Release with Assets
    if: needs.release-please.outputs.release_created == 'true'
    needs: [release-please, pypi-publish]
    uses: circlefin/circle-public-github-workflows/.github/workflows/attach-release-assets.yaml@v1
    with:
      release_tag: ${{ needs.release-please.outputs.release_tag }}
      artifact_file_globs: |
        *.whl
        *.tar.gz
      create_manifest: true
      generate_sbom: true
