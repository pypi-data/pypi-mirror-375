# ============================================================================
# This file was autogenerated
# It is presented side to side with its source: call_policies_test.h
#    (see integration_tests/bindings/lg_mylib/__init__pyi which contains the full
#     stub code, including this code)
# ============================================================================

# type: ignore

# <litgen_stub> // Autogenerated code below! Do not edit!
####################    <generated_from:call_policies_test.h>    ####################

# ============================================================================
# call_guard
# ============================================================================
# If you add a comment to the function with reads:
#     py::call_guard<YourCallGuard>()
# Then, it will be taken into account
# See https://pybind11.readthedocs.io/en/stable/advanced/functions.html#call-guard
# The comment may be a comment on previous line or an end-of-line comment

def call_guard_tester() -> None:
    """// py::call_guard<CallGuardLogger>()"""
    pass

# ============================================================================
# keep-alive
# ============================================================================
# If you add a comment to the function with reads:
#     py::keep-alive<1, 2>()
# Then, it will be taken into account
# See https://pybind11.readthedocs.io/en/stable/advanced/functions.html#keep-alive
# The comment may be a comment on previous line or an end-of-line comment
#
# (No integration test implemented for this)

# ============================================================================
# return value policy
# => see doc inside return_value_policy_test.h
# ============================================================================

class CallGuardLogger:
    """============================================================================
    CallGuardLogger: dummy call guard for the tests
    ============================================================================
    """

    def __init__(self) -> None:
        pass
    nb_construct: int  # (C++ static member)
    nb_destroy: int  # (C++ static member)

####################    </generated_from:call_policies_test.h>    ####################

# </litgen_stub> // Autogenerated code end!
