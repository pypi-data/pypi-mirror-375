[build-system]
requires = ["setuptools>=64.0"]
build-backend = "setuptools.build_meta"

[project]
name = "metamachine"
version = "0.1.0"
description = "A simulation framework for modular robots"
authors = [
    { name = "Chen Yu", email = "chenyu@u.northwestern.edu" }
]
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
keywords = ["robotics", "simulation", "modular robots", "physics simulation", "reinforcement learning", "evolutionary robotics", "robot evolution", "morphology"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    # Core scientific computing
    "numpy>=1.24.0",
    
    # Simulation and RL
    "gymnasium>=0.29.0",
    "mujoco>=3.0.0",
    
    # Configuration management
    "omegaconf>=2.3.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",  # Parallel testing
    
    # Code formatting and linting
    "black>=24.0.0",
    "isort>=5.13.0",
    "ruff>=0.1.0",  # Fast modern linter/formatter
    
    # Type checking
    "mypy>=1.8.0",
    
    # Documentation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",  # Markdown support
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/chenaah/metamachine"
Repository = "https://github.com/chenaah/metamachine.git"
Documentation = "https://github.com/chenaah/metamachine#readme"
"Bug Tracker" = "https://github.com/chenaah/metamachine/issues"
"Changelog" = "https://github.com/chenaah/metamachine/releases"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["metamachine"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88


# Ruff configuration (modern linter/formatter)
[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mujoco.*",
    "gymnasium.*",
    "omegaconf.*",
]
ignore_missing_imports = true

# Setuptools configuration for package data
[tool.setuptools.packages.find]
where = ["."]
include = ["metamachine*"]
exclude = ["tests*", "debug*", "logs*", "*.egg-info*", "*__pycache__*"]

[tool.setuptools.package-data]
metamachine = [
    "assets/**/*",
    "environments/configs/default_configs/*.yaml",
    "py.typed",  # PEP 561 - package supports typing
]

# Bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101"]  # Skip assert_used test