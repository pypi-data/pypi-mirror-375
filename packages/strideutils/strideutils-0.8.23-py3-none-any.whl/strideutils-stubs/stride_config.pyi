from collections.abc import Generator
from dataclasses import dataclass, field

import yaml
from _typeshed import Incomplete

MISSING_CONFIG_MSG: str
ENV: Incomplete

def get_redis_password_env_var(db_name: str) -> str: ...
@dataclass(frozen=True)
class Environment:
    TWILIO_ALERTS_NUMBER = ...
    TWILIO_ACCOUNT_ID = ...
    TWILIO_API_TOKEN = ...
    STRIDEBOT_API_TOKEN = ...
    STRIDEBOT_APP_TOKEN = ...
    SLACK_CHANNEL_OVERRIDE = ...
    PUBLICSHEETS_AUTH = ...
    COINGECKO_API_TOKEN = ...
    TELEGRAM_BOT_TOKEN = ...
    @staticmethod
    def get_redis_password_var(db_name: str) -> str: ...

def get_env_or_raise(variable_name: str) -> str: ...
@dataclass
class ConfigObj:
    def __getattribute__(self, name): ...
    def __iter__(self): ...
    def __contains__(self, field) -> bool: ...

class ConfigDict(dict):
    def __getitem__(self, key): ...

class Loader(yaml.FullLoader):
    def construct_yaml_map(self, node) -> Generator[Incomplete]: ...

@dataclass(repr=False)
class ChainConfig(ConfigObj):
    name: str = ...
    id: str = ...
    coingecko_name: str = ...
    denom: str = ...
    denom_decimals: int = ...
    ticker: str = ...
    api_endpoint: str = ...
    rpc_endpoint: str = ...
    evm_chain: bool = ...

@dataclass(repr=False)
class StrideChainConfig(ChainConfig):
    library_api_endpoint: str = ...
    library_rpc_endpoint: str = ...

@dataclass(repr=False)
class HostChainConfig(ChainConfig):
    inflation_frequency_hours: int = ...
    denom_on_stride: str = ...
    ica_enabled: bool = ...
    lsm_enabled: bool = ...

@dataclass
class RedisConfig(ConfigObj):
    host: str
    port: int
    ssl: bool = ...

@dataclass(repr=False)
class Config(ConfigObj):
    ENV: str
    timezone: str = ...
    founders: list[str] = field(default_factory=Incomplete)
    redis: dict[str, RedisConfig] = field(default_factory=dict)
    alerts_playbook: str = ...
    slack_channels: ConfigDict = field(default_factory=ConfigDict)
    stride: StrideChainConfig = field(default_factory=StrideChainConfig)
    @property
    def host_zones(self) -> list[HostChainConfig]: ...
    @property
    def stakeibc_host_zones(self) -> list[HostChainConfig]: ...
    @property
    def app_chains(self) -> list[ChainConfig]: ...
    @property
    def chains(self) -> list[ChainConfig]: ...
    @property
    def host_zone_names(self) -> list[str]: ...
    @property
    def app_chain_names(self) -> list[str]: ...
    def get_chain(
        self,
        name: str | None = None,
        id: str | None = None,
        ticker: str | None = None,
        denom: str | None = None,
        denom_on_stride: str | None = None,
    ) -> ChainConfig: ...
    def get_host_chain(
        self,
        name: str | None = None,
        id: str | None = None,
        ticker: str | None = None,
        denom: str | None = None,
        denom_on_stride: str | None = None,
    ) -> HostChainConfig: ...

config: Config
