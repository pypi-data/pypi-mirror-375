from typing import IO, TextIO

from bear_dereth.constants.enums.log_level import LogLevel

class SimpleLogger[T: TextIO | IO]:
    level: LogLevel
    file: T
    buffer: list[str]

    def __init__(self, level: str | int | LogLevel = "DEBUG", file: T | None = None) -> None: ...
    def print(self, msg: object, end: str = "\n") -> None: ...
    def log(self, level: LogLevel, msg: object, *args, **kwargs) -> None: ...
    def verbose(self, msg: object, *args, **kwargs) -> None: ...
    def debug(self, msg: object, *args, **kwargs) -> None: ...
    def info(self, msg: object, *args, **kwargs) -> None: ...
    def warning(self, msg: object, *args, **kwargs) -> None: ...
    def error(self, msg: object, *args, **kwargs) -> None: ...
    def success(self, msg: object, *args, **kwargs) -> None: ...
    def failure(self, msg: object, *args, **kwargs) -> None: ...
    def exception(self, msg: object, *args, exc_info: bool = True, **kwargs) -> None: ...
