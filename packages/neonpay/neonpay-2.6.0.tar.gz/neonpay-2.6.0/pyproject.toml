[build-system]
requires = ["setuptools>=78.1.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neonpay"
dynamic = ["version"]
description = "Modern Telegram Stars payment library with multi-bot support and enhanced security"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Abbas Sultanov", email = "sultanov.abas@outlook.com"}
]
maintainers = [
    {name = "Abbas Sultanov", email = "sultanov.abas@outlook.com"}
]
keywords = [
    "telegram", "telegram-bot", "payment", "stars", "xtr", "crypto",
    "pyrogram", "aiogram", "python-telegram-bot", "telebot", "webhook",
    "security", "validation", "async", "payment-processing"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications :: Chat",
    "Topic :: Office/Business :: Financial",
    "Topic :: Security",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: AsyncIO",
    "Typing :: Typed"
]
requires-python = ">=3.9"
dependencies = [
    "aiohttp>=3.8.0",
    "typing-extensions>=4.0.0",
    "tgcrypto>=1.2.0"
]

[project.optional-dependencies]
pyrogram = ["pyrogram>=2.0.0", "tgcrypto>=1.2.0"]
aiogram = ["aiogram>=3.0.0"]
ptb = ["python-telegram-bot>=20.0"]
telebot = ["pyTelegramBotAPI>=4.0.0"]
raw = ["aiohttp>=3.8.0"]
sync = ["aiohttp>=3.8.0"]
web = ["aiohttp>=3.8.0", "aiofiles>=23.0.0"]
all = [
    "pyrogram>=2.0.0",
    "tgcrypto>=1.2.0",
    "aiogram>=3.0.0",
    "python-telegram-bot>=20.0",
    "pyTelegramBotAPI>=4.0.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "ruff>=0.0.280"
]

[project.urls]
Homepage = "https://github.com/Abbasxan/neonpay"
Documentation = "https://github.com/Abbasxan/neonpay#readme"
Repository = "https://github.com/Abbasxan/neonpay"
"Bug Tracker" = "https://github.com/Abbasxan/neonpay/issues"
"Security Policy" = "https://github.com/Abbasxan/neonpay/security/policy"
"Changelog" = "https://github.com/Abbasxan/neonpay/blob/main/CHANGELOG.md"
"Migration Guide" = "https://github.com/Abbasxan/neonpay/blob/main/docs/en/MIGRATION.md"

[project.scripts]
neonpay = "neonpay.cli:main"

[tool.setuptools.dynamic]
version = {attr = "neonpay._version.__version__"}

[tool.setuptools.packages.find]
include = ["neonpay*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
neonpay = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["neonpay"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=neonpay",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--asyncio-mode=auto"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security tests",
    "validation: marks tests as validation tests",
    "webhook: marks tests as webhook tests",
    "adapter: marks tests as adapter tests"
]
asyncio_mode = "auto"

