[project]
name = "mseep-rootly-mcp-server"
version = "2.0.15"
description = "A Model Context Protocol server for Rootly APIs using OpenAPI spec"
requires-python = ">=3.12"
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
keywords = [
    "rootly",
    "mcp",
    "llm",
    "automation",
    "incidents",
]
license = "Apache-2.0"
license-files = [
    "LICEN[CS]E*",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastmcp>=2.9.0",
    "requests>=2.28.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "brotli>=1.0.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
]

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[project.urls]
Homepage = "https://github.com/Rootly-AI-Labs/Rootly-MCP-server"
Issues = "https://github.com/Rootly-AI-Labs/Rootly-MCP-server/issues"

[project.scripts]
rootly-mcp-server = "rootly_mcp_server.__main__:main"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.0.0",
]

[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "src/rootly_mcp_server",
]

[tool.hatch.build.targets.wheel.sources]
src = ""

[tool.hatch.build.targets.wheel.include]
"src/rootly_mcp_server/data" = "rootly_mcp_server/data"

[tool.hatch.metadata]
allow-direct-references = true

[tool.uv]
dev-dependencies = [
    "pyright>=1.1.404",
    "ruff>=0.7.3",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-timeout>=2.2.0",
    "respx>=0.20.0",
    "sseclient-py>=1.8.0",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src/rootly_mcp_server",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "remote: Remote server tests (require API token)",
    "slow: Tests that take longer to run",
]
asyncio_mode = "auto"
