//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxFileDialogButton : wxFileDialogCustomControl   /NoDefaultCtors/
{
    %Docstring
        Represents a custom button inside wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
};  // end of class wxFileDialogButton


class wxFileDialogChoice : wxFileDialogCustomControl   /NoDefaultCtors/
{
    %Docstring
        Represents a custom read-only combobox inside wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    int GetSelection() const;
    %Docstring
        GetSelection() -> int
        
        Return the index of the selected item, possibly wxNOT_FOUND.
    %End

    void SetSelection(
        int n
    );
    %Docstring
        SetSelection(n) -> None
        
        Set the selection to the item with the given index.
    %End

    public:


    %Property(name=Selection, get=GetSelection, set=SetSelection)
};  // end of class wxFileDialogChoice


class wxFileDialogCheckBox : wxFileDialogCustomControl   /NoDefaultCtors/
{
    %Docstring
        Represents a custom checkbox inside wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    bool GetValue() const;
    %Docstring
        GetValue() -> bool
        
        Return true if the checkbox is checked.
    %End

    void SetValue(
        bool value
    );
    %Docstring
        SetValue(value) -> None
        
        Check or uncheck the checkbox.
    %End

    public:


    %Property(name=Value, get=GetValue, set=SetValue)
};  // end of class wxFileDialogCheckBox


class wxFileDialogCustomControl : wxEvtHandler   /NoDefaultCtors/
{
    %Docstring
        The base class for all wxFileDialog custom controls.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    void Show(
        bool show = true
    );
    %Docstring
        Show(show=True) -> None
        
        Show or hide this control.
    %End

    void Hide();
    %Docstring
        Hide() -> None
        
        Hide this control.
    %End

    void Enable(
        bool enable = true
    );
    %Docstring
        Enable(enable=True) -> None
        
        Enable or disable this control.
    %End

    void Disable();
    %Docstring
        Disable() -> None
        
        Disable this control.
    %End

};  // end of class wxFileDialogCustomControl


class wxFileDialogCustomize   /NoDefaultCtors/
{
    %Docstring
        Used with wxFileDialogCustomizeHook to add custom controls to
        wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    wxFileDialogButton * AddButton(
        const wxString & label
    );
    %Docstring
        AddButton(label) -> FileDialogButton
        
        Add a button with the specified label.
    %End

    wxFileDialogCheckBox * AddCheckBox(
        const wxString & label
    );
    %Docstring
        AddCheckBox(label) -> FileDialogCheckBox
        
        Add a checkbox with the specified label.
    %End

    wxFileDialogRadioButton * AddRadioButton(
        const wxString & label
    );
    %Docstring
        AddRadioButton(label) -> FileDialogRadioButton
        
        Add a radio button with the specified label.
    %End

    wxFileDialogChoice * AddChoice(
        const wxArrayString& strings
    );
    %Docstring
        AddChoice(strings) -> FileDialogChoice
        
        Add a read-only combobox with the specified contents.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxFileDialogCustomize_AddChoice(sipCpp, strings);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxFileDialogChoice * _wxFileDialogCustomize_AddChoice(wxFileDialogCustomize* self, const wxArrayString* strings)
    {
        const wxString* ptr = &strings->front();
        return self->AddChoice(strings->size(), ptr);
    }
    %End

    wxFileDialogTextCtrl * AddTextCtrl(
        const wxString & label = wxString()
    );
    %Docstring
        AddTextCtrl(label="") -> FileDialogTextCtrl
        
        Add a text control with an optional label preceding it.
    %End

    wxFileDialogStaticText * AddStaticText(
        const wxString & label
    );
    %Docstring
        AddStaticText(label) -> FileDialogStaticText
        
        Add a static text with the given contents.
    %End

};  // end of class wxFileDialogCustomize


class wxFileDialogCustomizeHook
{
    %Docstring
        Base class for customization hooks used with wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    virtual
    void AddCustomControls(
        wxFileDialogCustomize & customizer
    ) = 0;
    %Docstring
        AddCustomControls(customizer) -> None
        
        Must be overridden to add custom controls to the dialog using the
        provided customizer object.
    %End

    virtual
    void UpdateCustomControls();
    %Docstring
        UpdateCustomControls() -> None
        
        May be overridden to update the custom controls whenever something
        changes in the dialog.
    %End

    virtual
    void TransferDataFromCustomControls();
    %Docstring
        TransferDataFromCustomControls() -> None
        
        Should typically be overridden to save the values of the custom
        controls when the dialog is accepted.
    %End

};  // end of class wxFileDialogCustomizeHook


class wxFileDialogRadioButton : wxFileDialogCustomControl   /NoDefaultCtors/
{
    %Docstring
        Represents a custom radio button inside wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    bool GetValue() const;
    %Docstring
        GetValue() -> bool
        
        Return true if the radio button is selected.
    %End

    void SetValue(
        bool value
    );
    %Docstring
        SetValue(value) -> None
        
        Select the value of the radio button.
    %End

    public:


    %Property(name=Value, get=GetValue, set=SetValue)
};  // end of class wxFileDialogRadioButton


class wxFileDialogStaticText : wxFileDialogCustomControl   /NoDefaultCtors/
{
    %Docstring
        Represents a custom static text inside wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    void SetLabelText(
        const wxString & text
    );
    %Docstring
        SetLabelText(text) -> None
        
        Set the text shown in the label.
    %End

    public:


};  // end of class wxFileDialogStaticText


class wxFileDialogTextCtrl : wxFileDialogCustomControl   /NoDefaultCtors/
{
    %Docstring
        Represents a custom text control inside wxFileDialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlgcustomize.h>
    %End

public:
    wxString GetValue() const;
    %Docstring
        GetValue() -> str
        
        Get the current value entered into the control.
    %End

    void SetValue(
        const wxString & text
    );
    %Docstring
        SetValue(text) -> None
        
        Set the current control value.
    %End

    public:


    %Property(name=Value, get=GetValue, set=SetValue)
};  // end of class wxFileDialogTextCtrl



//---------------------------------------------------------------------------

