"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.discovery.v0.conditions.heat_pb2
import ansys.api.discovery.v0.discoverymodels_pb2
import grpc

class HeatStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    CreateHeatVolumetricTotal: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditions.heat_pb2.HeatTotalCreationResponse] = ...
    """Heat condition methods"""

    CreateHeatVolumetricDistributed: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditions.heat_pb2.HeatVolumetricDistributedCreationResponse] = ...

    CreateHeatSurfaceTotal: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditions.heat_pb2.HeatTotalCreationResponse] = ...

    CreateHeatSurfaceDistributed: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditions.heat_pb2.HeatSurfaceDistributedCreationResponse] = ...

    ChangeHeatLocation: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationExtendedRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeTotalHeat: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeHeatPerUnitVolume: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeHeatPerUnitArea: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeHeatSpecification: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions.heat_pb2.ChangeHeatSpecificationRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...


class HeatServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateHeatVolumetricTotal(self,
        request: ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions.heat_pb2.HeatTotalCreationResponse:
        """Heat condition methods"""
        pass

    @abc.abstractmethod
    def CreateHeatVolumetricDistributed(self,
        request: ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions.heat_pb2.HeatVolumetricDistributedCreationResponse: ...

    @abc.abstractmethod
    def CreateHeatSurfaceTotal(self,
        request: ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions.heat_pb2.HeatTotalCreationResponse: ...

    @abc.abstractmethod
    def CreateHeatSurfaceDistributed(self,
        request: ansys.api.discovery.v0.conditions.heat_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions.heat_pb2.HeatSurfaceDistributedCreationResponse: ...

    @abc.abstractmethod
    def ChangeHeatLocation(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationExtendedRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeTotalHeat(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeHeatPerUnitVolume(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeHeatPerUnitArea(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeHeatSpecification(self,
        request: ansys.api.discovery.v0.conditions.heat_pb2.ChangeHeatSpecificationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...


def add_HeatServicer_to_server(servicer: HeatServicer, server: grpc.Server) -> None: ...
