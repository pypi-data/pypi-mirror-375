"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.discovery.v0.monitors_pb2
import grpc

class MonitorsStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    CreateMonitor: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.monitors_pb2.CreateMonitorRequest,
        ansys.api.discovery.v0.monitors_pb2.MonitorCreationResponse] = ...
    """Creates a new monitor"""

    GetAllMonitors: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.monitors_pb2.GetAllMonitorsRequest,
        ansys.api.discovery.v0.monitors_pb2.GetAllMonitorsResponse] = ...

    GetMonitorValues: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.monitors_pb2.GetMonitorValuesRequest,
        ansys.api.discovery.v0.monitors_pb2.GetMonitorValuesResponse] = ...


class MonitorsServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateMonitor(self,
        request: ansys.api.discovery.v0.monitors_pb2.CreateMonitorRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.monitors_pb2.MonitorCreationResponse:
        """Creates a new monitor"""
        pass

    @abc.abstractmethod
    def GetAllMonitors(self,
        request: ansys.api.discovery.v0.monitors_pb2.GetAllMonitorsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.monitors_pb2.GetAllMonitorsResponse: ...

    @abc.abstractmethod
    def GetMonitorValues(self,
        request: ansys.api.discovery.v0.monitors_pb2.GetMonitorValuesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.monitors_pb2.GetMonitorValuesResponse: ...


def add_MonitorsServicer_to_server(servicer: MonitorsServicer, server: grpc.Server) -> None: ...
