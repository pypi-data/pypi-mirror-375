[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"


[project]
name = "configaroo"
description = "Bouncy handling of configuration files"
readme = "README.md"
authors = [{ name = "Geir Arne Hjelle", email = "geirarne@gmail.com" }]
maintainers = [{ name = "Geir Arne Hjelle", email = "geirarne@gmail.com" }]
requires-python = ">=3.11"
license = "MIT"
license-files = ["LICENSE"]
keywords = ["configuration", "configuration-management", "toml", "json"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = ["pydantic>=2.0", "pyplugs>=0.5.4"]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/gahjelle/configaroo"
github = "https://github.com/gahjelle/configaroo"
issues = "https://github.com/gahjelle/configaroo/issues"
changelog = "https://github.com/gahjelle/configaroo/releases"

[dependency-groups]
build = ["build>=1.2.2.post1", "twine>=6.1.0"]
ci = ["pytest>=8.4.1", "rich>=14.1.0", "ruff>=0.12.7", "tomli-w>=1.2.0"]
dev = [
    { include-group = "ci" },
    { include-group = "test" },
    "bumpver>=2024.1130",
    "ipython>=8.36.0",
    "pre-commit>=4.2.0",
    "pyright>=1.1.404",
]
test = ["pytest>=8.4.1", "pytest-cov>=6.2.1", "tomli-w>=1.2.0"]


[tool.setuptools.dynamic]
version = { attr = "configaroo.__version__" }


[tool.ruff]
target-version = "py311"
exclude = [".git", "venv", "migrations", "node_modules"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # Trailing comma missing (handled by formatter)
    "D203",   # Force blank line before class docstring (incompatible with D211)
    "D213",   # Start docstring on second line (incompatible with D212)
]

[tool.ruff.lint.per-file-ignores]
# D101: Missing docstring in public class (Basemodel classes may break this)
# PLR2004: Magic value used in comparison (OK for tests)
# S101: Use of `assert` (OK for tests)
# SLF001: Private member accessed (OK for tests)
# UP018: Replace with string/integer/... literal (OK for typed tests)
"examples/*/config.py" = ["D101"]
"tests/schema.py" = ["D101"]
"tests/test_*.py" = ["PLR2004", "S101", "SLF001", "UP018"]
"tests/*/test_*.py" = ["S101"]

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
verboseOutput = false
include = ["src/", "tests/", "examples/"]
venv = ".venv"

reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"

[tool.bumpver]
current_version = "v0.6.0"
version_pattern = "vMAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"']
"src/configaroo/__init__.py" = ['__version__ = "MAJOR.MINOR.PATCH"']
