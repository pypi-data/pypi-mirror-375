# coding: utf-8

"""
    Kadoa API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Contact: support@kadoa.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v5_workflows_id_put200_response import V5WorkflowsIdPut200Response

class TestV5WorkflowsIdPut200Response(unittest.TestCase):
    """V5WorkflowsIdPut200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V5WorkflowsIdPut200Response:
        """Test V5WorkflowsIdPut200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V5WorkflowsIdPut200Response`
        """
        model = V5WorkflowsIdPut200Response()
        if include_optional:
            return V5WorkflowsIdPut200Response(
                id = '',
                name = '',
                description = '',
                state = '',
                record_limit = 56,
                workflow_tags = [
                    openapi_client.models._v5_workflows__id__put_200_response_workflow_tags_inner._v5_workflows__id__put_200_response_workflowTags_inner(
                        id = '', 
                        name = '', 
                        description = '', )
                    ],
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return V5WorkflowsIdPut200Response(
        )
        """

    def testV5WorkflowsIdPut200Response(self):
        """Test V5WorkflowsIdPut200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
