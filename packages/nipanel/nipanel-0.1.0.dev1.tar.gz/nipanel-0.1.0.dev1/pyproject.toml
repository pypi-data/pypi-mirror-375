[project]
name = "nipanel"
version = "0.1.0-dev1"
license = "MIT"
description = "NI Panel client for Python"
authors = [{name = "NI", email = "opensource@ni.com"}]
maintainers = [
  {name = "Mike Prosser", email = "mike.prosser@emerson.com"},
  {name = "Johann Scholtz", email = "johann.scholtz@emerson.com"},
]
readme = "README.md"
keywords = ["nipanel", "panels"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Manufacturing",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
requires-python = ">=3.9"
dynamic = ["dependencies"]

[project.urls]
repository = "https://github.com/ni/nipanel-python"

[tool.poetry]
packages = [{ include = "nipanel", from = "src" }]
requires-poetry = '>=2.1,<3.0'

[tool.poetry.dependencies]
python = ">=3.9,<4.0,!=3.9.7" # Exclude 3.9.7 due to streamlit not supporting it
grpcio = {version=">=1.49.0,<2.0"}
protobuf = {version=">=4.21"}
typing-extensions = ">=4.13.2"
streamlit = ">=1.24"
nitypes = {version=">=0.1.0dev8", allow-prereleases=true}
numpy = ">=1.22"
debugpy = ">=1.8.1"
ni-grpc-extensions = { version = ">=0.1.0.dev1", allow-prereleases = true }
ni-measurementlink-discovery-v1-client = { version = ">=0.1.0dev0", allow-prereleases = true }
ni-protobuf-types = { version = ">=0.1.0dev4", allow-prereleases = true }
ni-panels-v1-proto = { version = ">=0.1.0dev1", allow-prereleases = true }

[tool.poetry.group.dev.dependencies]
types-grpcio = ">=1.0"
types-protobuf = ">=4.21"
numpy = [
  { version = ">=1.22", python = ">=3.9,<3.12" },
  { version = ">=1.26", python = ">=3.12,<3.13" },
  { version = ">=2.1", python = "^3.13" },
]

[tool.poetry.group.lint.dependencies]
bandit = { version = ">=1.7", extras = ["toml"] }
ni-python-styleguide = ">=0.4.1"
mypy = ">=1.0"
pyright = { version = ">=1.1.400", extras = ["nodejs"] }

[tool.poetry.group.test.dependencies]
pytest = ">=7.2"
pytest-cov = ">=4.0"
pytest-mock = ">=3.0"
# Use a prerelease version of hightime for testing.
hightime = { version = ">=0.2.2", allow-prereleases = true }

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
# The latest Sphinx requires a recent Python version.
Sphinx = [
  { version = ">=7.4", python = ">=3.9,<3.10" },
  { version = ">=8.1", python = ">=3.10,<3.11" },
  { version = ">=8.2", python = "^3.11" },
]
sphinx-rtd-theme = ">=1.0.0"
sphinx-autoapi = ">=1.8.4"
m2r2 = ">=0.3.2"
toml = ">=0.10.2"

[tool.poetry.group.examples]
optional = true

[tool.poetry.group.examples.dependencies]
streamlit-echarts = ">=0.4.0"
extra-streamlit-components = "^0.1.80"
nidaqmx = { version = ">=0.8.0", allow-prereleases = true }
niscope = "^1.4.9"

[build-system]
requires = ["poetry-core>=2.1.0,<3.0"]
build-backend = "poetry.core.masonry.api"

[tool.ni-python-styleguide]
extend_exclude = ".tox,docs"
application-import-names = "nipanel,tests"

[tool.black]
extend-exclude = '\.tox/|docs/'
line-length = 100

[tool.mypy]
files = "examples/,src/nipanel/,tests/"
namespace_packages = true
strict = true

[[tool.mypy.overrides]]
module = [
  "hightime.*",
  "grpc.framework.foundation.*",
  "streamlit_echarts.*",
  # https://github.com/ni/nidaqmx-python/issues/209 - Support type annotations
  "nidaqmx.*",
  "niscope.*",
]
ignore_missing_imports = true

[tool.bandit]
skips = [
  "B101", # assert_used
]

[tool.pytest.ini_options]
addopts = "--doctest-modules --strict-markers"
testpaths = ["src/nipanel", "tests"]

[tool.pyright]
include = ["examples/", "src/", "tests/"]
