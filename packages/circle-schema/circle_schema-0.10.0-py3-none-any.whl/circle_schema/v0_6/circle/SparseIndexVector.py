# automatically generated by the FlatBuffers compiler, do not modify

# namespace: circle

class SparseIndexVector(object):
    NONE = 0
    Int32Vector = 1
    Uint16Vector = 2
    Uint8Vector = 3


def SparseIndexVectorCreator(unionType, table):
    from flatbuffers.table import Table
    if not isinstance(table, Table):
        return None
    if unionType == SparseIndexVector().Int32Vector:
        import circle_schema.v0_6.circle.Int32Vector
        return circle_schema.v0_6.circle.Int32Vector.Int32VectorT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == SparseIndexVector().Uint16Vector:
        import circle_schema.v0_6.circle.Uint16Vector
        return circle_schema.v0_6.circle.Uint16Vector.Uint16VectorT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == SparseIndexVector().Uint8Vector:
        import circle_schema.v0_6.circle.Uint8Vector
        return circle_schema.v0_6.circle.Uint8Vector.Uint8VectorT.InitFromBuf(table.Bytes, table.Pos)
    return None
