[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kilm"
version = "0.5.2"
description = "A command-line tool for managing KiCad libraries across projects and workstations"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Blaž Aristovnik", email = "blaz@paxia.co" },
]
maintainers = [
    { name = "Blaž Aristovnik", email = "blaz@paxia.co" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "Framework :: Pytest",
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "Environment :: Console",
]
keywords = [
    "kicad",
    "library-management",
    "eda",
    "electronics",
    "pcb-design",
    "cli",
]
requires-python = ">=3.9"
dependencies = [
    "click>=8.0",
    "typer>=0.17.4",
    "rich>=14.0.0",
    "packaging>=25.0",
    "pyyaml>=6.0",
    "pathlib>=1.0.1",
    "pathspec>=0.12.1",
    "jinja2>=3.1.6",
    "questionary>=1.10.0",
    "requests>=2.32.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "pyrefly>=0.31.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/barisgit/KiLM"
Documentation = "https://kilm.aristovnik.me"
Repository = "https://github.com/barisgit/KiLM"
"Bug Tracker" = "https://github.com/barisgit/KiLM/issues"

[project.scripts]
kilm = "kicad_lib_manager.main:app"


[tool.hatch.build.targets.wheel]
packages = ["kicad_lib_manager"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.pytest.ini_options]
testpaths = ["tests"] 
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=kicad_lib_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TC",  # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "TC003", # type checking is not required
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]

[tool.pyrefly]
python-version = "3.9"

[tool.coverage.run]
source = ["kicad_lib_manager"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]