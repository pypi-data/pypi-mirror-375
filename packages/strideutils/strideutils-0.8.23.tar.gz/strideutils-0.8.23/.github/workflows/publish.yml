name: Tag and Publish

on:
  pull_request:
    types: [closed]
  workflow_dispatch:

jobs:
  Publish:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps:
      - uses: actions/checkout@v4
        with:
            ref: main
            
      - uses: actions/setup-python@v4
        with:
            python-version: "3.11"

      - name: setup 
        run: |
            python -m pip install -U pip
            pip install --upgrade build setuptools twine wheel bump2version toml-cli mypy
            git config user.name "GitHub Actions"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: check for version label
        id: version-check
        run: |
          # Immediately set version-bumped is true if running manually
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "::set-output name=version-bumped::true"
            exit 0
          fi

          # Otherwise, only set it if the PR is labeled
          labels_json=$(echo '${{ toJson(github.event.pull_request.labels.*.name) }}')
          if echo $labels_json | grep -q "version-"; then
              echo "::set-output name=version-bumped::true"
          fi

      - name: create new tag
        if: steps.version-check.outputs.version-bumped == 'true'
        run: |
            version=$(toml get project.version --toml-path pyproject.toml)
            git tag "v${version}"
            git push origin --tags

      - name: publish to pypi
        if: steps.version-check.outputs.version-bumped == 'true'
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: "${{ secrets.PYPI_TOKEN }}"
        run: |
          # Generate stubs directly into strideutils/
          stubgen --parse-only -p strideutils -o .
          
          # Create MANIFEST.in file
          cat << EOF > MANIFEST.in
          include strideutils/py.typed
          include strideutils/*.pyi
          EOF
          
          # Now build and publish
          python -m build
          twine upload dist/*