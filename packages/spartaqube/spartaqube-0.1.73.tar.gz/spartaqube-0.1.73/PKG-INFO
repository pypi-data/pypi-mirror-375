Metadata-Version: 2.4
Name: spartaqube
Version: 0.1.73
Summary: SpartaQube is a plug and play solution to visualize your data and build web components
Home-page: https://spartaqube.com
Author: Spartacus
Author-email: spartaqube@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: anthropic
Requires-Dist: channels==3.0.4
Requires-Dist: cloudpickle
Requires-Dist: django<5.0,>=4.0
Requires-Dist: django-channels
Requires-Dist: django-cors-headers
Requires-Dist: django_debug_toolbar
Requires-Dist: django-picklefield
Requires-Dist: django-prometheus
Requires-Dist: djangorestframework
Requires-Dist: duckdb
Requires-Dist: gitpython
Requires-Dist: ipython==8.17.2
Requires-Dist: ipykernel==6.29.4
Requires-Dist: jupyter_client
Requires-Dist: legacy-cgi==2.6.2
Requires-Dist: loguru==0.7.2
Requires-Dist: mysql-connector-python
Requires-Dist: networkx
Requires-Dist: nbconvert
Requires-Dist: numpy<=4.0,>=1.18
Requires-Dist: openai
Requires-Dist: openpyxl
Requires-Dist: pandas<=4.0,>=1.0
Requires-Dist: Pillow
Requires-Dist: psycopg2-binary
Requires-Dist: pymongo
Requires-Dist: pymssql
Requires-Dist: PyMySQL
Requires-Dist: pyodbc
Requires-Dist: python-dateutil
Requires-Dist: pytz
Requires-Dist: pyzmq
Requires-Dist: quantstats
Requires-Dist: requests
Requires-Dist: requests-oauthlib
Requires-Dist: simplejson
Requires-Dist: SQLAlchemy
Requires-Dist: statsmodels
Requires-Dist: tiktoken
Requires-Dist: tinykernel
Requires-Dist: tqdm
Requires-Dist: typer
Requires-Dist: uvicorn
Requires-Dist: uvicorn[standard]
Requires-Dist: websocket-client
Requires-Dist: whitenoise
Requires-Dist: yfinance==0.2.61
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# <img src="https://www.spartaquant.com/assets/img/spartaquant/icon-color.png" width="60px" alt="SpartaQube icon" class="logo-default"> SpartaQube

[SpartaQube](https://www.spartaqube.com) is a plug and play solution to visualize your data and build web components

Use SpartaQube to
1. Access your data through already built-in connectors
2. Apply transformations to your data using the SpartaQube notebook
3. Create charts and web components by dragging & dropping your transformed data
4. Launch ephemeral Python kernels to quickly execute Python commands
5. Create interactive dashboards

The rich user interface makes it easy to visualize and retrieve all your components

You can expose and share them with a simple html snippet code

## Installation

#### PIP INSTALL

Install the package via pip with code below:

```python
pip install spartaqube
```

To Upgrade:


```python
pip install --upgrade spartaqube
```

#### DOCKER INSTALL

Install the application via docker with the code below:

```yml
docker run --restart always -v spartaqube:/spartaqube -p 8664:8664 spartaqube/spartaqube
```

At ths stage, the application runs locally and is accessible in your browser at http://localhost:8664

You can change the listening port 8664 to any available port you want. For instance, if you want to assign it to port 9000, you can run the following command:
```yml
docker run --restart always -v spartaqube:/spartaqube -p 9000:9000 -e port=9000 spartaqube/spartaqube
```
Do not forget to also pass the environment variable -e port=9000

Here, the application runs locally and is accessible in your browser at http://localhost:9000

You can also use the following docker-compose.yml to better control the settings:

```json
version: '3'

services:
  spartaqube:
    restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        port: "8664"
        http_proxy: ""
        https_proxy: ""
        workers: ""
    hostname: spartaqube
    volumes:
      - spartaqube:/spartaqube
    ports:
      - "8664:8664"

volumes:
  appdata:
  spartaqube:
  static:
```

Then, you just need to run the command: docker-compose.yml up --build


Or if you want to use another port than the default 8664, like port 9000:
```json
version: '3'

services:
  spartaqube:
    restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        port: "9000"
        http_proxy: ""
        https_proxy: ""
        workers: ""
    hostname: spartaqube
    volumes:
      - spartaqube:/spartaqube
    ports:
      - "9000:9000"

volumes:
  appdata:
  spartaqube:
  static:
```

Get more information regarding the docker application at:
https://hub.docker.com/r/spartaqube/spartaqube


## Jupyter Notebook Integration

SpartaQube can be embedded within your usual Jupyter notebooks

Interact with your data with drag & drop and build your web components in few clicks

1. Import library
```python
from spartaqube import Spartaqube as Spartaqube
spartaqube_obj = Spartaqube()
```

Get your app token and run the API with a registered account:
```python
from spartaqube import Spartaqube as Spartaqube
spartaqube_obj = Spartaqube(app_token)
```

2. List available components
```python
spartaqube_obj.get_widgets()
```

3. Get a specific SpartaQube widget
```python
spartaqube_obj.get_widget("<widget_id>")
```

4. Create a new component using the interactive plot editor
```python
spartaqube_obj.iplot(variable1, variable2, ...)
```

Check out the documentation of the API at https://spartaqube.com/api for more information

