[
  {
    "name": "discovery_list_active_archicads",
    "title": "List Active Archicad Instances",
    "description": "Refreshes connections and lists all actively running and connected Archicad instances.",
    "input_schema": {
      "properties": {},
      "title": "list_active_archicadsArguments",
      "type": "object"
    }
  },
  {
    "name": "app_get_add_on_version",
    "title": "GetAddOnVersion",
    "description": "Retrieves the version of the Tapir Additional JSON Commands Add-On.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_add_on_versionArguments",
      "type": "object"
    }
  },
  {
    "name": "app_get_current_window_type",
    "title": "GetCurrentWindowType",
    "description": "Returns the type of the current (active) window.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_current_window_typeArguments",
      "type": "object"
    }
  },
  {
    "name": "attributes_create_building_materials",
    "title": "CreateBuildingMaterials",
    "description": "Creates Building Material attributes based on the given parameters.",
    "input_schema": {
      "$defs": {
        "BuildingMaterialDataArrayItem": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "Name.",
              "title": "Name",
              "type": "string"
            },
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Identifier.",
              "title": "Id"
            },
            "manufacturer": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Manufacturer.",
              "title": "Manufacturer"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Decription.",
              "title": "Description"
            },
            "connPriority": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Intersection priority.",
              "title": "Connpriority"
            },
            "cutFillIndex": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Index of the Cut Fill.",
              "title": "Cutfillindex"
            },
            "cutFillPen": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Cut Fill Foreground Pen.",
              "title": "Cutfillpen"
            },
            "cutFillBackgroundPen": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Cut Fill Background Pen.",
              "title": "Cutfillbackgroundpen"
            },
            "cutSurfaceIndex": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Index of the Cut Surface.",
              "title": "Cutsurfaceindex"
            },
            "thermalConductivity": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Thermal Conductivity.",
              "title": "Thermalconductivity"
            },
            "density": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Density.",
              "title": "Density"
            },
            "heatCapacity": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Heat Capacity.",
              "title": "Heatcapacity"
            },
            "embodiedEnergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Embodied Energy.",
              "title": "Embodiedenergy"
            },
            "embodiedCarbon": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Embodied Carbon.",
              "title": "Embodiedcarbon"
            }
          },
          "required": [
            "name"
          ],
          "title": "BuildingMaterialDataArrayItem",
          "type": "object"
        },
        "CreateBuildingMaterialsParameters": {
          "additionalProperties": false,
          "properties": {
            "buildingMaterialDataArray": {
              "description": "Array of data to create new Building Materials.",
              "items": {
                "$ref": "#/$defs/BuildingMaterialDataArrayItem"
              },
              "title": "Buildingmaterialdataarray",
              "type": "array"
            },
            "overwriteExisting": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Overwrite the Building Material if exists with the same name. The default is false.",
              "title": "Overwriteexisting"
            }
          },
          "required": [
            "buildingMaterialDataArray"
          ],
          "title": "CreateBuildingMaterialsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateBuildingMaterialsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_building_materialsArguments",
      "type": "object"
    }
  },
  {
    "name": "attributes_create_composites",
    "title": "CreateComposites",
    "description": "Creates Composite attributes based on the given parameters.",
    "input_schema": {
      "$defs": {
        "AttributeId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "AttributeId",
          "type": "object"
        },
        "AttributeIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "attributeId": {
              "$ref": "#/$defs/AttributeId"
            }
          },
          "required": [
            "attributeId"
          ],
          "title": "AttributeIdArrayItem",
          "type": "object"
        },
        "CompositeDataArrayItem": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "Name.",
              "title": "Name",
              "type": "string"
            },
            "useWith": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Array of types the composite can used with.",
              "title": "Usewith"
            },
            "skins": {
              "description": "Array of skin data.",
              "items": {
                "$ref": "#/$defs/Skin"
              },
              "title": "Skins",
              "type": "array"
            },
            "separators": {
              "description": "Array of skin separator data. The number of items must be the number of skins plus one.",
              "items": {
                "$ref": "#/$defs/Separator"
              },
              "title": "Separators",
              "type": "array"
            }
          },
          "required": [
            "name",
            "skins",
            "separators"
          ],
          "title": "CompositeDataArrayItem",
          "type": "object"
        },
        "CreateCompositesParameters": {
          "additionalProperties": false,
          "properties": {
            "compositeDataArray": {
              "description": "Array of data to create Composites.",
              "items": {
                "$ref": "#/$defs/CompositeDataArrayItem"
              },
              "title": "Compositedataarray",
              "type": "array"
            },
            "overwriteExisting": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Overwrite the Composite if exists with the same name. The default is false.",
              "title": "Overwriteexisting"
            }
          },
          "required": [
            "compositeDataArray"
          ],
          "title": "CreateCompositesParameters",
          "type": "object"
        },
        "Separator": {
          "additionalProperties": false,
          "properties": {
            "lineTypeId": {
              "$ref": "#/$defs/AttributeIdArrayItem"
            },
            "linePen": {
              "description": "Separator line pen index.",
              "title": "Linepen",
              "type": "integer"
            }
          },
          "required": [
            "lineTypeId",
            "linePen"
          ],
          "title": "Separator",
          "type": "object"
        },
        "Skin": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "description": "Skin type (Core, Finish, or Other)",
              "title": "Type",
              "type": "string"
            },
            "buildingMaterialId": {
              "$ref": "#/$defs/AttributeIdArrayItem"
            },
            "framePen": {
              "description": "Skin frame pen index.",
              "title": "Framepen",
              "type": "integer"
            },
            "thickness": {
              "description": "Skin thickness (in meters).",
              "title": "Thickness",
              "type": "number"
            }
          },
          "required": [
            "type",
            "buildingMaterialId",
            "framePen",
            "thickness"
          ],
          "title": "Skin",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateCompositesParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_compositesArguments",
      "type": "object"
    }
  },
  {
    "name": "attributes_create_layers",
    "title": "CreateLayers",
    "description": "Creates Layer attributes based on the given parameters.",
    "input_schema": {
      "$defs": {
        "CreateLayersParameters": {
          "additionalProperties": false,
          "properties": {
            "layerDataArray": {
              "description": "Array of data to create new Layers.",
              "items": {
                "$ref": "#/$defs/LayerDataArrayItem"
              },
              "title": "Layerdataarray",
              "type": "array"
            },
            "overwriteExisting": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Overwrite the Layer if exists with the same name. The default is false.",
              "title": "Overwriteexisting"
            }
          },
          "required": [
            "layerDataArray"
          ],
          "title": "CreateLayersParameters",
          "type": "object"
        },
        "LayerDataArrayItem": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "Name.",
              "title": "Name",
              "type": "string"
            },
            "isHidden": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Hide/Show.",
              "title": "Ishidden"
            },
            "isLocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Lock/Unlock.",
              "title": "Islocked"
            },
            "isWireframe": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Force the model to wireframe.",
              "title": "Iswireframe"
            }
          },
          "required": [
            "name"
          ],
          "title": "LayerDataArrayItem",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateLayersParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_layersArguments",
      "type": "object"
    }
  },
  {
    "name": "attributes_get_attributes_by_type",
    "title": "GetAttributesByType",
    "description": "Returns the details of every attribute of the given type.",
    "input_schema": {
      "$defs": {
        "AttributeType": {
          "enum": [
            "Layer",
            "Line",
            "Fill",
            "Composite",
            "Surface",
            "LayerCombination",
            "ZoneCategory",
            "Profile",
            "PenTable",
            "MEPSystem",
            "OperationProfile",
            "BuildingMaterial"
          ],
          "title": "AttributeType",
          "type": "string"
        },
        "GetAttributesByTypeParameters": {
          "additionalProperties": false,
          "properties": {
            "attributeType": {
              "$ref": "#/$defs/AttributeType"
            }
          },
          "required": [
            "attributeType"
          ],
          "title": "GetAttributesByTypeParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetAttributesByTypeParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_attributes_by_typeArguments",
      "type": "object"
    }
  },
  {
    "name": "attributes_get_building_material_physical_properties",
    "title": "GetBuildingMaterialPhysicalProperties",
    "description": "Retrieves the physical properties of the given Building Materials.",
    "input_schema": {
      "$defs": {
        "AttributeId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "AttributeId",
          "type": "object"
        },
        "AttributeIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "attributeId": {
              "$ref": "#/$defs/AttributeId"
            }
          },
          "required": [
            "attributeId"
          ],
          "title": "AttributeIdArrayItem",
          "type": "object"
        },
        "GetBuildingMaterialPhysicalPropertiesParameters": {
          "additionalProperties": false,
          "properties": {
            "attributeIds": {
              "description": "A list of attributes.",
              "items": {
                "$ref": "#/$defs/AttributeIdArrayItem"
              },
              "title": "Attributeids",
              "type": "array"
            }
          },
          "required": [
            "attributeIds"
          ],
          "title": "GetBuildingMaterialPhysicalPropertiesParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetBuildingMaterialPhysicalPropertiesParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_building_material_physical_propertiesArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_change_selection_of_elements",
    "title": "ChangeSelectionOfElements",
    "description": "Adds/removes a number of elements to/from the current selection.",
    "input_schema": {
      "$defs": {
        "ChangeSelectionOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "addElementsToSelection": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/ElementIdArrayItem"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "A list of elements.",
              "title": "Addelementstoselection"
            },
            "removeElementsFromSelection": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/ElementIdArrayItem"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "A list of elements.",
              "title": "Removeelementsfromselection"
            }
          },
          "title": "ChangeSelectionOfElementsParameters",
          "type": "object"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/ChangeSelectionOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "change_selection_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_create_columns",
    "title": "CreateColumns",
    "description": "Creates Column elements based on the given parameters.",
    "input_schema": {
      "$defs": {
        "ColumnsDatum": {
          "additionalProperties": false,
          "properties": {
            "coordinates": {
              "$ref": "#/$defs/Coordinates",
              "description": "3D coordinate."
            }
          },
          "required": [
            "coordinates"
          ],
          "title": "ColumnsDatum",
          "type": "object"
        },
        "Coordinates": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X value of the coordinate.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y value of the coordinate.",
              "title": "Y",
              "type": "number"
            },
            "z": {
              "description": "Z value of the coordinate.",
              "title": "Z",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y",
            "z"
          ],
          "title": "Coordinates",
          "type": "object"
        },
        "CreateColumnsParameters": {
          "additionalProperties": false,
          "properties": {
            "columnsData": {
              "description": "Array of data to create Columns.",
              "items": {
                "$ref": "#/$defs/ColumnsDatum"
              },
              "title": "Columnsdata",
              "type": "array"
            }
          },
          "required": [
            "columnsData"
          ],
          "title": "CreateColumnsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateColumnsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_columnsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_create_meshes",
    "title": "CreateMeshes",
    "description": "Creates Mesh elements based on the given parameters.",
    "input_schema": {
      "$defs": {
        "CreateMeshesParameters": {
          "additionalProperties": false,
          "properties": {
            "meshesData": {
              "description": "Array of data to create Meshes.",
              "items": {
                "$ref": "#/$defs/MeshesDatum"
              },
              "title": "Meshesdata",
              "type": "array"
            }
          },
          "required": [
            "meshesData"
          ],
          "title": "CreateMeshesParameters",
          "type": "object"
        },
        "Field3DCoordinate": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X value of the coordinate.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y value of the coordinate.",
              "title": "Y",
              "type": "number"
            },
            "z": {
              "description": "Z value of the coordinate.",
              "title": "Z",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y",
            "z"
          ],
          "title": "Field3DCoordinate",
          "type": "object"
        },
        "Hole": {
          "additionalProperties": false,
          "properties": {
            "polygonCoordinates": {
              "description": "The 3D coordinates of the polygon of the hole.",
              "items": {
                "$ref": "#/$defs/Field3DCoordinate"
              },
              "minItems": 3,
              "title": "Polygoncoordinates",
              "type": "array"
            },
            "polygonArcs": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PolyArc"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Polygon outline arcs of the hole.",
              "title": "Polygonarcs"
            }
          },
          "required": [
            "polygonCoordinates"
          ],
          "title": "Hole",
          "type": "object"
        },
        "MeshesDatum": {
          "additionalProperties": false,
          "properties": {
            "floorIndex": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Floorindex"
            },
            "level": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The Z reference level of coordinates.",
              "title": "Level"
            },
            "skirtType": {
              "anyOf": [
                {
                  "$ref": "#/$defs/SkirtType"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The type of the skirt structure."
            },
            "skirtLevel": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The height of the skirt.",
              "title": "Skirtlevel"
            },
            "polygonCoordinates": {
              "description": "The 3D coordinates of the outline polygon of the mesh.",
              "items": {
                "$ref": "#/$defs/Field3DCoordinate"
              },
              "minItems": 3,
              "title": "Polygoncoordinates",
              "type": "array"
            },
            "polygonArcs": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PolyArc"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Polygon outline arcs of the mesh.",
              "title": "Polygonarcs"
            },
            "holes": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Hole"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Array of parameters of holes.",
              "title": "Holes"
            },
            "sublines": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Subline"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The leveling sublines inside the polygon of the mesh.",
              "title": "Sublines"
            }
          },
          "required": [
            "polygonCoordinates"
          ],
          "title": "MeshesDatum",
          "type": "object"
        },
        "PolyArc": {
          "additionalProperties": false,
          "properties": {
            "begIndex": {
              "description": "Node index of one end point of the arc.",
              "title": "Begindex",
              "type": "integer"
            },
            "endIndex": {
              "description": "Node index of the other end point of the arc.",
              "title": "Endindex",
              "type": "integer"
            },
            "arcAngle": {
              "description": "Angle of the arc; it is positive, if the arc is on the right-hand side of the straight segment.",
              "title": "Arcangle",
              "type": "number"
            }
          },
          "required": [
            "begIndex",
            "endIndex",
            "arcAngle"
          ],
          "title": "PolyArc",
          "type": "object"
        },
        "SkirtType": {
          "enum": [
            "SurfaceOnlyWithoutSkirt",
            "WithSkirt",
            "SolidBodyWithSkirt"
          ],
          "title": "SkirtType",
          "type": "string"
        },
        "Subline": {
          "additionalProperties": false,
          "properties": {
            "coordinates": {
              "description": "The 3D coordinates of the leveling subline of the mesh.",
              "items": {
                "$ref": "#/$defs/Field3DCoordinate"
              },
              "title": "Coordinates",
              "type": "array"
            }
          },
          "required": [
            "coordinates"
          ],
          "title": "Subline",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateMeshesParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_meshesArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_create_objects",
    "title": "CreateObjects",
    "description": "Creates Object elements based on the given parameters.",
    "input_schema": {
      "$defs": {
        "CreateObjectsParameters": {
          "additionalProperties": false,
          "properties": {
            "objectsData": {
              "description": "Array of data to create Objects.",
              "items": {
                "$ref": "#/$defs/ObjectsDatum"
              },
              "title": "Objectsdata",
              "type": "array"
            }
          },
          "required": [
            "objectsData"
          ],
          "title": "CreateObjectsParameters",
          "type": "object"
        },
        "Field3DCoordinate": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X value of the coordinate.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y value of the coordinate.",
              "title": "Y",
              "type": "number"
            },
            "z": {
              "description": "Z value of the coordinate.",
              "title": "Z",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y",
            "z"
          ],
          "title": "Field3DCoordinate",
          "type": "object"
        },
        "Field3DDimensions": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X dimension.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y dimension.",
              "title": "Y",
              "type": "number"
            },
            "z": {
              "description": "Z dimension.",
              "title": "Z",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y",
            "z"
          ],
          "title": "Field3DDimensions",
          "type": "object"
        },
        "ObjectsDatum": {
          "additionalProperties": false,
          "properties": {
            "libraryPartName": {
              "description": "The name of the library part to use.",
              "title": "Librarypartname",
              "type": "string"
            },
            "coordinates": {
              "$ref": "#/$defs/Field3DCoordinate"
            },
            "dimensions": {
              "$ref": "#/$defs/Field3DDimensions"
            }
          },
          "required": [
            "libraryPartName",
            "coordinates",
            "dimensions"
          ],
          "title": "ObjectsDatum",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateObjectsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_objectsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_create_polylines",
    "title": "CreatePolylines",
    "description": "Creates Polyline elements based on the given parameters.",
    "input_schema": {
      "$defs": {
        "CreatePolylinesParameters": {
          "additionalProperties": false,
          "properties": {
            "polylinesData": {
              "description": "Array of data to create Polylines.",
              "items": {
                "$ref": "#/$defs/PolylinesDatum"
              },
              "title": "Polylinesdata",
              "type": "array"
            }
          },
          "required": [
            "polylinesData"
          ],
          "title": "CreatePolylinesParameters",
          "type": "object"
        },
        "Field2DCoordinate": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X value of the coordinate.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y value of the coordinate.",
              "title": "Y",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y"
          ],
          "title": "Field2DCoordinate",
          "type": "object"
        },
        "PolyArc": {
          "additionalProperties": false,
          "properties": {
            "begIndex": {
              "description": "Node index of one end point of the arc.",
              "title": "Begindex",
              "type": "integer"
            },
            "endIndex": {
              "description": "Node index of the other end point of the arc.",
              "title": "Endindex",
              "type": "integer"
            },
            "arcAngle": {
              "description": "Angle of the arc; it is positive, if the arc is on the right-hand side of the straight segment.",
              "title": "Arcangle",
              "type": "number"
            }
          },
          "required": [
            "begIndex",
            "endIndex",
            "arcAngle"
          ],
          "title": "PolyArc",
          "type": "object"
        },
        "PolylinesDatum": {
          "additionalProperties": false,
          "properties": {
            "floorInd": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The identifier of the floor. Optinal parameter, by default the current floor is used.",
              "title": "Floorind"
            },
            "coordinates": {
              "description": "The 2D coordinates of the polyline.",
              "items": {
                "$ref": "#/$defs/Field2DCoordinate"
              },
              "minItems": 2,
              "title": "Coordinates",
              "type": "array"
            },
            "arcs": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PolyArc"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The arcs of the polyline.",
              "title": "Arcs"
            }
          },
          "required": [
            "coordinates"
          ],
          "title": "PolylinesDatum",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreatePolylinesParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_polylinesArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_create_slabs",
    "title": "CreateSlabs",
    "description": "Creates Slab elements based on the given parameters.",
    "input_schema": {
      "$defs": {
        "CreateSlabsParameters": {
          "additionalProperties": false,
          "properties": {
            "slabsData": {
              "description": "Array of data to create Slabs.",
              "items": {
                "$ref": "#/$defs/SlabsDatum"
              },
              "title": "Slabsdata",
              "type": "array"
            }
          },
          "required": [
            "slabsData"
          ],
          "title": "CreateSlabsParameters",
          "type": "object"
        },
        "Field2DCoordinate": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X value of the coordinate.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y value of the coordinate.",
              "title": "Y",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y"
          ],
          "title": "Field2DCoordinate",
          "type": "object"
        },
        "Hole": {
          "additionalProperties": false,
          "properties": {
            "polygonCoordinates": {
              "description": "The 2D coordinates of the edge of the hole.",
              "items": {
                "$ref": "#/$defs/Field2DCoordinate"
              },
              "minItems": 3,
              "title": "Polygoncoordinates",
              "type": "array"
            },
            "polygonArcs": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PolyArc"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Polygon outline arcs of the hole.",
              "title": "Polygonarcs"
            }
          },
          "required": [
            "polygonCoordinates"
          ],
          "title": "Hole",
          "type": "object"
        },
        "PolyArc": {
          "additionalProperties": false,
          "properties": {
            "begIndex": {
              "description": "Node index of one end point of the arc.",
              "title": "Begindex",
              "type": "integer"
            },
            "endIndex": {
              "description": "Node index of the other end point of the arc.",
              "title": "Endindex",
              "type": "integer"
            },
            "arcAngle": {
              "description": "Angle of the arc; it is positive, if the arc is on the right-hand side of the straight segment.",
              "title": "Arcangle",
              "type": "number"
            }
          },
          "required": [
            "begIndex",
            "endIndex",
            "arcAngle"
          ],
          "title": "PolyArc",
          "type": "object"
        },
        "SlabsDatum": {
          "additionalProperties": false,
          "properties": {
            "level": {
              "description": "The Z coordinate value of the reference line of the slab.",
              "title": "Level",
              "type": "number"
            },
            "polygonCoordinates": {
              "description": "The 2D coordinates of the edge of the slab.",
              "items": {
                "$ref": "#/$defs/Field2DCoordinate"
              },
              "minItems": 3,
              "title": "Polygoncoordinates",
              "type": "array"
            },
            "polygonArcs": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PolyArc"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Polygon outline arcs of the slab.",
              "title": "Polygonarcs"
            },
            "holes": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Hole"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Array of parameters of holes.",
              "title": "Holes"
            }
          },
          "required": [
            "level",
            "polygonCoordinates"
          ],
          "title": "SlabsDatum",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateSlabsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_slabsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_filter_elements",
    "title": "FilterElements",
    "description": "Tests an elements by the given criterias.",
    "input_schema": {
      "$defs": {
        "ElementFilter": {
          "enum": [
            "IsEditable",
            "IsVisibleByLayer",
            "IsVisibleByRenovation",
            "IsVisibleByStructureDisplay",
            "IsVisibleIn3D",
            "OnActualFloor",
            "OnActualLayout",
            "InMyWorkspace",
            "IsIndependent",
            "InCroppedView",
            "HasAccessRight",
            "IsOverriddenByRenovation"
          ],
          "title": "ElementFilter",
          "type": "string"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "FilterElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            },
            "filters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/ElementFilter"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Filters"
            }
          },
          "required": [
            "elements"
          ],
          "title": "FilterElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/FilterElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "filter_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get3_d_bounding_boxes",
    "title": "Get3DBoundingBoxes",
    "description": "Get the 3D bounding box of elements. The bounding box is calculated from the global origin in the 3D view. The output is the array of the bounding boxes respective to the input array of elements.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "Get3DBoundingBoxesParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "Get3DBoundingBoxesParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/Get3DBoundingBoxesParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get3_d_bounding_boxesArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_all_elements",
    "title": "GetAllElements",
    "description": "Returns the identifier of all elements on the plan. Use the optional filter parameter for filtering.",
    "input_schema": {
      "$defs": {
        "DatabaseId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "DatabaseId",
          "type": "object"
        },
        "DatabaseIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "databaseId": {
              "$ref": "#/$defs/DatabaseId"
            }
          },
          "required": [
            "databaseId"
          ],
          "title": "DatabaseIdArrayItem",
          "type": "object"
        },
        "ElementFilter": {
          "enum": [
            "IsEditable",
            "IsVisibleByLayer",
            "IsVisibleByRenovation",
            "IsVisibleByStructureDisplay",
            "IsVisibleIn3D",
            "OnActualFloor",
            "OnActualLayout",
            "InMyWorkspace",
            "IsIndependent",
            "InCroppedView",
            "HasAccessRight",
            "IsOverriddenByRenovation"
          ],
          "title": "ElementFilter",
          "type": "string"
        },
        "GetAllElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "filters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/ElementFilter"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Filters"
            },
            "databases": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/DatabaseIdArrayItem"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "A list of Archicad databases.",
              "title": "Databases"
            }
          },
          "title": "GetAllElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetAllElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_all_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_classifications_of_elements",
    "title": "GetClassificationsOfElements",
    "description": "Returns the classification of the given elements in the given classification systems. It works for subelements of hierarchal elements also.",
    "input_schema": {
      "$defs": {
        "ClassificationSystemId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ClassificationSystemId",
          "type": "object"
        },
        "ClassificationSystemIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "classificationSystemId": {
              "$ref": "#/$defs/ClassificationSystemId"
            }
          },
          "required": [
            "classificationSystemId"
          ],
          "title": "ClassificationSystemIdArrayItem",
          "type": "object"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "GetClassificationsOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            },
            "classificationSystemIds": {
              "description": "A list of classification system identifiers.",
              "items": {
                "$ref": "#/$defs/ClassificationSystemIdArrayItem"
              },
              "title": "Classificationsystemids",
              "type": "array"
            }
          },
          "required": [
            "elements",
            "classificationSystemIds"
          ],
          "title": "GetClassificationsOfElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetClassificationsOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_classifications_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_connected_elements",
    "title": "GetConnectedElements",
    "description": "Gets connected elements of the given elements.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "ElementType": {
          "enum": [
            "Wall",
            "Column",
            "Beam",
            "Window",
            "Door",
            "Object",
            "Lamp",
            "Slab",
            "Roof",
            "Mesh",
            "Dimension",
            "RadialDimension",
            "LevelDimension",
            "AngleDimension",
            "Text",
            "Label",
            "Zone",
            "Hatch",
            "Line",
            "PolyLine",
            "Arc",
            "Circle",
            "Spline",
            "Hotspot",
            "CutPlane",
            "Camera",
            "CamSet",
            "Group",
            "SectElem",
            "Drawing",
            "Picture",
            "Detail",
            "Elevation",
            "InteriorElevation",
            "Worksheet",
            "Hotlink",
            "CurtainWall",
            "CurtainWallSegment",
            "CurtainWallFrame",
            "CurtainWallPanel",
            "CurtainWallJunction",
            "CurtainWallAccessory",
            "Shell",
            "Skylight",
            "Morph",
            "ChangeMarker",
            "Stair",
            "Riser",
            "Tread",
            "StairStructure",
            "Railing",
            "RailingToprail",
            "RailingHandrail",
            "RailingRail",
            "RailingPost",
            "RailingInnerPost",
            "RailingBaluster",
            "RailingPanel",
            "RailingSegment",
            "RailingNode",
            "RailingBalusterSet",
            "RailingPattern",
            "RailingToprailEnd",
            "RailingHandrailEnd",
            "RailingRailEnd",
            "RailingToprailConnection",
            "RailingHandrailConnection",
            "RailingRailConnection",
            "RailingEndFinish",
            "BeamSegment",
            "ColumnSegment",
            "Opening",
            "Unknown"
          ],
          "title": "ElementType",
          "type": "string"
        },
        "GetConnectedElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            },
            "connectedElementType": {
              "$ref": "#/$defs/ElementType"
            }
          },
          "required": [
            "elements",
            "connectedElementType"
          ],
          "title": "GetConnectedElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetConnectedElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_connected_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_details_of_elements",
    "title": "GetDetailsOfElements",
    "description": "Gets the details of the given elements (geometry parameters etc).",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "GetDetailsOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "GetDetailsOfElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetDetailsOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_details_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_elements_by_type",
    "title": "GetElementsByType",
    "description": "Returns the identifier of every element of the given type on the plan. It works for any type. Use the optional filter parameter for filtering.",
    "input_schema": {
      "$defs": {
        "DatabaseId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "DatabaseId",
          "type": "object"
        },
        "DatabaseIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "databaseId": {
              "$ref": "#/$defs/DatabaseId"
            }
          },
          "required": [
            "databaseId"
          ],
          "title": "DatabaseIdArrayItem",
          "type": "object"
        },
        "ElementFilter": {
          "enum": [
            "IsEditable",
            "IsVisibleByLayer",
            "IsVisibleByRenovation",
            "IsVisibleByStructureDisplay",
            "IsVisibleIn3D",
            "OnActualFloor",
            "OnActualLayout",
            "InMyWorkspace",
            "IsIndependent",
            "InCroppedView",
            "HasAccessRight",
            "IsOverriddenByRenovation"
          ],
          "title": "ElementFilter",
          "type": "string"
        },
        "ElementType": {
          "enum": [
            "Wall",
            "Column",
            "Beam",
            "Window",
            "Door",
            "Object",
            "Lamp",
            "Slab",
            "Roof",
            "Mesh",
            "Dimension",
            "RadialDimension",
            "LevelDimension",
            "AngleDimension",
            "Text",
            "Label",
            "Zone",
            "Hatch",
            "Line",
            "PolyLine",
            "Arc",
            "Circle",
            "Spline",
            "Hotspot",
            "CutPlane",
            "Camera",
            "CamSet",
            "Group",
            "SectElem",
            "Drawing",
            "Picture",
            "Detail",
            "Elevation",
            "InteriorElevation",
            "Worksheet",
            "Hotlink",
            "CurtainWall",
            "CurtainWallSegment",
            "CurtainWallFrame",
            "CurtainWallPanel",
            "CurtainWallJunction",
            "CurtainWallAccessory",
            "Shell",
            "Skylight",
            "Morph",
            "ChangeMarker",
            "Stair",
            "Riser",
            "Tread",
            "StairStructure",
            "Railing",
            "RailingToprail",
            "RailingHandrail",
            "RailingRail",
            "RailingPost",
            "RailingInnerPost",
            "RailingBaluster",
            "RailingPanel",
            "RailingSegment",
            "RailingNode",
            "RailingBalusterSet",
            "RailingPattern",
            "RailingToprailEnd",
            "RailingHandrailEnd",
            "RailingRailEnd",
            "RailingToprailConnection",
            "RailingHandrailConnection",
            "RailingRailConnection",
            "RailingEndFinish",
            "BeamSegment",
            "ColumnSegment",
            "Opening",
            "Unknown"
          ],
          "title": "ElementType",
          "type": "string"
        },
        "GetElementsByTypeParameters": {
          "additionalProperties": false,
          "properties": {
            "elementType": {
              "$ref": "#/$defs/ElementType"
            },
            "filters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/ElementFilter"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Filters"
            },
            "databases": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/DatabaseIdArrayItem"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "A list of Archicad databases.",
              "title": "Databases"
            }
          },
          "required": [
            "elementType"
          ],
          "title": "GetElementsByTypeParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetElementsByTypeParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_elements_by_typeArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_gdl_parameters_of_elements",
    "title": "GetGDLParametersOfElements",
    "description": "Gets all the GDL parameters (name, type, value) of the given elements.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "GetGDLParametersOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "GetGDLParametersOfElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetGDLParametersOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_gdl_parameters_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_selected_elements",
    "title": "GetSelectedElements",
    "description": "Gets the list of the currently selected elements.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_selected_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_get_subelements_of_hierarchical_elements",
    "title": "GetSubelementsOfHierarchicalElements",
    "description": "Gets the subelements of the given hierarchical elements.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "GetSubelementsOfHierarchicalElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "GetSubelementsOfHierarchicalElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetSubelementsOfHierarchicalElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_subelements_of_hierarchical_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_highlight_elements",
    "title": "HighlightElements",
    "description": "Highlights the elements given in the elements array. In case of empty elements array removes all previously set highlights.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "HighlightElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            },
            "highlightedColors": {
              "description": "A list of colors to highlight elements.",
              "items": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Highlightedcolors",
              "type": "array"
            },
            "wireframe3D": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Optional parameter. Switch non highlighted elements in the 3D window to wireframe.",
              "title": "Wireframe3D"
            },
            "nonHighlightedColor": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "maxItems": 4,
                  "minItems": 4,
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Optional parameter. Color of the non highlighted elements as an [r, g, b, a] array. Each component must be in the 0-255 range.",
              "title": "Nonhighlightedcolor"
            }
          },
          "required": [
            "elements",
            "highlightedColors"
          ],
          "title": "HighlightElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/HighlightElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "highlight_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_move_elements",
    "title": "MoveElements",
    "description": "Moves elements with a given vector.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementsWithMoveVector": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            },
            "moveVector": {
              "$ref": "#/$defs/MoveVector",
              "description": "Move vector of a 3D point."
            },
            "copy": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Optional parameter. If true, then a copy of the element will be moved. By default it's false.",
              "title": "Copy"
            }
          },
          "required": [
            "elementId",
            "moveVector"
          ],
          "title": "ElementsWithMoveVector",
          "type": "object"
        },
        "MoveElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elementsWithMoveVectors": {
              "description": "The elements with move vector pairs.",
              "items": {
                "$ref": "#/$defs/ElementsWithMoveVector"
              },
              "title": "Elementswithmovevectors",
              "type": "array"
            }
          },
          "required": [
            "elementsWithMoveVectors"
          ],
          "title": "MoveElementsParameters",
          "type": "object"
        },
        "MoveVector": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X value of the vector.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y value of the vector.",
              "title": "Y",
              "type": "number"
            },
            "z": {
              "description": "Z value of the vector.",
              "title": "Z",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y",
            "z"
          ],
          "title": "MoveVector",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/MoveElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "move_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_set_classifications_of_elements",
    "title": "SetClassificationsOfElements",
    "description": "Sets the classifications of elements. In order to set the classification of an element to unclassified, omit the classificationItemId field. It works for subelements of hierarchal elements also.",
    "input_schema": {
      "$defs": {
        "ClassificationId": {
          "additionalProperties": false,
          "properties": {
            "classificationSystemId": {
              "$ref": "#/$defs/ClassificationSystemId"
            },
            "classificationItemId": {
              "anyOf": [
                {
                  "$ref": "#/$defs/ClassificationItemId"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The element's classification in the given system. If no value is specified here, the element is Unclassified in this system."
            }
          },
          "required": [
            "classificationSystemId"
          ],
          "title": "ClassificationId",
          "type": "object"
        },
        "ClassificationItemId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ClassificationItemId",
          "type": "object"
        },
        "ClassificationSystemId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ClassificationSystemId",
          "type": "object"
        },
        "ElementClassification": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            },
            "classificationId": {
              "$ref": "#/$defs/ClassificationId"
            }
          },
          "required": [
            "elementId",
            "classificationId"
          ],
          "title": "ElementClassification",
          "type": "object"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "SetClassificationsOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elementClassifications": {
              "description": "A list of element classification identifiers.",
              "items": {
                "$ref": "#/$defs/ElementClassification"
              },
              "title": "Elementclassifications",
              "type": "array"
            }
          },
          "required": [
            "elementClassifications"
          ],
          "title": "SetClassificationsOfElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/SetClassificationsOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "set_classifications_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_set_details_of_elements",
    "title": "SetDetailsOfElements",
    "description": "Sets the details of the given elements (floor, layer, order etc).",
    "input_schema": {
      "$defs": {
        "Details": {
          "properties": {
            "floorIndex": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Floorindex"
            },
            "layerIndex": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Layerindex"
            },
            "drawIndex": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Drawindex"
            },
            "typeSpecificDetails": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TypeSpecificDetails"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            }
          },
          "title": "Details",
          "type": "object"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementsWithDetail": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            },
            "details": {
              "$ref": "#/$defs/Details",
              "description": "Details of an element."
            }
          },
          "required": [
            "elementId",
            "details"
          ],
          "title": "ElementsWithDetail",
          "type": "object"
        },
        "Field2DCoordinate": {
          "additionalProperties": false,
          "properties": {
            "x": {
              "description": "X value of the coordinate.",
              "title": "X",
              "type": "number"
            },
            "y": {
              "description": "Y value of the coordinate.",
              "title": "Y",
              "type": "number"
            }
          },
          "required": [
            "x",
            "y"
          ],
          "title": "Field2DCoordinate",
          "type": "object"
        },
        "SetDetailsOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elementsWithDetails": {
              "description": "The elements with parameters.",
              "items": {
                "$ref": "#/$defs/ElementsWithDetail"
              },
              "title": "Elementswithdetails",
              "type": "array"
            }
          },
          "required": [
            "elementsWithDetails"
          ],
          "title": "SetDetailsOfElementsParameters",
          "type": "object"
        },
        "TypeSpecificDetails": {
          "properties": {
            "begCoordinate": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Field2DCoordinate"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "endCoordinate": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Field2DCoordinate"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "height": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "height relative to bottom",
              "title": "Height"
            },
            "bottomOffset": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "base level of the wall relative to the floor level",
              "title": "Bottomoffset"
            },
            "offset": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "wall's base line's offset from ref. line",
              "title": "Offset"
            },
            "begThickness": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Thickness at the beginning in case of trapezoid wall",
              "title": "Begthickness"
            },
            "endThickness": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Thickness at the end in case of trapezoid wall",
              "title": "Endthickness"
            }
          },
          "title": "TypeSpecificDetails",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/SetDetailsOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "set_details_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "elements_set_gdl_parameters_of_elements",
    "title": "SetGDLParametersOfElements",
    "description": "Sets the given GDL parameters of the given elements.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementsWithGDLParameter": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            },
            "gdlParameters": {
              "$ref": "#/$defs/GDLParameterList"
            }
          },
          "required": [
            "elementId",
            "gdlParameters"
          ],
          "title": "ElementsWithGDLParameter",
          "type": "object"
        },
        "GDLParameterDetails": {
          "additionalProperties": true,
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The name of the parameter.",
              "title": "Name"
            },
            "index": {
              "description": "The index of the parameter.",
              "title": "Index",
              "type": "string"
            },
            "type": {
              "description": "The type of the parameter.",
              "title": "Type",
              "type": "string"
            },
            "dimension1": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The 1st dimension of array (in case of array value).",
              "title": "Dimension1"
            },
            "dimension2": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The 2nd dimension of array (in case of array value).",
              "title": "Dimension2"
            },
            "value": {
              "description": "The value of the parameter.",
              "title": "Value"
            }
          },
          "required": [
            "index",
            "type",
            "value"
          ],
          "title": "GDLParameterDetails",
          "type": "object"
        },
        "GDLParameterList": {
          "properties": {
            "parameters": {
              "description": "The list of GDL parameters.",
              "items": {
                "$ref": "#/$defs/GDLParameterDetails"
              },
              "title": "Parameters",
              "type": "array"
            }
          },
          "required": [
            "parameters"
          ],
          "title": "GDLParameterList",
          "type": "object"
        },
        "SetGDLParametersOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elementsWithGDLParameters": {
              "description": "The elements with GDL parameters dictionary pairs.",
              "items": {
                "$ref": "#/$defs/ElementsWithGDLParameter"
              },
              "title": "Elementswithgdlparameters",
              "type": "array"
            }
          },
          "required": [
            "elementsWithGDLParameters"
          ],
          "title": "SetGDLParametersOfElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/SetGDLParametersOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "set_gdl_parameters_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "favorites_apply_favorites_to_element_defaults",
    "title": "ApplyFavoritesToElementDefaults",
    "description": "Apply the given favorites to element defaults.",
    "input_schema": {
      "$defs": {
        "ApplyFavoritesToElementDefaultsParameters": {
          "additionalProperties": false,
          "properties": {
            "favorites": {
              "description": "The favorites to apply.",
              "items": {
                "type": "string"
              },
              "title": "Favorites",
              "type": "array"
            }
          },
          "required": [
            "favorites"
          ],
          "title": "ApplyFavoritesToElementDefaultsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/ApplyFavoritesToElementDefaultsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "apply_favorites_to_element_defaultsArguments",
      "type": "object"
    }
  },
  {
    "name": "favorites_create_favorites_from_elements",
    "title": "CreateFavoritesFromElements",
    "description": "Create favorites from the given elements.",
    "input_schema": {
      "$defs": {
        "CreateFavoritesFromElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "favoritesFromElements": {
              "items": {
                "$ref": "#/$defs/FavoritesFromElement"
              },
              "title": "Favoritesfromelements",
              "type": "array"
            }
          },
          "required": [
            "favoritesFromElements"
          ],
          "title": "CreateFavoritesFromElementsParameters",
          "type": "object"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "FavoritesFromElement": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            },
            "favorite": {
              "title": "Favorite",
              "type": "string"
            }
          },
          "required": [
            "elementId",
            "favorite"
          ],
          "title": "FavoritesFromElement",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateFavoritesFromElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_favorites_from_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_add_comment_to_issue",
    "title": "AddCommentToIssue",
    "description": "Adds a new comment to the specified issue.",
    "input_schema": {
      "$defs": {
        "AddCommentToIssueParameters": {
          "additionalProperties": false,
          "properties": {
            "issueId": {
              "$ref": "#/$defs/IssueId"
            },
            "author": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The author of the new comment.",
              "title": "Author"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/$defs/IssueCommentStatus"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "text": {
              "description": "Comment text to add.",
              "title": "Text",
              "type": "string"
            }
          },
          "required": [
            "issueId",
            "text"
          ],
          "title": "AddCommentToIssueParameters",
          "type": "object"
        },
        "IssueCommentStatus": {
          "enum": [
            "Error",
            "Warning",
            "Info",
            "Unknown"
          ],
          "title": "IssueCommentStatus",
          "type": "string"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/AddCommentToIssueParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "add_comment_to_issueArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_attach_elements_to_issue",
    "title": "AttachElementsToIssue",
    "description": "Attaches elements to the specified issue.",
    "input_schema": {
      "$defs": {
        "AttachElementsToIssueParameters": {
          "additionalProperties": false,
          "properties": {
            "issueId": {
              "$ref": "#/$defs/IssueId"
            },
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            },
            "type": {
              "$ref": "#/$defs/IssueElementType"
            }
          },
          "required": [
            "issueId",
            "elements",
            "type"
          ],
          "title": "AttachElementsToIssueParameters",
          "type": "object"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "IssueElementType": {
          "enum": [
            "Creation",
            "Highlight",
            "Deletion",
            "Modification"
          ],
          "title": "IssueElementType",
          "type": "string"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/AttachElementsToIssueParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "attach_elements_to_issueArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_create_issue",
    "title": "CreateIssue",
    "description": "Creates a new issue.",
    "input_schema": {
      "$defs": {
        "CreateIssueParameters": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "The name of the issue.",
              "title": "Name",
              "type": "string"
            },
            "parentIssueId": {
              "anyOf": [
                {
                  "$ref": "#/$defs/IssueId"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "tagText": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Tag text of the issue, optional.",
              "title": "Tagtext"
            }
          },
          "required": [
            "name"
          ],
          "title": "CreateIssueParameters",
          "type": "object"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreateIssueParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_issueArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_delete_issue",
    "title": "DeleteIssue",
    "description": "Deletes the specified issue.",
    "input_schema": {
      "$defs": {
        "DeleteIssueParameters": {
          "additionalProperties": false,
          "properties": {
            "issueId": {
              "$ref": "#/$defs/IssueId"
            },
            "acceptAllElements": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Accept all creation/deletion/modification of the deleted issue. By default false.",
              "title": "Acceptallelements"
            }
          },
          "required": [
            "issueId"
          ],
          "title": "DeleteIssueParameters",
          "type": "object"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/DeleteIssueParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "delete_issueArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_detach_elements_from_issue",
    "title": "DetachElementsFromIssue",
    "description": "Detaches elements from the specified issue.",
    "input_schema": {
      "$defs": {
        "DetachElementsFromIssueParameters": {
          "additionalProperties": false,
          "properties": {
            "issueId": {
              "$ref": "#/$defs/IssueId"
            },
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "issueId",
            "elements"
          ],
          "title": "DetachElementsFromIssueParameters",
          "type": "object"
        },
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/DetachElementsFromIssueParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "detach_elements_from_issueArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_export_issues_to_bcf",
    "title": "ExportIssuesToBCF",
    "description": "Exports specified issues to a BCF file.",
    "input_schema": {
      "$defs": {
        "ExportIssuesToBCFParameters": {
          "additionalProperties": false,
          "properties": {
            "issues": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/IssueIdArrayItem"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Leave it empty to export all issues.",
              "title": "Issues"
            },
            "exportPath": {
              "description": "The os path to the bcf file, including it's name.",
              "title": "Exportpath",
              "type": "string"
            },
            "useExternalId": {
              "description": "Use external IFC ID or Archicad IFC ID as referenced in BCF topics.",
              "title": "Useexternalid",
              "type": "boolean"
            },
            "alignBySurveyPoint": {
              "description": "Align BCF views by Archicad Survey Point or Archicad Project Origin.",
              "title": "Alignbysurveypoint",
              "type": "boolean"
            }
          },
          "required": [
            "exportPath",
            "useExternalId",
            "alignBySurveyPoint"
          ],
          "title": "ExportIssuesToBCFParameters",
          "type": "object"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        },
        "IssueIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "issueId": {
              "$ref": "#/$defs/IssueId"
            }
          },
          "required": [
            "issueId"
          ],
          "title": "IssueIdArrayItem",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/ExportIssuesToBCFParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "export_issues_to_bcfArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_get_comments_from_issue",
    "title": "GetCommentsFromIssue",
    "description": "Retrieves comments information from the specified issue.",
    "input_schema": {
      "$defs": {
        "GetCommentsFromIssueParameters": {
          "additionalProperties": false,
          "properties": {
            "issueId": {
              "$ref": "#/$defs/IssueId"
            }
          },
          "required": [
            "issueId"
          ],
          "title": "GetCommentsFromIssueParameters",
          "type": "object"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetCommentsFromIssueParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_comments_from_issueArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_get_elements_attached_to_issue",
    "title": "GetElementsAttachedToIssue",
    "description": "Retrieves attached elements of the specified issue, filtered by attachment type.",
    "input_schema": {
      "$defs": {
        "GetElementsAttachedToIssueParameters": {
          "additionalProperties": false,
          "properties": {
            "issueId": {
              "$ref": "#/$defs/IssueId"
            },
            "type": {
              "$ref": "#/$defs/IssueElementType"
            }
          },
          "required": [
            "issueId",
            "type"
          ],
          "title": "GetElementsAttachedToIssueParameters",
          "type": "object"
        },
        "IssueElementType": {
          "enum": [
            "Creation",
            "Highlight",
            "Deletion",
            "Modification"
          ],
          "title": "IssueElementType",
          "type": "string"
        },
        "IssueId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "IssueId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetElementsAttachedToIssueParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_elements_attached_to_issueArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_get_issues",
    "title": "GetIssues",
    "description": "Retrieves information about existing issues.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_issuesArguments",
      "type": "object"
    }
  },
  {
    "name": "issues_import_issues_from_bcf",
    "title": "ImportIssuesFromBCF",
    "description": "Imports issues from the specified BCF file.",
    "input_schema": {
      "$defs": {
        "ImportIssuesFromBCFParameters": {
          "additionalProperties": false,
          "properties": {
            "importPath": {
              "description": "The os path to the bcf file, including it's name.",
              "title": "Importpath",
              "type": "string"
            },
            "alignBySurveyPoint": {
              "description": "Align BCF views by Archicad Survey Point or Archicad Project Origin.",
              "title": "Alignbysurveypoint",
              "type": "boolean"
            }
          },
          "required": [
            "importPath",
            "alignBySurveyPoint"
          ],
          "title": "ImportIssuesFromBCFParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/ImportIssuesFromBCFParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "import_issues_from_bcfArguments",
      "type": "object"
    }
  },
  {
    "name": "library_get_libraries",
    "title": "GetLibraries",
    "description": "Gets the list of loaded libraries.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_librariesArguments",
      "type": "object"
    }
  },
  {
    "name": "library_reload_libraries",
    "title": "ReloadLibraries",
    "description": "Executes the reload libraries command.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "reload_librariesArguments",
      "type": "object"
    }
  },
  {
    "name": "navigator_get_database_id_from_navigator_item_id",
    "title": "GetDatabaseIdFromNavigatorItemId",
    "description": "Gets the ID of the database associated with the supplied navigator item id",
    "input_schema": {
      "$defs": {
        "GetDatabaseIdFromNavigatorItemIdParameters": {
          "additionalProperties": false,
          "properties": {
            "navigatorItemIds": {
              "description": "A list of navigator item identifiers.",
              "items": {
                "$ref": "#/$defs/NavigatorItemIdArrayItem"
              },
              "title": "Navigatoritemids",
              "type": "array"
            }
          },
          "required": [
            "navigatorItemIds"
          ],
          "title": "GetDatabaseIdFromNavigatorItemIdParameters",
          "type": "object"
        },
        "NavigatorItemId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "NavigatorItemId",
          "type": "object"
        },
        "NavigatorItemIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "navigatorItemId": {
              "$ref": "#/$defs/NavigatorItemId"
            }
          },
          "required": [
            "navigatorItemId"
          ],
          "title": "NavigatorItemIdArrayItem",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetDatabaseIdFromNavigatorItemIdParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_database_id_from_navigator_item_idArguments",
      "type": "object"
    }
  },
  {
    "name": "navigator_get_model_view_options",
    "title": "GetModelViewOptions",
    "description": "Gets all model view options",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_model_view_optionsArguments",
      "type": "object"
    }
  },
  {
    "name": "navigator_get_view2_d_transformations",
    "title": "GetView2DTransformations",
    "description": "Get zoom and rotation of 2D views",
    "input_schema": {
      "$defs": {
        "DatabaseId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "DatabaseId",
          "type": "object"
        },
        "DatabaseIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "databaseId": {
              "$ref": "#/$defs/DatabaseId"
            }
          },
          "required": [
            "databaseId"
          ],
          "title": "DatabaseIdArrayItem",
          "type": "object"
        },
        "GetView2DTransformationsParameters": {
          "additionalProperties": false,
          "properties": {
            "databases": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/DatabaseIdArrayItem"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "A list of Archicad databases.",
              "title": "Databases"
            }
          },
          "title": "GetView2DTransformationsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetView2DTransformationsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_view2_d_transformationsArguments",
      "type": "object"
    }
  },
  {
    "name": "navigator_get_view_settings",
    "title": "GetViewSettings",
    "description": "Gets the view settings of navigator items",
    "input_schema": {
      "$defs": {
        "GetViewSettingsParameters": {
          "additionalProperties": false,
          "properties": {
            "navigatorItemIds": {
              "description": "A list of navigator item identifiers.",
              "items": {
                "$ref": "#/$defs/NavigatorItemIdArrayItem"
              },
              "title": "Navigatoritemids",
              "type": "array"
            }
          },
          "required": [
            "navigatorItemIds"
          ],
          "title": "GetViewSettingsParameters",
          "type": "object"
        },
        "NavigatorItemId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "NavigatorItemId",
          "type": "object"
        },
        "NavigatorItemIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "navigatorItemId": {
              "$ref": "#/$defs/NavigatorItemId"
            }
          },
          "required": [
            "navigatorItemId"
          ],
          "title": "NavigatorItemIdArrayItem",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetViewSettingsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_view_settingsArguments",
      "type": "object"
    }
  },
  {
    "name": "navigator_publish_publisher_set",
    "title": "PublishPublisherSet",
    "description": "Performs a publish operation on the currently opened project. Only the given publisher set will be published.",
    "input_schema": {
      "$defs": {
        "PublishPublisherSetParameters": {
          "additionalProperties": false,
          "properties": {
            "publisherSetName": {
              "description": "The name of the publisher set.",
              "title": "Publishersetname",
              "type": "string"
            },
            "outputPath": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Full local or LAN path for publishing. Optional, by default the path set in the settings of the publiser set will be used.",
              "title": "Outputpath"
            }
          },
          "required": [
            "publisherSetName"
          ],
          "title": "PublishPublisherSetParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/PublishPublisherSetParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "publish_publisher_setArguments",
      "type": "object"
    }
  },
  {
    "name": "navigator_set_view_settings",
    "title": "SetViewSettings",
    "description": "Sets the view settings of navigator items",
    "input_schema": {
      "$defs": {
        "NavigatorItemId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "NavigatorItemId",
          "type": "object"
        },
        "NavigatorItemIdsWithViewSetting": {
          "additionalProperties": false,
          "properties": {
            "navigatorItemId": {
              "$ref": "#/$defs/NavigatorItemId"
            },
            "viewSettings": {
              "$ref": "#/$defs/ViewSettings"
            }
          },
          "required": [
            "navigatorItemId",
            "viewSettings"
          ],
          "title": "NavigatorItemIdsWithViewSetting",
          "type": "object"
        },
        "SetViewSettingsParameters": {
          "additionalProperties": false,
          "properties": {
            "navigatorItemIdsWithViewSettings": {
              "items": {
                "$ref": "#/$defs/NavigatorItemIdsWithViewSetting"
              },
              "title": "Navigatoritemidswithviewsettings",
              "type": "array"
            }
          },
          "required": [
            "navigatorItemIdsWithViewSettings"
          ],
          "title": "SetViewSettingsParameters",
          "type": "object"
        },
        "ViewSettings": {
          "additionalProperties": false,
          "properties": {
            "modelViewOptions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The name of the model view options. If empty, the view has custom model view options.",
              "title": "Modelviewoptions"
            },
            "layerCombination": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The name of the layer combination. If empty, the view has custom layer combination.",
              "title": "Layercombination"
            },
            "dimensionStyle": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The name of the dimension style. If empty, the view has custom dimension style.",
              "title": "Dimensionstyle"
            },
            "penSetName": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The name of the pen set. If empty, the view has custom pen set.",
              "title": "Pensetname"
            },
            "graphicOverrideCombination": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The name of the graphic override combination. If empty, the view has custom graphic override combination.",
              "title": "Graphicoverridecombination"
            }
          },
          "title": "ViewSettings",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/SetViewSettingsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "set_view_settingsArguments",
      "type": "object"
    }
  },
  {
    "name": "navigator_update_drawings",
    "title": "UpdateDrawings",
    "description": "Performs a drawing update on the given elements.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "UpdateDrawingsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "UpdateDrawingsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/UpdateDrawingsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "update_drawingsArguments",
      "type": "object"
    }
  },
  {
    "name": "project_get_geo_location",
    "title": "GetGeoLocation",
    "description": "Gets the project location details.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_geo_locationArguments",
      "type": "object"
    }
  },
  {
    "name": "project_get_hotlinks",
    "title": "GetHotlinks",
    "description": "Gets the file system locations (path) of the hotlink modules. The hotlinks can have tree hierarchy in the project.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_hotlinksArguments",
      "type": "object"
    }
  },
  {
    "name": "project_get_project_info_fields",
    "title": "GetProjectInfoFields",
    "description": "Retrieves the names and values of all project info fields.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_project_info_fieldsArguments",
      "type": "object"
    }
  },
  {
    "name": "project_get_stories",
    "title": "GetStories",
    "description": "Retrieves information about the story sructure of the currently loaded project.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_storiesArguments",
      "type": "object"
    }
  },
  {
    "name": "project_open_project",
    "title": "OpenProject",
    "description": "Opens the given project.",
    "input_schema": {
      "$defs": {
        "OpenProjectParameters": {
          "additionalProperties": false,
          "properties": {
            "projectFilePath": {
              "description": "The target project file to open.",
              "title": "Projectfilepath",
              "type": "string"
            }
          },
          "required": [
            "projectFilePath"
          ],
          "title": "OpenProjectParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/OpenProjectParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "open_projectArguments",
      "type": "object"
    }
  },
  {
    "name": "project_set_project_info_field",
    "title": "SetProjectInfoField",
    "description": "Sets the value of a project info field.",
    "input_schema": {
      "$defs": {
        "SetProjectInfoFieldParameters": {
          "additionalProperties": false,
          "properties": {
            "projectInfoId": {
              "description": "The id of the project info field.",
              "title": "Projectinfoid",
              "type": "string"
            },
            "projectInfoValue": {
              "description": "The new value of the project info field.",
              "title": "Projectinfovalue",
              "type": "string"
            }
          },
          "required": [
            "projectInfoId",
            "projectInfoValue"
          ],
          "title": "SetProjectInfoFieldParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/SetProjectInfoFieldParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "set_project_info_fieldArguments",
      "type": "object"
    }
  },
  {
    "name": "project_set_stories",
    "title": "SetStories",
    "description": "Sets the story sructure of the currently loaded project.",
    "input_schema": {
      "$defs": {
        "SetStoriesParameters": {
          "additionalProperties": true,
          "properties": {
            "stories": {
              "description": "A list of project stories.",
              "items": {
                "$ref": "#/$defs/Story"
              },
              "title": "Stories",
              "type": "array"
            }
          },
          "required": [
            "stories"
          ],
          "title": "SetStoriesParameters",
          "type": "object"
        },
        "Story": {
          "additionalProperties": true,
          "properties": {
            "dispOnSections": {
              "description": "Story level lines should appear on sections and elevations.",
              "title": "Disponsections",
              "type": "boolean"
            },
            "level": {
              "description": "The story level.",
              "title": "Level",
              "type": "number"
            },
            "name": {
              "description": "The name of the story.",
              "title": "Name",
              "type": "string"
            }
          },
          "required": [
            "dispOnSections",
            "level",
            "name"
          ],
          "title": "Story",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/SetStoriesParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "set_storiesArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_create_property_definitions",
    "title": "CreatePropertyDefinitions",
    "description": "Creates Custom Property Definitions based on the given parameters.",
    "input_schema": {
      "$defs": {
        "BasicDefaultValue": {
          "additionalProperties": false,
          "properties": {
            "basicDefaultValue": {
              "anyOf": [
                {
                  "$ref": "#/$defs/NotAvailablePropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalNumberPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalIntegerPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalStringPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalBooleanPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalLengthPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalAreaPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalVolumePropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalAnglePropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalNumberListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalIntegerListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalStringListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalBooleanListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalLengthListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalAreaListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalVolumeListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalAngleListPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalSingleEnumPropertyValue"
                },
                {
                  "$ref": "#/$defs/NormalMultiEnumPropertyValue"
                },
                {
                  "$ref": "#/$defs/UserUndefinedPropertyValue"
                }
              ],
              "description": "A normal, userUndefined, notAvailable or notEvaluated property value.",
              "title": "Basicdefaultvalue"
            }
          },
          "required": [
            "basicDefaultValue"
          ],
          "title": "BasicDefaultValue",
          "type": "object"
        },
        "ClassificationItemId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ClassificationItemId",
          "type": "object"
        },
        "ClassificationItemIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "classificationItemId": {
              "$ref": "#/$defs/ClassificationItemId"
            }
          },
          "required": [
            "classificationItemId"
          ],
          "title": "ClassificationItemIdArrayItem",
          "type": "object"
        },
        "CreatePropertyDefinitionsParameters": {
          "additionalProperties": false,
          "properties": {
            "propertyDefinitions": {
              "description": "The parameters of the new properties.",
              "items": {
                "$ref": "#/$defs/PropertyDefinitionWrapper"
              },
              "title": "Propertydefinitions",
              "type": "array"
            }
          },
          "required": [
            "propertyDefinitions"
          ],
          "title": "CreatePropertyDefinitionsParameters",
          "type": "object"
        },
        "DisplayValueEnumId": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "displayValue",
              "title": "Type",
              "type": "string"
            },
            "displayValue": {
              "title": "Displayvalue",
              "type": "string"
            }
          },
          "required": [
            "type",
            "displayValue"
          ],
          "title": "DisplayValueEnumId",
          "type": "object"
        },
        "EnumValue": {
          "properties": {
            "enumValueId": {
              "anyOf": [
                {
                  "$ref": "#/$defs/DisplayValueEnumId"
                },
                {
                  "$ref": "#/$defs/NonLocalizedValueEnumId"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The identifier of a property enumeration value.",
              "title": "Enumvalueid"
            },
            "displayValue": {
              "description": "Displayed value of the enumeration.",
              "title": "Displayvalue",
              "type": "string"
            },
            "nonLocalizedValue": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Nonlocalized value of the enumeration if there is one.",
              "title": "Nonlocalizedvalue"
            }
          },
          "required": [
            "displayValue"
          ],
          "title": "EnumValue",
          "type": "object"
        },
        "EnumValueId": {
          "additionalProperties": false,
          "properties": {
            "enumValueId": {
              "anyOf": [
                {
                  "$ref": "#/$defs/DisplayValueEnumId"
                },
                {
                  "$ref": "#/$defs/NonLocalizedValueEnumId"
                }
              ],
              "description": "The identifier of a property enumeration value.",
              "title": "Enumvalueid"
            }
          },
          "required": [
            "enumValueId"
          ],
          "title": "EnumValueId",
          "type": "object"
        },
        "ExpressionDefaultValue": {
          "additionalProperties": false,
          "properties": {
            "expressions": {
              "items": {
                "type": "string"
              },
              "title": "Expressions",
              "type": "array"
            }
          },
          "required": [
            "expressions"
          ],
          "title": "ExpressionDefaultValue",
          "type": "object"
        },
        "Group": {
          "additionalProperties": false,
          "properties": {
            "propertyGroupId": {
              "anyOf": [
                {
                  "$ref": "#/$defs/PropertyGroupId"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Name"
            }
          },
          "title": "Group",
          "type": "object"
        },
        "NonLocalizedValueEnumId": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "nonLocalizedValue",
              "title": "Type",
              "type": "string"
            },
            "nonLocalizedValue": {
              "title": "Nonlocalizedvalue",
              "type": "string"
            }
          },
          "required": [
            "type",
            "nonLocalizedValue"
          ],
          "title": "NonLocalizedValueEnumId",
          "type": "object"
        },
        "NormalAngleListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "angleList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "number"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalAngleListPropertyValue",
          "type": "object"
        },
        "NormalAnglePropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "angle",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "number"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalAnglePropertyValue",
          "type": "object"
        },
        "NormalAreaListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "areaList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "number"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalAreaListPropertyValue",
          "type": "object"
        },
        "NormalAreaPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "area",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "number"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalAreaPropertyValue",
          "type": "object"
        },
        "NormalBooleanListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "booleanList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "boolean"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalBooleanListPropertyValue",
          "type": "object"
        },
        "NormalBooleanPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "boolean",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalBooleanPropertyValue",
          "type": "object"
        },
        "NormalIntegerListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "integerList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "integer"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalIntegerListPropertyValue",
          "type": "object"
        },
        "NormalIntegerPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "integer",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "integer"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalIntegerPropertyValue",
          "type": "object"
        },
        "NormalLengthListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "lengthList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "number"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalLengthListPropertyValue",
          "type": "object"
        },
        "NormalLengthPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "length",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "number"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalLengthPropertyValue",
          "type": "object"
        },
        "NormalMultiEnumPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "multiEnum",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "description": "A list of enumeration identifiers.",
              "items": {
                "$ref": "#/$defs/EnumValueId"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalMultiEnumPropertyValue",
          "type": "object"
        },
        "NormalNumberListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "numberList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "number"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalNumberListPropertyValue",
          "type": "object"
        },
        "NormalNumberPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "number",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "number"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalNumberPropertyValue",
          "type": "object"
        },
        "NormalSingleEnumPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "singleEnum",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "anyOf": [
                {
                  "$ref": "#/$defs/DisplayValueEnumId"
                },
                {
                  "$ref": "#/$defs/NonLocalizedValueEnumId"
                }
              ],
              "description": "The identifier of a property enumeration value.",
              "title": "Value"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalSingleEnumPropertyValue",
          "type": "object"
        },
        "NormalStringListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "stringList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "string"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalStringListPropertyValue",
          "type": "object"
        },
        "NormalStringPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "string",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "string"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalStringPropertyValue",
          "type": "object"
        },
        "NormalVolumeListPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "volumeList",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "items": {
                "type": "number"
              },
              "title": "Value",
              "type": "array"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalVolumeListPropertyValue",
          "type": "object"
        },
        "NormalVolumePropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "volume",
              "title": "Type",
              "type": "string"
            },
            "status": {
              "const": "normal",
              "title": "Status",
              "type": "string"
            },
            "value": {
              "title": "Value",
              "type": "number"
            }
          },
          "required": [
            "type",
            "status",
            "value"
          ],
          "title": "NormalVolumePropertyValue",
          "type": "object"
        },
        "NotAvailablePropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/$defs/PropertyType"
            },
            "status": {
              "const": "notAvailable",
              "title": "Status",
              "type": "string"
            }
          },
          "required": [
            "type",
            "status"
          ],
          "title": "NotAvailablePropertyValue",
          "type": "object"
        },
        "PossibleEnumValue": {
          "additionalProperties": false,
          "properties": {
            "enumValue": {
              "$ref": "#/$defs/EnumValue",
              "description": "The description of an enumeration value."
            }
          },
          "required": [
            "enumValue"
          ],
          "title": "PossibleEnumValue",
          "type": "object"
        },
        "PropertyDefinition": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "title": "Name",
              "type": "string"
            },
            "description": {
              "title": "Description",
              "type": "string"
            },
            "type": {
              "$ref": "#/$defs/PropertyType"
            },
            "isEditable": {
              "title": "Iseditable",
              "type": "boolean"
            },
            "defaultValue": {
              "anyOf": [
                {
                  "$ref": "#/$defs/BasicDefaultValue"
                },
                {
                  "$ref": "#/$defs/ExpressionDefaultValue"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Defaultvalue"
            },
            "possibleEnumValues": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PossibleEnumValue"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The possible enum values of the property when the property type is enumeration.",
              "title": "Possibleenumvalues"
            },
            "availability": {
              "description": "The identifiers of classification items the new property is available for.",
              "items": {
                "$ref": "#/$defs/ClassificationItemIdArrayItem"
              },
              "title": "Availability",
              "type": "array"
            },
            "group": {
              "$ref": "#/$defs/Group",
              "description": "The property group defined by name or id. If both fields exists the id will be used."
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "isEditable",
            "availability",
            "group"
          ],
          "title": "PropertyDefinition",
          "type": "object"
        },
        "PropertyDefinitionWrapper": {
          "additionalProperties": false,
          "properties": {
            "propertyDefinition": {
              "$ref": "#/$defs/PropertyDefinition"
            }
          },
          "required": [
            "propertyDefinition"
          ],
          "title": "PropertyDefinition",
          "type": "object"
        },
        "PropertyGroupId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "PropertyGroupId",
          "type": "object"
        },
        "PropertyType": {
          "enum": [
            "number",
            "integer",
            "string",
            "boolean",
            "length",
            "area",
            "volume",
            "angle",
            "numberList",
            "integerList",
            "stringList",
            "booleanList",
            "lengthList",
            "areaList",
            "volumeList",
            "angleList",
            "singleEnum",
            "multiEnum"
          ],
          "title": "PropertyType",
          "type": "string"
        },
        "UserUndefinedPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/$defs/PropertyType"
            },
            "status": {
              "const": "userUndefined",
              "title": "Status",
              "type": "string"
            }
          },
          "required": [
            "type",
            "status"
          ],
          "title": "UserUndefinedPropertyValue",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreatePropertyDefinitionsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_property_definitionsArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_create_property_groups",
    "title": "CreatePropertyGroups",
    "description": "Creates Property Groups based on the given parameters.",
    "input_schema": {
      "$defs": {
        "CreatePropertyGroupsParameters": {
          "additionalProperties": false,
          "properties": {
            "propertyGroups": {
              "description": "The parameters of the new property groups.",
              "items": {
                "$ref": "#/$defs/PropertyGroupWrapper"
              },
              "title": "Propertygroups",
              "type": "array"
            }
          },
          "required": [
            "propertyGroups"
          ],
          "title": "CreatePropertyGroupsParameters",
          "type": "object"
        },
        "PropertyGroup": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "title": "Name",
              "type": "string"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Description"
            }
          },
          "required": [
            "name"
          ],
          "title": "PropertyGroup",
          "type": "object"
        },
        "PropertyGroupWrapper": {
          "additionalProperties": false,
          "properties": {
            "propertyGroup": {
              "$ref": "#/$defs/PropertyGroup"
            }
          },
          "required": [
            "propertyGroup"
          ],
          "title": "PropertyGroup",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/CreatePropertyGroupsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "create_property_groupsArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_delete_property_definitions",
    "title": "DeletePropertyDefinitions",
    "description": "Deletes the given Custom Property Definitions.",
    "input_schema": {
      "$defs": {
        "DeletePropertyDefinitionsParameters": {
          "additionalProperties": false,
          "properties": {
            "propertyIds": {
              "description": "The identifiers of properties to delete.",
              "items": {
                "$ref": "#/$defs/PropertyIdWrapper"
              },
              "title": "Propertyids",
              "type": "array"
            }
          },
          "required": [
            "propertyIds"
          ],
          "title": "DeletePropertyDefinitionsParameters",
          "type": "object"
        },
        "PropertyId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "PropertyId",
          "type": "object"
        },
        "PropertyIdWrapper": {
          "additionalProperties": false,
          "properties": {
            "propertyId": {
              "$ref": "#/$defs/PropertyId"
            }
          },
          "required": [
            "propertyId"
          ],
          "title": "PropertyId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/DeletePropertyDefinitionsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "delete_property_definitionsArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_delete_property_groups",
    "title": "DeletePropertyGroups",
    "description": "Deletes the given Custom Property Groups.",
    "input_schema": {
      "$defs": {
        "DeletePropertyGroupsParameters": {
          "additionalProperties": false,
          "properties": {
            "propertyGroupIds": {
              "description": "The identifiers of property groups to delete.",
              "items": {
                "$ref": "#/$defs/PropertyGroupIdWrapper"
              },
              "title": "Propertygroupids",
              "type": "array"
            }
          },
          "required": [
            "propertyGroupIds"
          ],
          "title": "DeletePropertyGroupsParameters",
          "type": "object"
        },
        "PropertyGroupId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "PropertyGroupId",
          "type": "object"
        },
        "PropertyGroupIdWrapper": {
          "additionalProperties": false,
          "properties": {
            "propertyGroupId": {
              "$ref": "#/$defs/PropertyGroupId"
            }
          },
          "required": [
            "propertyGroupId"
          ],
          "title": "PropertyGroupId",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/DeletePropertyGroupsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "delete_property_groupsArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_get_all_properties",
    "title": "GetAllProperties",
    "description": "Returns all user defined and built-in properties.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_all_propertiesArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_get_property_values_of_attributes",
    "title": "GetPropertyValuesOfAttributes",
    "description": "Returns the property values of the attributes for the given property.",
    "input_schema": {
      "$defs": {
        "AttributeId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "AttributeId",
          "type": "object"
        },
        "AttributeIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "attributeId": {
              "$ref": "#/$defs/AttributeId"
            }
          },
          "required": [
            "attributeId"
          ],
          "title": "AttributeIdArrayItem",
          "type": "object"
        },
        "GetPropertyValuesOfAttributesParameters": {
          "additionalProperties": false,
          "properties": {
            "attributeIds": {
              "description": "A list of attributes.",
              "items": {
                "$ref": "#/$defs/AttributeIdArrayItem"
              },
              "title": "Attributeids",
              "type": "array"
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/PropertyIdArrayItem"
              },
              "description": "A list of property identifiers.",
              "title": "Properties"
            }
          },
          "required": [
            "attributeIds",
            "properties"
          ],
          "title": "GetPropertyValuesOfAttributesParameters",
          "type": "object"
        },
        "PropertyId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "PropertyId",
          "type": "object"
        },
        "PropertyIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "propertyId": {
              "$ref": "#/$defs/PropertyId"
            }
          },
          "required": [
            "propertyId"
          ],
          "title": "PropertyIdArrayItem",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetPropertyValuesOfAttributesParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_property_values_of_attributesArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_get_property_values_of_elements",
    "title": "GetPropertyValuesOfElements",
    "description": "Returns the property values of the elements for the given property. It works for subelements of hierarchal elements also.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "GetPropertyValuesOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/PropertyIdArrayItem"
              },
              "description": "A list of property identifiers.",
              "title": "Properties"
            }
          },
          "required": [
            "elements",
            "properties"
          ],
          "title": "GetPropertyValuesOfElementsParameters",
          "type": "object"
        },
        "PropertyId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "PropertyId",
          "type": "object"
        },
        "PropertyIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "propertyId": {
              "$ref": "#/$defs/PropertyId"
            }
          },
          "required": [
            "propertyId"
          ],
          "title": "PropertyIdArrayItem",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetPropertyValuesOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_property_values_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "properties_set_property_values_of_elements",
    "title": "SetPropertyValuesOfElements",
    "description": "Sets the property values of elements. It works for subelements of hierarchal elements also.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementPropertyValue": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            },
            "propertyId": {
              "$ref": "#/$defs/PropertyId"
            },
            "propertyValue": {
              "$ref": "#/$defs/PropertyValue"
            }
          },
          "required": [
            "elementId",
            "propertyId",
            "propertyValue"
          ],
          "title": "ElementPropertyValue",
          "type": "object"
        },
        "PropertyId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "PropertyId",
          "type": "object"
        },
        "PropertyValue": {
          "additionalProperties": true,
          "properties": {
            "value": {
              "title": "Value",
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "title": "PropertyValue",
          "type": "object"
        },
        "SetPropertyValuesOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elementPropertyValues": {
              "description": "A list of element property values.",
              "items": {
                "$ref": "#/$defs/ElementPropertyValue"
              },
              "title": "Elementpropertyvalues",
              "type": "array"
            }
          },
          "required": [
            "elementPropertyValues"
          ],
          "title": "SetPropertyValuesOfElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/SetPropertyValuesOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "set_property_values_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "revisions_get_current_revision_changes_of_layouts",
    "title": "GetCurrentRevisionChangesOfLayouts",
    "description": "Retrieves all changes belong to the last revision of the given layouts.",
    "input_schema": {
      "$defs": {
        "DatabaseId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "DatabaseId",
          "type": "object"
        },
        "DatabaseIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "databaseId": {
              "$ref": "#/$defs/DatabaseId"
            }
          },
          "required": [
            "databaseId"
          ],
          "title": "DatabaseIdArrayItem",
          "type": "object"
        },
        "GetCurrentRevisionChangesOfLayoutsParameters": {
          "additionalProperties": false,
          "properties": {
            "layoutDatabaseIds": {
              "description": "A list of Archicad databases.",
              "items": {
                "$ref": "#/$defs/DatabaseIdArrayItem"
              },
              "title": "Layoutdatabaseids",
              "type": "array"
            }
          },
          "required": [
            "layoutDatabaseIds"
          ],
          "title": "GetCurrentRevisionChangesOfLayoutsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetCurrentRevisionChangesOfLayoutsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_current_revision_changes_of_layoutsArguments",
      "type": "object"
    }
  },
  {
    "name": "revisions_get_document_revisions",
    "title": "GetDocumentRevisions",
    "description": "Retrieves all document revisions.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_document_revisionsArguments",
      "type": "object"
    }
  },
  {
    "name": "revisions_get_revision_changes",
    "title": "GetRevisionChanges",
    "description": "Retrieves all changes.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "get_revision_changesArguments",
      "type": "object"
    }
  },
  {
    "name": "revisions_get_revision_changes_of_elements",
    "title": "GetRevisionChangesOfElements",
    "description": "Retrieves the changes belong to the given elements.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "GetRevisionChangesOfElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "GetRevisionChangesOfElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/GetRevisionChangesOfElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "get_revision_changes_of_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "teamwork_release_elements",
    "title": "ReleaseElements",
    "description": "Releases elements in Teamwork mode.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "ReleaseElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "ReleaseElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/ReleaseElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "release_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "teamwork_reserve_elements",
    "title": "ReserveElements",
    "description": "Reserves elements in Teamwork mode.",
    "input_schema": {
      "$defs": {
        "ElementId": {
          "additionalProperties": false,
          "properties": {
            "guid": {
              "description": "A Globally Unique Identifier (or Universally Unique Identifier) in its string representation as defined in RFC 4122.",
              "format": "uuid",
              "title": "Guid",
              "type": "string"
            }
          },
          "required": [
            "guid"
          ],
          "title": "ElementId",
          "type": "object"
        },
        "ElementIdArrayItem": {
          "additionalProperties": false,
          "properties": {
            "elementId": {
              "$ref": "#/$defs/ElementId"
            }
          },
          "required": [
            "elementId"
          ],
          "title": "ElementIdArrayItem",
          "type": "object"
        },
        "ReserveElementsParameters": {
          "additionalProperties": false,
          "properties": {
            "elements": {
              "description": "A list of elements.",
              "items": {
                "$ref": "#/$defs/ElementIdArrayItem"
              },
              "title": "Elements",
              "type": "array"
            }
          },
          "required": [
            "elements"
          ],
          "title": "ReserveElementsParameters",
          "type": "object"
        }
      },
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "params": {
          "$ref": "#/$defs/ReserveElementsParameters"
        }
      },
      "required": [
        "port",
        "params"
      ],
      "title": "reserve_elementsArguments",
      "type": "object"
    }
  },
  {
    "name": "teamwork_teamwork_receive",
    "title": "TeamworkReceive",
    "description": "Performs a receive operation on the currently opened Teamwork project.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "teamwork_receiveArguments",
      "type": "object"
    }
  },
  {
    "name": "teamwork_teamwork_send",
    "title": "TeamworkSend",
    "description": "Performs a send operation on the currently opened Teamwork project.",
    "input_schema": {
      "properties": {
        "port": {
          "title": "Port",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "title": "teamwork_sendArguments",
      "type": "object"
    }
  }
]