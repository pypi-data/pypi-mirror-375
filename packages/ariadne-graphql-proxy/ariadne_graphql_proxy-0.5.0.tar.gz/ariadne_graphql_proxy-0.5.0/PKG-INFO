Metadata-Version: 2.4
Name: ariadne-graphql-proxy
Version: 0.5.0
Summary: Ariadne toolkit for building GraphQL proxies.
Project-URL: Homepage, https://ariadnegraphql.org/
Project-URL: Repository, https://github.com/mirumee/ariadne-graphql-proxy
Project-URL: Bug Tracker, https://github.com/mirumee/ariadne-graphql-proxy/issues
Project-URL: Community, https://github.com/mirumee/ariadne/discussions
Project-URL: Twitter, https://twitter.com/AriadneGraphQL
Author-email: Mirumee Software <hello@mirumee.com>
License: BSD 3-Clause License
        
        Copyright (c) 2023, Mirumee Labs
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: ariadne>=0.23.0
Requires-Dist: graphql-core<3.3,>=3.2.0
Requires-Dist: httpx
Provides-Extra: aws
Requires-Dist: asgiref; extra == 'aws'
Requires-Dist: boto3; extra == 'aws'
Provides-Extra: orjson
Requires-Dist: orjson; extra == 'orjson'
Provides-Extra: test
Requires-Dist: black; extra == 'test'
Requires-Dist: freezegun; extra == 'test'
Requires-Dist: moto[dynamodb]; extra == 'test'
Requires-Dist: mypy; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-asyncio; extra == 'test'
Requires-Dist: pytest-httpx; extra == 'test'
Requires-Dist: pytest-mock; extra == 'test'
Requires-Dist: ruff; extra == 'test'
Description-Content-Type: text/markdown

[![Ariadne](https://ariadnegraphql.org/img/logo-horizontal-sm.png)](https://ariadnegraphql.org)

- - - - -

# Ariadne GraphQL Proxy

Ariadne toolkit for building GraphQL proxies.

Features:

- Combining multiple local and remote GraphQL schemas into single GraphQL schema.
- Routing GraphQL queries to local and remote GraphQL schemas.
- Foreign keys system for modeling relationships between separate services schemas.
- Cache framework for caching of GraphQL query results per query fields.
- Low-level utilities for GraphQL Schema manipulation: adding, removing and copying schema items.


## Installation

Ariadne GraphQL Proxy can be installed with pip:

```console
pip install ariadne-graphql-proxy
```

Ariadne GraphQL Proxy requires Python 3.10 or higher.


## Example

Following code combines two remote schemas into one:

```python
from ariadne.asgi import GraphQL
from ariadne_graphql_proxy import ProxySchema, get_context_value

proxy_schema = ProxySchema()

proxy_schema.add_remote_schema("https://example.com/first-graphql/")
proxy_schema.add_remote_schema("https://example.com/second-graphql/")

final_schema = proxy_schema.get_final_schema()

app = GraphQL(
    final_schema,
    context_value=get_context_value,
    root_value=proxy_schema.root_resolver,
)
```


## Usage guide

For guide on using Ariadne GraphQL Proxy, please see the [GUIDE.md](./GUIDE.md) file.

> **Note:** Ariadne GraphQL Proxy is currently in prototyping stages. Library's API can and will change!


## Contributing

We are welcoming contributions to Ariadne GraphQL Proxy!

If you've found a bug or issue, feel free to open [GitHub issue](https://github.com/mirumee/ariadne-graphql-proxy/issues).

If you have any questions or feedback, don't hesitate to catch us on [GitHub discussions on main Ariadne repo](https://github.com/mirumee/ariadne/discussions/).

Pull requests are also welcome! We only request that PRs providing new features and extending existing implementation are proceeded by discussion in dedicated GitHub issue with a proposal or on  [`ariadne/discussions`](https://github.com/mirumee/ariadne/discussions/).

Also make sure you follow [@AriadneGraphQL](https://twitter.com/AriadneGraphQL) on Twitter for latest updates, news and random musings!

**Crafted with ❤️ by [Mirumee Software](http://mirumee.com)**
hello@mirumee.com