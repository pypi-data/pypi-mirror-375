[project]
name = "pymgcv"
authors = [{ name = "danielward27", email = "danielward27@outlook.com" }]
description = "pymgcv: Generalized additive models using mgcv, in Python."
requires-python = ">= 3.11"
version = "0.0.10"

keywords = ["generalized additive models", "GAMs"]
license = { file = "LICENSE" }
readme = "README.md"
dependencies = [
    "rpy2>=3.6.2",      # latest version silences excessive warnings
    "numpy>=2.2.5",
    "pandas>=2.2.3",
    "matplotlib>=3.10",
    "scipy>=1.12.0",
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pytest.ini_options]
addopts = "--markdown-docs"

[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
    "ipykernel",
    "mkdocs",
    "mkdocs-material",
    "mkdocs-ipynb",
    "mkdocstrings[python]",
    "pymdown-extensions",
    "griffe-inherited-docstrings",
    "pytest-markdown-docs",
    "mdit-py-plugins",
    "markdown-it-py",
    "nbconvert",
    "build",
]

# ----------------- ruff config -------------------#
[tool.ruff]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]

[tool.ruff.lint]
select = ["E", "F", "B", "D", "COM", "I", "UP", "TRY004", "RET", "PT", "FBT"]
ignore = ["D107"]


[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D103", "D100"] # Docstrings in tests

[tool.ruff.lint.pydocstyle]
convention = "google"

# --------------pixi config ----------------#
# Minimal pixi environment for development and CI
[tool.pixi.dependencies]
r-base = ">=4.4.3,<4.5"
r-mgcv = ">=1.9_3,<2"
xz = ">=5.8.1,<6"


[tool.pixi.pypi-options]
no-build-isolation = ["rpy2"]

[tool.pixi.pypi-dependencies]
pymgcv = { path = ".", editable = true }

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64"]

[tool.pixi.environments]
dev = ["dev"]

[tool.pixi.tasks.notebooks]
# Ensures all notebooks up to date: pixi run notebooks
cmd = ["$PIXI_PROJECT_ROOT/docs/scripts/notebooks.sh"]
env = { "PYTHONWARNINGS" = "ignore" }
