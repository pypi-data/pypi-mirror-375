#include "my_class.h"

#include <string>
#include <future>

// Some doc about the class, that you want to see in the header file
class MyClassPImpl
{
    //
    // Some doc you also want to see in the header file
    //
public:
    // Construct an Instance
    MyClassPImpl(const std::string& someParam)
    {
        // Some code you provide in the C++ file, but do not want to see in the header file
    }

    // Destructs the instance
    // (this should not be published in the header, since the PImpl will generate its own unique_ptr destructor)
    ~MyClassPImpl() { /* ... */ }

    // Some method
    bool SomeMethod() { /* ... */ return true; }

    // Some public static method
    static bool SomeStaticFunction() { /* ... */ return true;}


private:
    void SomePrivateMethod() { /* ... */ }

    std::string mSomePrivateMember;
    std::future<void> mAnoterPrivateMember;
};



// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// <pimpl_glue_code>  // Autogenerated code below! Do not edit!
MyClass::MyClass(const std::string & someParam)
    : mPImpl(std::make_unique<MyClassPImpl>(someParam)) { }
bool MyClass::SomeMethod() {
    return mPImpl->SomeMethod(); }
bool MyClass::SomeStaticFunction() {
    return MyClassPImpl::SomeStaticFunction(); }
MyClass::~MyClass() = default;

// </pimpl_glue_code> // Autogenerated code end
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE END !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
