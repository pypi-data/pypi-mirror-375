[build-system]
requires = ['maturin>=1.9,<2']
build-backend = 'maturin'

[project]
name = 'lyricore'
description = ""
requires-python = '>=3.9'
license = 'MIT'
license-files = ['LICENSE']
authors = []
classifiers = [
    'Development Status :: 3 - Alpha',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3.14',
    'Programming Language :: Rust',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Operating System :: POSIX :: Linux',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: MacOS',
    'Typing :: Typed',
]
dependencies = [
    "cloudpickle>=3.1.1",
    "pympler>=1.1",
    "typing-extensions>=4.0.0; python_version<'3.10'",
]
dynamic = ['readme', 'version']

[project.urls]
Homepage = 'https://github.com/lyric-project/lyricore'
Funding = 'https://github.com/lyric-project'
Source = 'https://github.com/lyric-project/lyricore'

[tool.maturin]
python-source = "python"
module-name = "lyricore._lyricore"
bindings = 'pyo3'
features = ["pyo3/extension-module"]

exclude = [
    "lyricore/**/tests",
    "lyricore/**/tests/*",
    "lyricore/tests",
    "lyricore/tests/*",
    "tests",
    "**/__pycache__",
    "**/*.pyc",
]
manifest-path = "python/lyricore-py/Cargo.toml"
[tool.uv]
managed = true

[dependency-groups]
dev = [
    "numpy>=2.0.0",
]
[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.format]
# Format docstrings
docstring-code-format = true
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
# Enable: eror check, import order
select = ["E", "F", "I"]

[tool.ruff.lint.isort]
# Specify the local modules (first-party)
known-first-party = ["lyricore"]
