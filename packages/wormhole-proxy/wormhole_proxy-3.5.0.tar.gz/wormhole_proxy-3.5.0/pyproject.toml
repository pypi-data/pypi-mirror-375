# Main project metadata (PEP 621 standard)
[project]
name = "wormhole-proxy"
version = "3.5.0"
description = "Asynchronous I/O HTTP and HTTPS Proxy on Python >= 3.11"
readme = "README.md"
authors = [
    {name = "Chaiwat Suttipongsakul", email = "cwt@bashell.com"},
]
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["wormhole", "asynchronous", "web", "proxy"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: Proxy Servers",
]
# Declare that the dependency list is generated by the build tool (Poetry)
dynamic = ["dependencies"]

# Standard URLs section
[project.urls]
Homepage = "https://hg.sr.ht/~cwt/wormhole"

# Standard section for console scripts
[project.scripts]
wormhole = "wormhole.proxy:main"

# Standard section for optional dependencies
[project.optional-dependencies]
performance = ["winloop", "uvloop"]

# Poetry-specific configuration
[tool.poetry]
packages = [{include = "wormhole"}]

[tool.poetry.dependencies]
aiodns = "^3.5"
aiohttp = "^3.12"
aiosqlite = "^0.21"
loguru = "^0.7"
# The python version is now specified in [project].requires-python
# Required Windows-only packages
pywin32 = { version = "*", markers = "sys_platform == 'win32'" }

# Optional performance packages
winloop = { version = "*", markers = "sys_platform == 'win32'", optional = true }
uvloop = { version = "*", markers = "sys_platform != 'win32'", optional = true }

[tool.poetry.group.dev.dependencies]
black = "^25.1"
pytest-asyncio = "^1.1"
pytest = "^8.4"
pytest-cov = "^6.3"
mypy = "^1.17"
pytest-xdist = "^3.8.0"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::RuntimeWarning",
]

# Build system configuration
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
