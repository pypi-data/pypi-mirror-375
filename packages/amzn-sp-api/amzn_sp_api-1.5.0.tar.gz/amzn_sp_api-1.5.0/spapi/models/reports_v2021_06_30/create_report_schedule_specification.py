# coding: utf-8

"""
    Selling Partner API for Reports

    The Selling Partner API for Reports lets you retrieve and manage a variety of reports that can help selling partners manage their businesses.

    The version of the OpenAPI document: 2021-06-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pprint
import re  # noqa: F401

import six

from spapi.configuration import Configuration


class CreateReportScheduleSpecification(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'report_type': 'str',
        'marketplace_ids': 'List[str]',
        'report_options': 'Dict[str, str]',
        'period': 'str',
        'next_report_creation_time': 'datetime',
    }

    attribute_map = {
        'report_type': 'reportType',
        'marketplace_ids': 'marketplaceIds',
        'report_options': 'reportOptions',
        'period': 'period',
        'next_report_creation_time': 'nextReportCreationTime',
    }

    def __init__(self, report_type=None, marketplace_ids=None, report_options=None, period=None, next_report_creation_time=None, _configuration=None):  # noqa: E501
        """CreateReportScheduleSpecification - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._report_type = None
        self._marketplace_ids = None
        self._report_options = None
        self._period = None
        self._next_report_creation_time = None
        self.discriminator = None

        self.report_type = report_type
        self.marketplace_ids = marketplace_ids
        if report_options is not None:
            self.report_options = report_options
        self.period = period
        if next_report_creation_time is not None:
            self.next_report_creation_time = next_report_creation_time

    @property
    def report_type(self):
        """Gets the report_type of this CreateReportScheduleSpecification.  # noqa: E501

        The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information.  # noqa: E501

        :return: The report_type of this CreateReportScheduleSpecification.  # noqa: E501
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this CreateReportScheduleSpecification.

        The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information.  # noqa: E501

        :param report_type: The report_type of this CreateReportScheduleSpecification.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and report_type is None:
            raise ValueError("Invalid value for `report_type`, must not be `None`")  # noqa: E501

        self._report_type = report_type

    @property
    def marketplace_ids(self):
        """Gets the marketplace_ids of this CreateReportScheduleSpecification.  # noqa: E501

        A list of marketplace identifiers for the report schedule.  # noqa: E501

        :return: The marketplace_ids of this CreateReportScheduleSpecification.  # noqa: E501
        :rtype: List[str]
        """
        return self._marketplace_ids

    @marketplace_ids.setter
    def marketplace_ids(self, marketplace_ids):
        """Sets the marketplace_ids of this CreateReportScheduleSpecification.

        A list of marketplace identifiers for the report schedule.  # noqa: E501

        :param marketplace_ids: The marketplace_ids of this CreateReportScheduleSpecification.  # noqa: E501
        :type: List[str]
        """
        if self._configuration.client_side_validation and marketplace_ids is None:
            raise ValueError("Invalid value for `marketplace_ids`, must not be `None`")  # noqa: E501
        if (self._configuration.client_side_validation and
                marketplace_ids is not None and len(marketplace_ids) > 25):
            raise ValueError("Invalid value for `marketplace_ids`, number of items must be less than or equal to `25`")  # noqa: E501
        if (self._configuration.client_side_validation and
                marketplace_ids is not None and len(marketplace_ids) < 1):
            raise ValueError("Invalid value for `marketplace_ids`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._marketplace_ids = marketplace_ids

    @property
    def report_options(self):
        """Gets the report_options of this CreateReportScheduleSpecification.  # noqa: E501

        Additional information passed to reports. This varies by report type.  # noqa: E501

        :return: The report_options of this CreateReportScheduleSpecification.  # noqa: E501
        :rtype: Dict[str, str]
        """
        return self._report_options

    @report_options.setter
    def report_options(self, report_options):
        """Sets the report_options of this CreateReportScheduleSpecification.

        Additional information passed to reports. This varies by report type.  # noqa: E501

        :param report_options: The report_options of this CreateReportScheduleSpecification.  # noqa: E501
        :type: Dict[str, str]
        """

        self._report_options = report_options

    @property
    def period(self):
        """Gets the period of this CreateReportScheduleSpecification.  # noqa: E501

        One of a set of predefined <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> periods that specifies how often a report should be created.  # noqa: E501

        :return: The period of this CreateReportScheduleSpecification.  # noqa: E501
        :rtype: str
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this CreateReportScheduleSpecification.

        One of a set of predefined <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> periods that specifies how often a report should be created.  # noqa: E501

        :param period: The period of this CreateReportScheduleSpecification.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and period is None:
            raise ValueError("Invalid value for `period`, must not be `None`")  # noqa: E501
        allowed_values = ["PT5M", "PT15M", "PT30M", "PT1H", "PT2H", "PT4H", "PT8H", "PT12H", "P1D", "P2D", "P3D", "PT84H", "P7D", "P14D", "P15D", "P18D", "P30D", "P1M"]  # noqa: E501
        if (self._configuration.client_side_validation and
                period not in allowed_values):
            raise ValueError(
                "Invalid value for `period` ({0}), must be one of {1}"  # noqa: E501
                .format(period, allowed_values)
            )

        self._period = period

    @property
    def next_report_creation_time(self):
        """Gets the next_report_creation_time of this CreateReportScheduleSpecification.  # noqa: E501

        The date and time when the schedule will create its next report, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format.  # noqa: E501

        :return: The next_report_creation_time of this CreateReportScheduleSpecification.  # noqa: E501
        :rtype: datetime
        """
        return self._next_report_creation_time

    @next_report_creation_time.setter
    def next_report_creation_time(self, next_report_creation_time):
        """Sets the next_report_creation_time of this CreateReportScheduleSpecification.

        The date and time when the schedule will create its next report, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format.  # noqa: E501

        :param next_report_creation_time: The next_report_creation_time of this CreateReportScheduleSpecification.  # noqa: E501
        :type: datetime
        """

        self._next_report_creation_time = next_report_creation_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateReportScheduleSpecification, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateReportScheduleSpecification):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CreateReportScheduleSpecification):
            return True

        return self.to_dict() != other.to_dict()
