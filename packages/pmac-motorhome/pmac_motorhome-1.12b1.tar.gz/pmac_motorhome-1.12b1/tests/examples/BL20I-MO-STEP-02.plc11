CLOSE

;####################################################
; Autogenerated Homing PLC for GeoBrick, DO NOT MODIFY
; Group 2:
;  Axis 3: htype = LIMIT, jdist = 0, post = i
;  Axis 4: htype = LIMIT, jdist = 0, post = i
; Group 3:
;  Axis 5: htype = LIMIT, jdist = 0, post = i
;  Axis 6: htype = LIMIT, jdist = 0, post = i
; Group 4:
;  Axis 1: htype = LIMIT, jdist = 0, post = i
;  Axis 2: htype = LIMIT, jdist = 0, post = i
; Group 5:
;  Axis 7: htype = LIMIT, jdist = 0, post = i
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(11&30)*50+11%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1100
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1101
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1102
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1103
HomingBackupGroup = 0

OPEN PLC11 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
    HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1104=i313 P1105=i413 P1106=i513 P1107=i613 P1108=i113 P1109=i213 P1110=i713
;Save the low soft limits to P variables px20..x35
P1120=i314 P1121=i414 P1122=i514 P1123=i614 P1124=i114 P1125=i214 P1126=i714
;Save the home capture flags to P variables px36..x51
P1136=i7032 P1137=i7042 P1138=i7112 P1139=i7122 P1140=i7012 P1141=i7022 P1142=i7132
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1152=P1136^$C P1153=P1137^$C P1154=P1138^$C P1155=P1139^$C P1156=P1140^$C P1157=P1141^$C P1158=P1142^$C
;Save the limit flags to P variables px68..x83
P1168=i324 P1169=i424 P1170=i524 P1171=i624 P1172=i124 P1173=i224 P1174=i724
;Save the current position to P variables px84..x99
P1184=M362 P1185=M462 P1186=M562 P1187=M662 P1188=M162 P1189=M262 P1190=M762
;Clear the soft limits
i313=0 i413=0 i513=0 i613=0 i113=0 i213=0 i713=0
i314=0 i414=0 i514=0 i614=0 i114=0 i214=0 i714=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    HomingGroup=2

    ;Clear home flags
    m345=0 m445=0
    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastSearch State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastSearch
        ; Execute the move commands
        
        m372=100000000*(i323/ABS(i323)) m472=100000000*(i423/ABS(i423))
        cmd "#3J^*^0 #4J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m340&m440=0) ; At least one motor should not be In Position
        and (m342|m442 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m342|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Store the difference between current pos and start pos ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        P1184=(P1184-M362)/(I308*32)+0-(i326/16)
        P1185=(P1185-M462)/(I408*32)+0-(i426/16)
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastRetrace State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastRetrace
        ; Execute the move commands
        i7032=P1152 i7042=P1153 m372=100000000*(-i323/ABS(i323)) m472=100000000*(-i423/ABS(i423))
        cmd "#3J^*^0 #4J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m340&m440=0) ; At least one motor should not be In Position
        and (m342|m442 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m342|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Check if any limits need disabling ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        ;Save the user home flags to P variables px52..x67
        ;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
            P1152=i7033 P1153=i7043
        ; if capture on flag, and flag high, then we need to disable limits
        if (P1136&2=2 and P1136&8=0)
            ; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
            if (P1152=1 and i323>0 and i326<1)
            or (P1152=2 and i323<0 and i326>-1)
                i324=i324 | $20000
            else
                ; if it isn't then set it into invalid error
                HomingStatus=StatusInvalid
            endif
        endif
        ; if capture on flag, and flag high, then we need to disable limits
        if (P1137&2=2 and P1137&8=0)
            ; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
            if (P1153=1 and i423>0 and i426<1)
            or (P1153=2 and i423<0 and i426>-1)
                i424=i424 | $20000
            else
                ; if it isn't then set it into invalid error
                HomingStatus=StatusInvalid
            endif
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- Homing State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; Execute the move commands
        i7032=P1136 i7042=P1137
        cmd "#3hm #4hm"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m340&m440=0) ; At least one motor should not be In Position
        and (m342|m442 = 0) ; Following error check
        and (m330|m430 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m342|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m330|m430 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Restore limits if needed ----
    ;Restore the limit flags to P variables px68..x83
    i324=P1168 i424=P1169

    ;---- Check if all motors have homed ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    and (m345&m445=0)
        HomingStatus=StatusIncomplete
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PostHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePostHomeMove
        ; Execute the move commands
        m372=P1184 m472=P1185
        cmd "#3J=* #4J=*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m340&m440=0) ; At least one motor should not be In Position
        and (m342|m442 = 0) ; Following error check
        and (m330|m430 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m342|m442 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m330|m430 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    HomingGroup=3

    ;Clear home flags
    m545=0 m645=0
    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastSearch State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastSearch
        ; Execute the move commands
        
        m572=100000000*(i523/ABS(i523)) m672=100000000*(i623/ABS(i623))
        cmd "#5J^*^0 #6J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m540&m640=0) ; At least one motor should not be In Position
        and (m542|m642 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m542|m642 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Store the difference between current pos and start pos ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        P1186=(P1186-M562)/(I508*32)+0-(i526/16)
        P1187=(P1187-M662)/(I608*32)+0-(i626/16)
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastRetrace State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastRetrace
        ; Execute the move commands
        i7112=P1154 i7122=P1155 m572=100000000*(-i523/ABS(i523)) m672=100000000*(-i623/ABS(i623))
        cmd "#5J^*^0 #6J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m540&m640=0) ; At least one motor should not be In Position
        and (m542|m642 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m542|m642 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Check if any limits need disabling ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        ;Save the user home flags to P variables px52..x67
        ;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
            P1154=i7113 P1155=i7123
        ; if capture on flag, and flag high, then we need to disable limits
        if (P1138&2=2 and P1138&8=0)
            ; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
            if (P1154=1 and i523>0 and i526<1)
            or (P1154=2 and i523<0 and i526>-1)
                i524=i524 | $20000
            else
                ; if it isn't then set it into invalid error
                HomingStatus=StatusInvalid
            endif
        endif
        ; if capture on flag, and flag high, then we need to disable limits
        if (P1139&2=2 and P1139&8=0)
            ; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
            if (P1155=1 and i623>0 and i626<1)
            or (P1155=2 and i623<0 and i626>-1)
                i624=i624 | $20000
            else
                ; if it isn't then set it into invalid error
                HomingStatus=StatusInvalid
            endif
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- Homing State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; Execute the move commands
        i7112=P1138 i7122=P1139
        cmd "#5hm #6hm"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m540&m640=0) ; At least one motor should not be In Position
        and (m542|m642 = 0) ; Following error check
        and (m530|m630 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m542|m642 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m530|m630 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Restore limits if needed ----
    ;Restore the limit flags to P variables px68..x83
    i524=P1170 i624=P1171

    ;---- Check if all motors have homed ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    and (m545&m645=0)
        HomingStatus=StatusIncomplete
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PostHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePostHomeMove
        ; Execute the move commands
        m572=P1186 m672=P1187
        cmd "#5J=* #6J=*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m540&m640=0) ; At least one motor should not be In Position
        and (m542|m642 = 0) ; Following error check
        and (m530|m630 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m542|m642 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m530|m630 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 4)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    HomingGroup=4

    ;Clear home flags
    m145=0 m245=0
    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastSearch State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastSearch
        ; Execute the move commands
        
        m172=100000000*(i123/ABS(i123)) m272=100000000*(i223/ABS(i223))
        cmd "#1J^*^0 #2J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m240=0) ; At least one motor should not be In Position
        and (m142|m242 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m242 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Store the difference between current pos and start pos ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        P1188=(P1188-M162)/(I108*32)+0-(i126/16)
        P1189=(P1189-M262)/(I208*32)+0-(i226/16)
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastRetrace State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastRetrace
        ; Execute the move commands
        i7012=P1156 i7022=P1157 m172=100000000*(-i123/ABS(i123)) m272=100000000*(-i223/ABS(i223))
        cmd "#1J^*^0 #2J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m240=0) ; At least one motor should not be In Position
        and (m142|m242 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m242 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Check if any limits need disabling ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        ;Save the user home flags to P variables px52..x67
        ;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
            P1156=i7013 P1157=i7023
        ; if capture on flag, and flag high, then we need to disable limits
        if (P1140&2=2 and P1140&8=0)
            ; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
            if (P1156=1 and i123>0 and i126<1)
            or (P1156=2 and i123<0 and i126>-1)
                i124=i124 | $20000
            else
                ; if it isn't then set it into invalid error
                HomingStatus=StatusInvalid
            endif
        endif
        ; if capture on flag, and flag high, then we need to disable limits
        if (P1141&2=2 and P1141&8=0)
            ; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
            if (P1157=1 and i223>0 and i226<1)
            or (P1157=2 and i223<0 and i226>-1)
                i224=i224 | $20000
            else
                ; if it isn't then set it into invalid error
                HomingStatus=StatusInvalid
            endif
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- Homing State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; Execute the move commands
        i7012=P1140 i7022=P1141
        cmd "#1hm #2hm"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m240=0) ; At least one motor should not be In Position
        and (m142|m242 = 0) ; Following error check
        and (m130|m230 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m242 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m130|m230 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Restore limits if needed ----
    ;Restore the limit flags to P variables px68..x83
    i124=P1172 i224=P1173

    ;---- Check if all motors have homed ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    and (m145&m245=0)
        HomingStatus=StatusIncomplete
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PostHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePostHomeMove
        ; Execute the move commands
        m172=P1188 m272=P1189
        cmd "#1J=* #2J=*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m140&m240=0) ; At least one motor should not be In Position
        and (m142|m242 = 0) ; Following error check
        and (m130|m230 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m142|m242 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m130|m230 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 5)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    HomingGroup=5

    ;Clear home flags
    m745=0
    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastSearch State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastSearch
        ; Execute the move commands
        
        m772=100000000*(i723/ABS(i723))
        cmd "#7J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m740=0) ; At least one motor should not be In Position
        and (m742 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m742 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Store the difference between current pos and start pos ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        P1190=(P1190-M762)/(I708*32)+0-(i726/16)
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- FastRetrace State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateFastRetrace
        ; Execute the move commands
        i7132=P1158 m772=100000000*(-i723/ABS(i723))
        cmd "#7J^*^0"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m740=0) ; At least one motor should not be In Position
        and (m742 = 0) ; Following error check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m742 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Check if any limits need disabling ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        ;Save the user home flags to P variables px52..x67
        ;NOTE: this overwrites inverse flag (ran out of P vars), so can't use inverse flag after this point
            P1158=i7133
        ; if capture on flag, and flag high, then we need to disable limits
        if (P1142&2=2 and P1142&8=0)
            ; ix23 (h_vel) should be opposite to ix26 (h_off) and in direction of home flag
            if (P1158=1 and i723>0 and i726<1)
            or (P1158=2 and i723<0 and i726>-1)
                i724=i724 | $20000
            else
                ; if it isn't then set it into invalid error
                HomingStatus=StatusInvalid
            endif
        endif
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- Homing State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StateHoming
        ; Execute the move commands
        i7132=P1142
        cmd "#7hm"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m740=0) ; At least one motor should not be In Position
        and (m742 = 0) ; Following error check
        and (m730 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m742 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m730 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

    ;---- Restore limits if needed ----
    ;Restore the limit flags to P variables px68..x83
    i724=P1174

    ;---- Check if all motors have homed ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    and (m745=0)
        HomingStatus=StatusIncomplete
    endif

    ; Wait for user to tell us to continue if in debug
    if (HomingStatus = StatusDebugHoming)
        HomingStatus = StatusPaused
        while (HomingStatus = StatusPaused)
        endw
    endif

    ;---- PostHomeMove State ----
    if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
        HomingState=StatePostHomeMove
        ; Execute the move commands
        m772=P1190
        cmd "#7J=*"
        ; Wait for the move to complete
        timer = 20 MilliSeconds ; Small delay to start moving
        while (timer > 0)
        endw
        timer = 600000 MilliSeconds ; Now start checking the conditions
        while (m740=0) ; At least one motor should not be In Position
        and (m742 = 0) ; Following error check
        and (m730 = 0) ; Limit check
        and (timer > 0) ; Check for timeout
        and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
        endw
        ; Check why we left the while loop
        if (m742 != 0) ; Following error check failed
            HomingStatus = StatusFFErr
        endif
        if (m730 != 0) ; Limit check failed
            HomingStatus = StatusLimit
        endif
        if (timer<0 or timer=0) ; If we timed out
            HomingStatus = StatusTimeout
        endif
    endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
    ;If we've got this far without failing, set status and state done
    HomingStatus=StatusDone
    HomingState=StateDone
    ;Restore the homing group from px03
    HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m342=0)
    cmd "#3J/"
endif
if (m442=0)
    cmd "#4J/"
endif
if (m542=0)
    cmd "#5J/"
endif
if (m642=0)
    cmd "#6J/"
endif
if (m142=0)
    cmd "#1J/"
endif
if (m242=0)
    cmd "#2J/"
endif
if (m742=0)
    cmd "#7J/"
endif
;Restore the high soft limits from P variables px04..x19
i313=P1104 i413=P1105 i513=P1106 i613=P1107 i113=P1108 i213=P1109 i713=P1110
;Restore the low soft limits from P variables px20..x35
i314=P1120 i414=P1121 i514=P1122 i614=P1123 i114=P1124 i214=P1125 i714=P1126
;Restore the home capture flags from P variables px36..x51
i7032=P1136 i7042=P1137 i7112=P1138 i7122=P1139 i7012=P1140 i7022=P1141 i7132=P1142
;Restore the limit flags to P variables px68..x83
i324=P1168 i424=P1169 i524=P1170 i624=P1171 i124=P1172 i224=P1173 i724=P1174

DISABLE PLC11
CLOSE
