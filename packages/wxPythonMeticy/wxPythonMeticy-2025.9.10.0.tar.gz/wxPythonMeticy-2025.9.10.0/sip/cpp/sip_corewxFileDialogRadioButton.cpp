/*
 * Interface wrapper code.
 *
 * Generated by SIP 6.12.0
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"
        #include <wx/filedlgcustomize.h>
        #include <wx/event.h>
        #include <wx/eventfilter.h>
        #include <wx/event.h>
        #include <wx/object.h>
        #include <wx/object.h>
        #include <wx/object.h>


PyDoc_STRVAR(doc_wxFileDialogRadioButton_GetValue, "GetValue() -> bool\n"
"\n"
"Return true if the radio button is selected.");

extern "C" {static PyObject *meth_wxFileDialogRadioButton_GetValue(PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogRadioButton_GetValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxFileDialogRadioButton *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxFileDialogRadioButton, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetValue();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogRadioButton, sipName_GetValue, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxFileDialogRadioButton_SetValue, "SetValue(value) -> None\n"
"\n"
"Select the value of the radio button.");

extern "C" {static PyObject *meth_wxFileDialogRadioButton_SetValue(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxFileDialogRadioButton_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool value;
        ::wxFileDialogRadioButton *sipCpp;

        static const char *sipKwdList[] = {
            sipName_value,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb", &sipSelf, sipType_wxFileDialogRadioButton, &sipCpp, &value))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetValue(value);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_FileDialogRadioButton, sipName_SetValue, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxFileDialogRadioButton(void *, const sipTypeDef *);}
static void *cast_wxFileDialogRadioButton(void *sipCppV, const sipTypeDef *targetType)
{
    ::wxFileDialogRadioButton *sipCpp = reinterpret_cast< ::wxFileDialogRadioButton *>(sipCppV);

    if (targetType == sipType_wxFileDialogRadioButton)
        return sipCppV;

    sipCppV = ((const sipClassTypeDef *)sipType_wxFileDialogCustomControl)->ctd_cast(static_cast< ::wxFileDialogCustomControl *>(sipCpp), targetType);
    if (sipCppV)
        return sipCppV;

    return SIP_NULLPTR;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxFileDialogRadioButton(void *, int);}
static void release_wxFileDialogRadioButton(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxFileDialogRadioButton *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_wxFileDialogRadioButton(sipSimpleWrapper *);}
static void dealloc_wxFileDialogRadioButton(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxFileDialogRadioButton(sipGetAddress(sipSelf), 0);
    }
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxFileDialogRadioButton[] = {{171, 255, 1}};


static PyMethodDef methods_wxFileDialogRadioButton[] = {
    {sipName_GetValue, meth_wxFileDialogRadioButton_GetValue, METH_VARARGS, doc_wxFileDialogRadioButton_GetValue},
    {sipName_SetValue, SIP_MLMETH_CAST(meth_wxFileDialogRadioButton_SetValue), METH_VARARGS|METH_KEYWORDS, doc_wxFileDialogRadioButton_SetValue}
};

sipVariableDef variables_wxFileDialogRadioButton[] = {
    {PropertyVariable, sipName_Value, &methods_wxFileDialogRadioButton[0], &methods_wxFileDialogRadioButton[1], SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_wxFileDialogRadioButton, "Represents a custom radio button inside wxFileDialog.");


sipClassTypeDef sipTypeDef__core_wxFileDialogRadioButton = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_wxFileDialogRadioButton,
        SIP_NULLPTR,
        SIP_NULLPTR,
    },
    {
        sipNameNr_FileDialogRadioButton,
        {0, 0, 1},
        2, methods_wxFileDialogRadioButton,
        0, SIP_NULLPTR,
        1, variables_wxFileDialogRadioButton,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxFileDialogRadioButton,
    -1,
    -1,
    supers_wxFileDialogRadioButton,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_wxFileDialogRadioButton,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_wxFileDialogRadioButton,
    cast_wxFileDialogRadioButton,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    0,
};
