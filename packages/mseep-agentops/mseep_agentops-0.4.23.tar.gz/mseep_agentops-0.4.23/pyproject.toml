[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "mseep-agentops"
version = "0.4.23"
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
description = "Observability and DevTool Platform for AI Agents"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "requests>=2.0.0,<3.0.0",
    "psutil>=5.9.8,<7.0.1",
    "termcolor>=2.3.0,<2.5.0",
    "PyYAML>=5.3,<7.0",
    "packaging>=21.0,<25.0",
    "httpx>=0.24.0,<0.29.0",
    "aiohttp>=3.8.0,<4.0.0",
    "opentelemetry-sdk==1.29.0; python_version<'3.10'",
    "opentelemetry-sdk>1.29.0; python_version>='3.10'",
    "opentelemetry-api==1.29.0; python_version<'3.10'",
    "opentelemetry-api>1.29.0; python_version>='3.10'",
    "opentelemetry-exporter-otlp-proto-http==1.29.0; python_version<'3.10'",
    "opentelemetry-exporter-otlp-proto-http>1.29.0; python_version>='3.10'",
    "ordered-set>=4.0.0,<5.0.0",
    "wrapt>=1.0.0,<2.0.0",
    "opentelemetry-instrumentation==0.50b0; python_version<'3.10'",
    "opentelemetry-instrumentation>=0.50b0; python_version>='3.10'",
    "opentelemetry-semantic-conventions==0.50b0; python_version<'3.10'",
    "opentelemetry-semantic-conventions>=0.50b0; python_version>='3.10'",
]

[project.urls]
Homepage = "https://github.com/AgentOps-AI/agentops"
Issues = "https://github.com/AgentOps-AI/agentops/issues"

[project.readme]
content-type = "text/plain"
text = "Package managed by MseeP.ai"

[dependency-groups]
test = [
    "openai>=1.60.0",
    "anthropic",
    "pytest-cov",
    "fastapi[standard]",
    "openai-agents[voice]",
]
dev = [
    "pytest>=8.0.0",
    "pytest-depends",
    "pytest-asyncio",
    "pytest-mock",
    "pyfakefs",
    "pytest-recording",
    "vcrpy>=0.7.0",
    "ruff",
    "mypy",
    "types-requests",
    "requests_mock>=1.11.0",
    "python-dotenv",
    "pytest-sugar>=1.0.0",
    "pdbpp>=0.10.3",
    "ipython>=8.18.1",
]

[tool.uv]
compile-bytecode = true
resolution = "highest"
default-groups = [
    "test",
    "dev",
]
constraint-dependencies = [
    "pydantic>=2.8.0; python_version>='3.13'",
    "typing-extensions; python_version>='3.13'",
]

[tool.autopep8]
max_line_length = 120

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "module"
testpaths = [
    "tests/unit",
]
addopts = "--tb=short -p no:warnings --import-mode=importlib --ignore=tests/integration"
pythonpath = [
    ".",
]
faulthandler_timeout = 30
timeout = 60
disable_socket = true
log_cli = true
log_cli_level = "DEBUG"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
    "E712",
    "E711",
    "E722",
    "E731",
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".github",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".vscode",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs",
    "examples",
    "node_modules",
    "site-packages",
    "venv",
    "tests/core_manual_tests",
]

[tool.hatch.build]
exclude = [
    "docs/*",
    "examples/*",
    "tests/*",
    ".github/*",
    "*.gif",
    "*.png",
    "dist/*",
    "build/*",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    "*.pyc",
    "app/*",
    "app/**",
]

[tool.hatch.build.targets.wheel]
packages = [
    "agentops",
]

[tool.hatch.metadata]
allow-direct-references = true
