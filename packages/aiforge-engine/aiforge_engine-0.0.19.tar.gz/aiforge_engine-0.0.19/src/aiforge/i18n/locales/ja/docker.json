{  
  "docker": {
    "checking_environment": "🔍 Docker環境を確認中...",  
    "docker_installed": "✅ Dockerがインストールされています",  
    "docker_not_installed": "❌ Dockerがインストールされていません",  
    "docker_not_in_path": "❌ DockerがインストールされていないかPATHにありません",  
    "docker_running": "✅ Dockerサービスが実行中です",  
    "docker_not_running": "❌ Dockerサービスが実行されていません。Docker Desktopを起動してください",  
    "cannot_connect_docker": "❌ Dockerサービスに接続できません",  
    "docker_compose_available": "✅ Docker Composeが利用可能です",  
    "docker_compose_not_available": "❌ Docker Composeが利用できません",  
    "docker_compose_not_installed": "❌ Docker Composeがインストールされていません",  
    "compose_file_exists": "✅ docker-compose.ymlが存在します",  
    "compose_file_not_exists": "❌ docker-compose.ymlが存在しません",  
    "dev_compose_file_exists": "✅ docker-compose.dev.ymlが存在します",  
    "dev_compose_file_not_exists": "ℹ️ docker-compose.dev.ymlが存在しません（開発モードは利用できません）",  
    "aiforge_image_exists": "✅ AIForgeイメージが存在します",  
    "aiforge_image_not_exists": "ℹ️ AIForgeイメージが存在しません。ビルドが必要です",  
    "cannot_check_image_status": "⚠️ AIForgeイメージのステータスを確認できません",  
    "building_images": "🔨 必要なイメージを確認してビルド中...",  
    "image_exists_skip_build": "✅ AIForgeイメージが存在します。ビルドをスキップします",  
    "start_building": "📦 AIForgeイメージのビルドを開始します...",  
    "build_time_notice": "ℹ️ 初回ビルドには5-10分かかる場合があります。お待ちください...",  
    "build_progress": "📦 ビルド進行状況:",  
    "build_success": "✅ イメージビルドが成功しました",  
    "build_failed": "❌ イメージビルドが失敗しました",  
    "build_exception": "❌ ビルドプロセスで例外が発生しました: {error}",  
    "starting_services": "🚀 AIForge Docker統合起動...",  
    "docker_not_installed_help": "💡 ダウンロード: https://www.docker.com/products/docker-desktop",  
    "docker_not_running_help": "💡 Docker Desktopを起動し、完全に起動するまでお待ちください",  
    "docker_compose_not_available_msg": "❌ Docker Composeが利用できません",  
    "compose_file_not_exists_msg": "❌ docker-compose.ymlファイルが存在しません",  
    "dev_mode_fallback": "💡 プロダクションモードで起動します",  
    "cleaning_old_containers": "🧹 古いコンテナをクリーンアップ中...",  
    "dev_mode_start": "🔧 開発モード起動（コードホットリロード）",  
    "production_mode_start": "🔨 プロダクションモード起動",  
    "searxng_enabled": "🔍 SearXNG検索サービスが有効になりました",  
    "searxng_not_enabled": "⚠️ SearXNG検索サービスが有効になっていません",  
    "service_start_success": "✅ Dockerサービスが正常に起動しました",  
    "waiting_services": "⏳ サービスの完全起動を待機中...",  
    "startup_complete": "🎉 AIForge Docker統合起動が完了しました！",  
    "ready_to_use": "💡 AIForgeの使用を開始できます",  
    "service_start_failed": "❌ Dockerサービスの起動に失敗しました: {error}",  
    "startup_exception": "❌ 起動プロセスで例外が発生しました: {error}",  
    "stopping_services": "🛑 AIForge Dockerサービスを停止中...",  
    "stop_success": "✅ Dockerサービスが正常に停止しました",  
    "stop_failed": "❌ Dockerサービスの停止に失敗しました: {error}",  
    "service_status": "📊 AIForge Dockerサービスステータス:",  
    "cannot_get_status": "❌ サービスステータスを取得できません",  
    "cleaning_resources": "🧹 AIForge Dockerリソースをクリーンアップ中...",  
    "cleanup_success": "✅ Dockerリソースのクリーンアップが完了しました",  
    "cleanup_failed": "❌ クリーンアップに失敗しました: {error}",  
    "deep_cleanup_start": "🔥 AIForgeディープクリーンアップを実行中...",  
    "deep_cleanup_warning": "⚠️ これによりAIForge関連のDockerリソースが削除されますが、Python、SearXNG、Nginxベースイメージは保持されます",  
    "stopping_all_services": "🛑 すべてのサービスを停止中...",  
    "cleaning_built_images": "🗑️ AIForgeビルドイメージをクリーンアップ中...",  
    "cleaning_build_cache": "🧹 ビルドキャッシュをクリーンアップ中...",  
    "cleaning_dangling_resources": "🌐 未使用リソースをクリーンアップ中...",  
    "deep_cleanup_success": "✅ ディープクリーンアップが完了しました。ベースイメージは保持されています",  
    "deep_cleanup_failed": "❌ ディープクリーンアップに失敗しました: {error}",  
    "removed_images": "✅ {count}個のAIForgeビルドイメージを削除しました",  
    "no_images_to_remove": "ℹ️ クリーンアップするAIForgeビルドイメージが見つかりませんでした",  
    "cleanup_images_error": "⚠️ ビルドイメージのクリーンアップでエラーが発生しました: {error}",  
    "health_check": "🏥 サービスヘルスチェック:",  
    "service_running": "✅ {service}: 正常に実行中",  
    "service_not_running": "❌ {service}: {status}",  
    "service_status_unknown": "⚠️ {service}: ステータス不明",  
    "service_urls": "🌐 サービスアクセスURL:",  
    "aiforge_web_url": "- AIForge Web: http://localhost:8000",  
    "searxng_url": "- SearXNG: http://localhost:55510",  
    "admin_panel_url": "- 管理パネル: http://localhost:8000/admin",  
    "pyyaml_not_installed": "⚠️ PyYAMLがインストールされていません。SearXNG設定の更新をスキップします",  
    "searxng_config_not_exists": "ℹ️ SearXNG設定ファイルが存在しません。フォーマット更新をスキップします",  
    "searxng_config_updated": "✅ SearXNG設定が複数の出力フォーマットをサポートするように更新されました",  
    "searxng_config_latest": "✅ SearXNG設定は最新です",  
    "searxng_config_update_failed": "⚠️ SearXNG設定の更新に失敗しました: {error}",  
    "user_interrupted": "⚠️ ユーザーが操作を中断しました",  
    "execution_exception": "❌ 実行例外: {error}",  
    "cli": {  
      "description": "AIForge Docker統合サービス管理",  
      "action_help": "アクションタイプ",  
      "dev_help": "開発モード起動（コードホットリロード）",  
      "searxng_help": "SearXNG検索サービスを有効にする",  
      "epilog": "統合使用例:\n    # ワンクリックでプロダクションモード開始（SearXNGなし）\n    aiforge-docker start\n\n    # ワンクリックでプロダクションモード開始（SearXNGあり）\n    aiforge-docker start --searxng\n\n    # ワンクリックで開発モード開始（コードホットリロード、SearXNGあり）\n    aiforge-docker start --dev --searxng\n\n    # すべてのサービスを停止\n    aiforge-docker stop\n\n    # サービス状態を表示\n    aiforge-docker status\n\n    # Dockerリソースをクリーンアップ\n    aiforge-docker cleanup\n\n    # リソースの深度クリーンアップ\n    aiforge-docker deep-cleanup\n\n開発版使用例:\n    # 起動スクリプトを使用（推奨）\n    ./aiforge-docker.sh start --dev\n    ./aiforge-docker.sh deep-cleanup\n\n言語設定:\n    # 環境変数で動的に言語を指定\n    AIFORGE_LOCALE=en ./aiforge-docker.sh start\n    AIFORGE_LOCALE=ja ./aiforge-docker.sh status\n    \n    # Windows PowerShell\n    $env:AIFORGE_LOCALE=\"en\"; ./aiforge-docker.bat start\n\n機能説明:\n    ✅ Docker環境の自動検出\n    ✅ スマートイメージビルド（重複ビルドを回避）\n    ✅ リアルタイムビルド進捗\n    ✅ SearXNGオプション有効化\n    ✅ サービスヘルスチェック\n    ✅ ワンクリックリソースクリーンアップ\n    ✅ 多言語サポート (zh|en|ar|de|es|fr|hi|ja|ko|pt|ru|vi)"  
    }  
  }
}