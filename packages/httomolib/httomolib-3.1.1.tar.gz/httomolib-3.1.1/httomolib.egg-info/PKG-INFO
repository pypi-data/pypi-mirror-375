Metadata-Version: 2.4
Name: httomolib
Version: 3.1.1
Summary: Commonly used tomography data processing methods at DLS.
Author-email: Daniil Kazantsev <daniil.kazantsev@diamond.ac.uk>, Yousef Moazzam <yousef.moazzam@diamond.ac.uk>, Naman Gera <naman.gera@diamond.ac.uk>
License-Expression: BSD-3-Clause
Project-URL: Repository, https://github.com/DiamondLightSource/httomolib
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.10
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: pillow
Requires-Dist: scikit-image
Requires-Dist: aiofiles
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-xdist; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: pyproject-flake8; extra == "dev"
Requires-Dist: pydocstyle; extra == "dev"
Requires-Dist: toml; extra == "dev"
Requires-Dist: imageio; extra == "dev"
Requires-Dist: setuptools-git-versioning; extra == "dev"
Dynamic: license-file

HTTomolib is a library of methods for tomography
-------------------------------------------------

**HTTomolib** is a collection of CPU-only image processing methods in Python for computed tomography.

Purpose of HTTomolib
====================

**HTTomolib** can be used as a stand-alone library, however, it has been specifically developed to 
work together with the `HTTomo <https://diamondlightsource.github.io/httomo/>`_ package.
HTTomo is a user interface (UI) written in Python for fast big data processing using MPI protocols.
**HTTomolib** methods for processing using GPU are accessible in the dedicated
`HTTomolibGPU <https://github.com/DiamondLightSource/httomolibgpu>`_ repository. 

Installation
============

HTTomolib is available on PyPI, so it can be installed into either a virtual environment or a
conda environment.

Virtual environment
~~~~~~~~~~~~~~~~~~~
.. code-block:: console

   $ python -m venv httomolib
   $ source httomolib/bin/activate
   $ pip install httomolib

Conda environment
~~~~~~~~~~~~~~~~~
.. code-block:: console

   $ conda create --name httomolib # create a fresh conda environment
   $ conda activate httomolib # activate the environment
   $ pip install httomolib

Setup the development environment:
==================================

.. code-block:: console
    
   $ git clone git@github.com:DiamondLightSource/httomolib.git # clone the repo
   $ conda create --name httomolib # create a fresh conda environment
   $ conda activate httomolib # activate the environment
   $ pip install -e . # development mode
