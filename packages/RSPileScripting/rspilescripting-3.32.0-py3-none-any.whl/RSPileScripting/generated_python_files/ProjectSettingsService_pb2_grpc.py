# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import ProjectSettingsService_pb2 as ProjectSettingsService__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in ProjectSettingsService_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ProjectSettingsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUnits = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetUnits',
                request_serializer=ProjectSettingsService__pb2.GetUnitsRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetUnitsResponse.FromString,
                _registered_method=True)
        self.SetUnits = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetUnits',
                request_serializer=ProjectSettingsService__pb2.SetUnitsRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetUnitsResponse.FromString,
                _registered_method=True)
        self.GetProgramMode = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetProgramMode',
                request_serializer=ProjectSettingsService__pb2.GetProgramModeRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetProgramModeResponse.FromString,
                _registered_method=True)
        self.SetProgramMode = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetProgramMode',
                request_serializer=ProjectSettingsService__pb2.SetProgramModeRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetProgramModeResponse.FromString,
                _registered_method=True)
        self.GetCapacityCalculationType = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetCapacityCalculationType',
                request_serializer=ProjectSettingsService__pb2.GetCapacityCalculationTypeRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetCapacityCalculationTypeResponse.FromString,
                _registered_method=True)
        self.SetCapacityCalculationType = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetCapacityCalculationType',
                request_serializer=ProjectSettingsService__pb2.SetCapacityCalculationTypeRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetCapacityCalculationTypeResponse.FromString,
                _registered_method=True)
        self.GetCalculateAllowableCapacities = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetCalculateAllowableCapacities',
                request_serializer=ProjectSettingsService__pb2.GetCalculateAllowableCapacitiesRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetCalculateAllowableCapacitiesResponse.FromString,
                _registered_method=True)
        self.SetCalculateAllowableCapacities = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetCalculateAllowableCapacities',
                request_serializer=ProjectSettingsService__pb2.SetCalculateAllowableCapacitiesRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetCalculateAllowableCapacitiesResponse.FromString,
                _registered_method=True)
        self.GetLimitAverageStress = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetLimitAverageStress',
                request_serializer=ProjectSettingsService__pb2.GetLimitAverageStressRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetLimitAverageStressResponse.FromString,
                _registered_method=True)
        self.SetLimitAverageStress = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetLimitAverageStress',
                request_serializer=ProjectSettingsService__pb2.SetLimitAverageStressRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetLimitAverageStressResponse.FromString,
                _registered_method=True)
        self.GetHelicalOptions = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetHelicalOptions',
                request_serializer=ProjectSettingsService__pb2.GetHelicalOptionsRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetHelicalOptionsResponse.FromString,
                _registered_method=True)
        self.SetHelicalOptions = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetHelicalOptions',
                request_serializer=ProjectSettingsService__pb2.SetHelicalOptionsRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetHelicalOptionsResponse.FromString,
                _registered_method=True)
        self.GetPileAnalysisType = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetPileAnalysisType',
                request_serializer=ProjectSettingsService__pb2.GetPileAnalysisTypeRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetPileAnalysisTypeResponse.FromString,
                _registered_method=True)
        self.SetPileAnalysisType = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetPileAnalysisType',
                request_serializer=ProjectSettingsService__pb2.SetPileAnalysisTypeRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetPileAnalysisTypeResponse.FromString,
                _registered_method=True)
        self.GetGroundwater = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetGroundwater',
                request_serializer=ProjectSettingsService__pb2.GetGroundwaterRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetGroundwaterResponse.FromString,
                _registered_method=True)
        self.SetGroundwater = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetGroundwater',
                request_serializer=ProjectSettingsService__pb2.SetGroundwaterRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetGroundwaterResponse.FromString,
                _registered_method=True)
        self.GetEurocodeParameters = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetEurocodeParameters',
                request_serializer=ProjectSettingsService__pb2.GetEurocodeParametersRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetEurocodeParametersResponse.FromString,
                _registered_method=True)
        self.SetEurocodeParameters = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetEurocodeParameters',
                request_serializer=ProjectSettingsService__pb2.SetEurocodeParametersRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetEurocodeParametersResponse.FromString,
                _registered_method=True)
        self.GetInteractionDiagram = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetInteractionDiagram',
                request_serializer=ProjectSettingsService__pb2.GetInteractionDiagramRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetInteractionDiagramResponse.FromString,
                _registered_method=True)
        self.SetInteractionDiagram = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetInteractionDiagram',
                request_serializer=ProjectSettingsService__pb2.SetInteractionDiagramRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetInteractionDiagramResponse.FromString,
                _registered_method=True)
        self.GetAdvanced = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/GetAdvanced',
                request_serializer=ProjectSettingsService__pb2.GetAdvancedRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.GetAdvancedResponse.FromString,
                _registered_method=True)
        self.SetAdvanced = channel.unary_unary(
                '/grpc_project_settings.ProjectSettings/SetAdvanced',
                request_serializer=ProjectSettingsService__pb2.SetAdvancedRequest.SerializeToString,
                response_deserializer=ProjectSettingsService__pb2.SetAdvancedResponse.FromString,
                _registered_method=True)


class ProjectSettingsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUnits(self, request, context):
        """General settings methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUnits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProgramMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetProgramMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCapacityCalculationType(self, request, context):
        """Capacity calculation type methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCapacityCalculationType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCalculateAllowableCapacities(self, request, context):
        """Calculate Allowable Capacities Section - grouped together
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCalculateAllowableCapacities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLimitAverageStress(self, request, context):
        """Limit Average Stress - single boolean
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLimitAverageStress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHelicalOptions(self, request, context):
        """Helical options - grouped together
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetHelicalOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPileAnalysisType(self, request, context):
        """Pile Analysis Type - grouped together
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPileAnalysisType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroundwater(self, request, context):
        """Groundwater methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetGroundwater(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEurocodeParameters(self, request, context):
        """Eurocode Parameters methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEurocodeParameters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInteractionDiagram(self, request, context):
        """Interaction Diagram methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetInteractionDiagram(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAdvanced(self, request, context):
        """Advanced settings methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAdvanced(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectSettingsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUnits': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnits,
                    request_deserializer=ProjectSettingsService__pb2.GetUnitsRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetUnitsResponse.SerializeToString,
            ),
            'SetUnits': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUnits,
                    request_deserializer=ProjectSettingsService__pb2.SetUnitsRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetUnitsResponse.SerializeToString,
            ),
            'GetProgramMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProgramMode,
                    request_deserializer=ProjectSettingsService__pb2.GetProgramModeRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetProgramModeResponse.SerializeToString,
            ),
            'SetProgramMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetProgramMode,
                    request_deserializer=ProjectSettingsService__pb2.SetProgramModeRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetProgramModeResponse.SerializeToString,
            ),
            'GetCapacityCalculationType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCapacityCalculationType,
                    request_deserializer=ProjectSettingsService__pb2.GetCapacityCalculationTypeRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetCapacityCalculationTypeResponse.SerializeToString,
            ),
            'SetCapacityCalculationType': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCapacityCalculationType,
                    request_deserializer=ProjectSettingsService__pb2.SetCapacityCalculationTypeRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetCapacityCalculationTypeResponse.SerializeToString,
            ),
            'GetCalculateAllowableCapacities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCalculateAllowableCapacities,
                    request_deserializer=ProjectSettingsService__pb2.GetCalculateAllowableCapacitiesRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetCalculateAllowableCapacitiesResponse.SerializeToString,
            ),
            'SetCalculateAllowableCapacities': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCalculateAllowableCapacities,
                    request_deserializer=ProjectSettingsService__pb2.SetCalculateAllowableCapacitiesRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetCalculateAllowableCapacitiesResponse.SerializeToString,
            ),
            'GetLimitAverageStress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLimitAverageStress,
                    request_deserializer=ProjectSettingsService__pb2.GetLimitAverageStressRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetLimitAverageStressResponse.SerializeToString,
            ),
            'SetLimitAverageStress': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLimitAverageStress,
                    request_deserializer=ProjectSettingsService__pb2.SetLimitAverageStressRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetLimitAverageStressResponse.SerializeToString,
            ),
            'GetHelicalOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHelicalOptions,
                    request_deserializer=ProjectSettingsService__pb2.GetHelicalOptionsRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetHelicalOptionsResponse.SerializeToString,
            ),
            'SetHelicalOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.SetHelicalOptions,
                    request_deserializer=ProjectSettingsService__pb2.SetHelicalOptionsRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetHelicalOptionsResponse.SerializeToString,
            ),
            'GetPileAnalysisType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPileAnalysisType,
                    request_deserializer=ProjectSettingsService__pb2.GetPileAnalysisTypeRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetPileAnalysisTypeResponse.SerializeToString,
            ),
            'SetPileAnalysisType': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPileAnalysisType,
                    request_deserializer=ProjectSettingsService__pb2.SetPileAnalysisTypeRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetPileAnalysisTypeResponse.SerializeToString,
            ),
            'GetGroundwater': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroundwater,
                    request_deserializer=ProjectSettingsService__pb2.GetGroundwaterRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetGroundwaterResponse.SerializeToString,
            ),
            'SetGroundwater': grpc.unary_unary_rpc_method_handler(
                    servicer.SetGroundwater,
                    request_deserializer=ProjectSettingsService__pb2.SetGroundwaterRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetGroundwaterResponse.SerializeToString,
            ),
            'GetEurocodeParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEurocodeParameters,
                    request_deserializer=ProjectSettingsService__pb2.GetEurocodeParametersRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetEurocodeParametersResponse.SerializeToString,
            ),
            'SetEurocodeParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEurocodeParameters,
                    request_deserializer=ProjectSettingsService__pb2.SetEurocodeParametersRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetEurocodeParametersResponse.SerializeToString,
            ),
            'GetInteractionDiagram': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInteractionDiagram,
                    request_deserializer=ProjectSettingsService__pb2.GetInteractionDiagramRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetInteractionDiagramResponse.SerializeToString,
            ),
            'SetInteractionDiagram': grpc.unary_unary_rpc_method_handler(
                    servicer.SetInteractionDiagram,
                    request_deserializer=ProjectSettingsService__pb2.SetInteractionDiagramRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetInteractionDiagramResponse.SerializeToString,
            ),
            'GetAdvanced': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdvanced,
                    request_deserializer=ProjectSettingsService__pb2.GetAdvancedRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.GetAdvancedResponse.SerializeToString,
            ),
            'SetAdvanced': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAdvanced,
                    request_deserializer=ProjectSettingsService__pb2.SetAdvancedRequest.FromString,
                    response_serializer=ProjectSettingsService__pb2.SetAdvancedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc_project_settings.ProjectSettings', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpc_project_settings.ProjectSettings', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProjectSettings(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUnits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetUnits',
            ProjectSettingsService__pb2.GetUnitsRequest.SerializeToString,
            ProjectSettingsService__pb2.GetUnitsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetUnits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetUnits',
            ProjectSettingsService__pb2.SetUnitsRequest.SerializeToString,
            ProjectSettingsService__pb2.SetUnitsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProgramMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetProgramMode',
            ProjectSettingsService__pb2.GetProgramModeRequest.SerializeToString,
            ProjectSettingsService__pb2.GetProgramModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetProgramMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetProgramMode',
            ProjectSettingsService__pb2.SetProgramModeRequest.SerializeToString,
            ProjectSettingsService__pb2.SetProgramModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCapacityCalculationType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetCapacityCalculationType',
            ProjectSettingsService__pb2.GetCapacityCalculationTypeRequest.SerializeToString,
            ProjectSettingsService__pb2.GetCapacityCalculationTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCapacityCalculationType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetCapacityCalculationType',
            ProjectSettingsService__pb2.SetCapacityCalculationTypeRequest.SerializeToString,
            ProjectSettingsService__pb2.SetCapacityCalculationTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCalculateAllowableCapacities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetCalculateAllowableCapacities',
            ProjectSettingsService__pb2.GetCalculateAllowableCapacitiesRequest.SerializeToString,
            ProjectSettingsService__pb2.GetCalculateAllowableCapacitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCalculateAllowableCapacities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetCalculateAllowableCapacities',
            ProjectSettingsService__pb2.SetCalculateAllowableCapacitiesRequest.SerializeToString,
            ProjectSettingsService__pb2.SetCalculateAllowableCapacitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLimitAverageStress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetLimitAverageStress',
            ProjectSettingsService__pb2.GetLimitAverageStressRequest.SerializeToString,
            ProjectSettingsService__pb2.GetLimitAverageStressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLimitAverageStress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetLimitAverageStress',
            ProjectSettingsService__pb2.SetLimitAverageStressRequest.SerializeToString,
            ProjectSettingsService__pb2.SetLimitAverageStressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHelicalOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetHelicalOptions',
            ProjectSettingsService__pb2.GetHelicalOptionsRequest.SerializeToString,
            ProjectSettingsService__pb2.GetHelicalOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetHelicalOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetHelicalOptions',
            ProjectSettingsService__pb2.SetHelicalOptionsRequest.SerializeToString,
            ProjectSettingsService__pb2.SetHelicalOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPileAnalysisType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetPileAnalysisType',
            ProjectSettingsService__pb2.GetPileAnalysisTypeRequest.SerializeToString,
            ProjectSettingsService__pb2.GetPileAnalysisTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetPileAnalysisType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetPileAnalysisType',
            ProjectSettingsService__pb2.SetPileAnalysisTypeRequest.SerializeToString,
            ProjectSettingsService__pb2.SetPileAnalysisTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGroundwater(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetGroundwater',
            ProjectSettingsService__pb2.GetGroundwaterRequest.SerializeToString,
            ProjectSettingsService__pb2.GetGroundwaterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetGroundwater(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetGroundwater',
            ProjectSettingsService__pb2.SetGroundwaterRequest.SerializeToString,
            ProjectSettingsService__pb2.SetGroundwaterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEurocodeParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetEurocodeParameters',
            ProjectSettingsService__pb2.GetEurocodeParametersRequest.SerializeToString,
            ProjectSettingsService__pb2.GetEurocodeParametersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetEurocodeParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetEurocodeParameters',
            ProjectSettingsService__pb2.SetEurocodeParametersRequest.SerializeToString,
            ProjectSettingsService__pb2.SetEurocodeParametersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInteractionDiagram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetInteractionDiagram',
            ProjectSettingsService__pb2.GetInteractionDiagramRequest.SerializeToString,
            ProjectSettingsService__pb2.GetInteractionDiagramResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetInteractionDiagram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetInteractionDiagram',
            ProjectSettingsService__pb2.SetInteractionDiagramRequest.SerializeToString,
            ProjectSettingsService__pb2.SetInteractionDiagramResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAdvanced(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/GetAdvanced',
            ProjectSettingsService__pb2.GetAdvancedRequest.SerializeToString,
            ProjectSettingsService__pb2.GetAdvancedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAdvanced(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_project_settings.ProjectSettings/SetAdvanced',
            ProjectSettingsService__pb2.SetAdvancedRequest.SerializeToString,
            ProjectSettingsService__pb2.SetAdvancedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
