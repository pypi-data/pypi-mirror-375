[tool.poetry]
name = "dialectical-framework"
version = "0.4.4"
description = "A dialectical framework for augmented intelligence. AI reasoning powered with dialectics supports humans in: system optimization (psychology, engineering, business, politics, etc.); dispute resolution (mediation, conflicts, negotiations, etc.); decision-making (dilemmas, challenging situations, win-win, etc.)."
authors = ["Evaldas Taroza <evaldas@dialexity.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/dialexity/dialectical-framework"
repository = "https://github.com/dialexity/dialectical-framework"
keywords = ["dialectics", "reasoning", "ai", "philosophy", "logic"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[[tool.poetry.packages]]
include = "dialectical_framework"
from = "src"



[tool.poetry.dependencies]
python = "^3.11"
mirascope = {extras = [
    "azure",
    "openai",
    "anthropic",
    "litellm",
    "bedrock",
    "langfuse",
    "tenacity"
], version = "^1.25.6"}
python-dotenv = "^1.1.1"
tabulate = "^0.9.0"
dependency-injector = "^4.48.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
black = "^25.1.0"
isort = "^6.0.1"
#flake8 = "^7.1.2"
pytest-asyncio = "^1.1.0"
autoflake = "^2.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::DeprecationWarning:mirascope.*",
    "ignore::UserWarning:mirascope.*",
    "ignore::DeprecationWarning:pydantic._internal._config",
    "ignore::DeprecationWarning:httpx._models",
    "ignore::UserWarning:pydantic.main"
]