Metadata-Version: 2.4
Name: codex-python
Version: 0.1.1
Summary: A minimal Python library scaffold for codex-python
Project-URL: Homepage, https://github.com/gersmann/codex-python
Project-URL: Repository, https://github.com/gersmann/codex-python
Project-URL: Issues, https://github.com/gersmann/codex-python/issues
License: MIT License
        
        Copyright (c) 2025 gersmann
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
License-File: LICENSE
Keywords: codex,library,scaffold
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.13
Classifier: Typing :: Typed
Requires-Python: >=3.13
Description-Content-Type: text/markdown

# codex-python

A minimal Python library scaffold using `uv` with Python 3.13+.

## Quickstart

- Requires Python 3.13+.
- Package import name: `codex`.
- Distribution name (PyPI): `codex-python`.

### Repo

- Git: `git@github.com:gersmann/codex-python.git`
- URL: https://github.com/gersmann/codex-python

## Usage

Basic non-interactive execution via Codex CLI:

```
from codex import run_exec

out = run_exec("explain this repo")
print(out)
```

Options:

- Choose model: `run_exec("...", model="gpt-4.1")`
- Full auto: `run_exec("scaffold a cli", full_auto=True)`
- Run in another dir: `run_exec("...", cd="/path/to/project")`

Using a client with defaults:

```
from codex import CodexClient

client = CodexClient(model="gpt-4.1", full_auto=True)
print(client.run("explain this repo"))
```

### Install uv

- macOS (Homebrew): `brew install uv`
- Or via install script:
  - Unix/macOS: `curl -LsSf https://astral.sh/uv/install.sh | sh`
  - Windows (PowerShell): `iwr https://astral.sh/uv/install.ps1 -UseBasicParsing | iex`

See: https://docs.astral.sh/uv/

### Create a virtual env (optional)

```
uv python install 3.13
uv venv --python 3.13
. .venv/bin/activate  # or .venv\Scripts\activate on Windows
```

### Build

```
uv build
```

Artifacts appear in `dist/` (`.whl` and `.tar.gz`).

### Publish to PyPI

- Manual:

```
export PYPI_API_TOKEN="pypi-XXXX"  # create at https://pypi.org/manage/account/token/
uv publish --token "$PYPI_API_TOKEN"
```

- GitHub Actions (Trusted Publishing): enable PyPI Trusted Publishing for
  `gersmann/codex-python` and push a tag like `v0.1.0`. No token is needed.
  The workflow at `.github/workflows/publish.yml` requests an OIDC token and
  runs `uv publish --trusted-publishing=always` on `v*` tags.

### Dev tooling

- Lint: `make lint` (ruff + mypy)
- Tests: `make test` (pytest)
- Format: `make fmt` (ruff formatter)
 - Pre-commit: `uvx pre-commit install && uvx pre-commit run --all-files`

## Project Layout

```
.
├── codex/              # package root (import name: codex)
│   └── __init__.py     # version lives here
├── pyproject.toml      # PEP 621 metadata, hatchling build backend
├── README.md
└── .gitignore
```

## Versioning

Version is managed via `codex/__init__.py` and exposed as `__version__`. The build uses Hatch’s version source.

## Python Compatibility

- Requires Python `>=3.13`.
