name: CI
on:
  pull_request:
jobs:
  checks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install uv
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6

      - name: Install prek
        run: uv tool install prek --force

      - name: Install yamllint
        run: |
          uv tool install yamllint --force
          yamllint --version

      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0

      - name: Install Rust components
        run: rustup component add rustfmt clippy llvm-tools-preview

      - name: Install cargo-nextest
        uses: taiki-e/install-action@133a13585eb96b576726757d256e9531cd6dddf2
        with:
          tool: cargo-nextest

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@133a13585eb96b576726757d256e9531cd6dddf2
        with:
          tool: cargo-llvm-cov

      - name: Run prek hooks (lint and static checks)
        env:
          SKIP: no-commit-to-branch,nextest
        run: prek run --all-files

      - name: Run tests with coverage (nextest + cargo-llvm-cov)
        run: |
          set -euo pipefail
          echo '### Test Coverage (nextest + cargo-llvm-cov)' > coverage.md
          echo '```text' >> coverage.md
          cargo llvm-cov nextest --summary-only --run-ignored all | tee -a coverage.md
          echo '```' >> coverage.md
          # Produce LCOV for detailed per-line/branch analysis
          cargo llvm-cov nextest --lcov --output-path lcov.info --run-ignored all
          echo '' >> coverage.md
          echo '#### Missed Lines (per file)' >> coverage.md
          awk -F: '
            /^SF:/ {f=$2}
            /^DA:/ {split($2,a,","); if (a[2]==0) lines[f]=lines[f] a[1] ","}
            END {
              for (f in lines) {
                gsub(/,$/, "", lines[f]);
                printf("- %s: %s\n", f, lines[f]);
              }
            }
          ' lcov.info | sort >> coverage.md || true
          echo '' >> coverage.md
          if grep -q '^BRDA:' lcov.info; then
            echo '#### Missed Branches (per file)' >> coverage.md
            awk -F: '
              /^SF:/ {f=$2}
              /^BRDA:/ {
                split($2,a,",");
                # a[4] is taken count; treat 0 or - as missed
                if (a[4]=="-" || a[4]==0) {
                  branches[f]=branches[f] sprintf("%s(b%s)", a[1], a[3]) ",";
                }
              }
              END {
                for (f in branches) {
                  gsub(/,$/, "", branches[f]);
                  printf("- %s: %s\n", f, branches[f]);
                }
              }
            ' lcov.info | sort >> coverage.md || true
          fi

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage.md
            lcov.info

      - name: Comment coverage summary on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405
        with:
          header: ryl-coverage
          path: coverage.md
